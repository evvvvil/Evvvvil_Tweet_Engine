<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tweetinvi.Core.0.9.4.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.TweetinviCoreDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Tweetinvi.Core</summary>
        </member>
        <member name="T:Tweetinvi.Core.Enum.Fakes.ShimLanguageAttribute">
            <summary>Shim type of Tweetinvi.Core.Enum.LanguageAttribute</summary>
        </member>
        <member name="M:Tweetinvi.Core.Enum.Fakes.ShimLanguageAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Enum.Fakes.ShimLanguageAttribute.#ctor(Tweetinvi.Core.Enum.LanguageAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Enum.Fakes.ShimLanguageAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Enum.Fakes.ShimLanguageAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Enum.Fakes.ShimLanguageAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Enum.Fakes.ShimLanguageAttribute.ConstructorString">
            <summary>Sets the shim of LanguageAttribute.LanguageAttribute(String lang)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Enum.Fakes.ShimLanguageAttribute.LanguageGet">
            <summary>Sets the shim of LanguageAttribute.get_Language()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Enum.Fakes.ShimLanguageAttribute.LanguageSetString">
            <summary>Sets the shim of LanguageAttribute.set_Language(String value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Enum.Fakes.ShimLanguageAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Enum.Fakes.ShimLanguageAttribute.AllInstances.LanguageGet">
            <summary>Sets the shim of LanguageAttribute.get_Language()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Enum.Fakes.ShimLanguageAttribute.AllInstances.LanguageSetString">
            <summary>Sets the shim of LanguageAttribute.set_Language(String value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute">
            <summary>Stub type of Tweetinvi.Core.Enum.LanguageAttribute</summary>
        </member>
        <member name="M:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubLanguageAttribute</summary>
        </member>
        <member name="M:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Enum.Fakes.StubLanguageAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimDisconnectMessageEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.DisconnectMessageEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimDisconnectMessageEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimDisconnectMessageEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.DisconnectMessageEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimDisconnectMessageEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimDisconnectMessageEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimDisconnectMessageEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimDisconnectMessageEventArgs.ConstructorIDisconnectMessage">
            <summary>Sets the shim of DisconnectMessageEventArgs.DisconnectMessageEventArgs(IDisconnectMessage disconnectMessage)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimDisconnectMessageEventArgs.DisconnectMessageGet">
            <summary>Sets the shim of DisconnectMessageEventArgs.get_DisconnectMessage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimDisconnectMessageEventArgs.DisconnectMessageSetIDisconnectMessage">
            <summary>Sets the shim of DisconnectMessageEventArgs.set_DisconnectMessage(IDisconnectMessage value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimDisconnectMessageEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimDisconnectMessageEventArgs.AllInstances.DisconnectMessageGet">
            <summary>Sets the shim of DisconnectMessageEventArgs.get_DisconnectMessage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimDisconnectMessageEventArgs.AllInstances.DisconnectMessageSetIDisconnectMessage">
            <summary>Sets the shim of DisconnectMessageEventArgs.set_DisconnectMessage(IDisconnectMessage value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimExceptionEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.ExceptionEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimExceptionEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimExceptionEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.ExceptionEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimExceptionEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimExceptionEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimExceptionEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimExceptionEventArgs.ConstructorException">
            <summary>Sets the shim of ExceptionEventArgs.ExceptionEventArgs(Exception ex)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimExceptionEventArgs.ExceptionGet">
            <summary>Sets the shim of ExceptionEventArgs.get_Exception()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimExceptionEventArgs.ExceptionSetException">
            <summary>Sets the shim of ExceptionEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimExceptionEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimExceptionEventArgs.AllInstances.ExceptionGet">
            <summary>Sets the shim of ExceptionEventArgs.get_Exception()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimExceptionEventArgs.AllInstances.ExceptionSetException">
            <summary>Sets the shim of ExceptionEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`1">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.GenericEventArgs`1</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`1.#ctor(Tweetinvi.Core.Events.EventArguments.GenericEventArgs{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`1.ConstructorT0">
            <summary>Sets the shim of GenericEventArgs`1.GenericEventArgs`1(!0 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`1.ValueGet">
            <summary>Sets the shim of GenericEventArgs`1.get_Value()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`1.ValueSetT0">
            <summary>Sets the shim of GenericEventArgs`1.set_Value(!0 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`1.AllInstances.ValueGet">
            <summary>Sets the shim of GenericEventArgs`1.get_Value()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`1.AllInstances.ValueSetT0">
            <summary>Sets the shim of GenericEventArgs`1.set_Value(!0 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.GenericEventArgs`2</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.#ctor(Tweetinvi.Core.Events.EventArguments.GenericEventArgs{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.ConstructorT0T1">
            <summary>Sets the shim of GenericEventArgs`2.GenericEventArgs`2(!0 value, !1 value2)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.Value2Get">
            <summary>Sets the shim of GenericEventArgs`2.get_Value2()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.Value2SetT1">
            <summary>Sets the shim of GenericEventArgs`2.set_Value2(!1 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.ValueGet">
            <summary>Sets the shim of GenericEventArgs`2.get_Value()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.ValueSetT0">
            <summary>Sets the shim of GenericEventArgs`2.set_Value(!0 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.AllInstances.Value2Get">
            <summary>Sets the shim of GenericEventArgs`2.get_Value2()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.AllInstances.Value2SetT1">
            <summary>Sets the shim of GenericEventArgs`2.set_Value2(!1 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.AllInstances.ValueGet">
            <summary>Sets the shim of GenericEventArgs`2.get_Value()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`2.AllInstances.ValueSetT0">
            <summary>Sets the shim of GenericEventArgs`2.set_Value(!0 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.GenericEventArgs`3</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.#ctor(Tweetinvi.Core.Events.EventArguments.GenericEventArgs{`0,`1,`2})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.ConstructorT0T1T2">
            <summary>Sets the shim of GenericEventArgs`3.GenericEventArgs`3(!0 value, !1 value2, !2 value3)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.Value2Get">
            <summary>Sets the shim of GenericEventArgs`3.get_Value2()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.Value2SetT1">
            <summary>Sets the shim of GenericEventArgs`3.set_Value2(!1 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.Value3Get">
            <summary>Sets the shim of GenericEventArgs`3.get_Value3()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.Value3SetT2">
            <summary>Sets the shim of GenericEventArgs`3.set_Value3(!2 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.ValueGet">
            <summary>Sets the shim of GenericEventArgs`3.get_Value()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.ValueSetT0">
            <summary>Sets the shim of GenericEventArgs`3.set_Value(!0 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.AllInstances.Value2Get">
            <summary>Sets the shim of GenericEventArgs`3.get_Value2()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.AllInstances.Value2SetT1">
            <summary>Sets the shim of GenericEventArgs`3.set_Value2(!1 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.AllInstances.Value3Get">
            <summary>Sets the shim of GenericEventArgs`3.get_Value3()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.AllInstances.Value3SetT2">
            <summary>Sets the shim of GenericEventArgs`3.set_Value3(!2 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.AllInstances.ValueGet">
            <summary>Sets the shim of GenericEventArgs`3.get_Value()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`3.AllInstances.ValueSetT0">
            <summary>Sets the shim of GenericEventArgs`3.set_Value(!0 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.GenericEventArgs`4</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.#ctor(Tweetinvi.Core.Events.EventArguments.GenericEventArgs{`0,`1,`2,`3})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.ConstructorT0T1T2T3">
            <summary>Sets the shim of GenericEventArgs`4.GenericEventArgs`4(!0 value, !1 value2, !2 value3, !3 value4)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.Value2Get">
            <summary>Sets the shim of GenericEventArgs`4.get_Value2()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.Value2SetT1">
            <summary>Sets the shim of GenericEventArgs`4.set_Value2(!1 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.Value3Get">
            <summary>Sets the shim of GenericEventArgs`4.get_Value3()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.Value3SetT2">
            <summary>Sets the shim of GenericEventArgs`4.set_Value3(!2 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.Value4Get">
            <summary>Sets the shim of GenericEventArgs`4.get_Value4()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.Value4SetT3">
            <summary>Sets the shim of GenericEventArgs`4.set_Value4(!3 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.ValueGet">
            <summary>Sets the shim of GenericEventArgs`4.get_Value()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.ValueSetT0">
            <summary>Sets the shim of GenericEventArgs`4.set_Value(!0 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.AllInstances.Value2Get">
            <summary>Sets the shim of GenericEventArgs`4.get_Value2()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.AllInstances.Value2SetT1">
            <summary>Sets the shim of GenericEventArgs`4.set_Value2(!1 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.AllInstances.Value3Get">
            <summary>Sets the shim of GenericEventArgs`4.get_Value3()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.AllInstances.Value3SetT2">
            <summary>Sets the shim of GenericEventArgs`4.set_Value3(!2 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.AllInstances.Value4Get">
            <summary>Sets the shim of GenericEventArgs`4.get_Value4()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.AllInstances.Value4SetT3">
            <summary>Sets the shim of GenericEventArgs`4.set_Value4(!3 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.AllInstances.ValueGet">
            <summary>Sets the shim of GenericEventArgs`4.get_Value()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimGenericEventArgs`4.AllInstances.ValueSetT0">
            <summary>Sets the shim of GenericEventArgs`4.set_Value(!0 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimJsonObjectEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.JsonObjectEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimJsonObjectEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimJsonObjectEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.JsonObjectEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimJsonObjectEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimJsonObjectEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimJsonObjectEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimJsonObjectEventArgs.ConstructorString">
            <summary>Sets the shim of JsonObjectEventArgs.JsonObjectEventArgs(String json)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimJsonObjectEventArgs.JsonGet">
            <summary>Sets the shim of JsonObjectEventArgs.get_Json()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimJsonObjectEventArgs.JsonSetString">
            <summary>Sets the shim of JsonObjectEventArgs.set_Json(String value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimJsonObjectEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimJsonObjectEventArgs.AllInstances.JsonGet">
            <summary>Sets the shim of JsonObjectEventArgs.get_Json()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimJsonObjectEventArgs.AllInstances.JsonSetString">
            <summary>Sets the shim of JsonObjectEventArgs.set_Json(String value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLimitReachedEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.LimitReachedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLimitReachedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLimitReachedEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.LimitReachedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLimitReachedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLimitReachedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLimitReachedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLimitReachedEventArgs.ConstructorInt32">
            <summary>Sets the shim of LimitReachedEventArgs.LimitReachedEventArgs(Int32 numberOfTweetsNotReceived)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLimitReachedEventArgs.NumberOfTweetsNotReceivedGet">
            <summary>Sets the shim of LimitReachedEventArgs.get_NumberOfTweetsNotReceived()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLimitReachedEventArgs.NumberOfTweetsNotReceivedSetInt32">
            <summary>Sets the shim of LimitReachedEventArgs.set_NumberOfTweetsNotReceived(Int32 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLimitReachedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLimitReachedEventArgs.AllInstances.NumberOfTweetsNotReceivedGet">
            <summary>Sets the shim of LimitReachedEventArgs.get_NumberOfTweetsNotReceived()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLimitReachedEventArgs.AllInstances.NumberOfTweetsNotReceivedSetInt32">
            <summary>Sets the shim of LimitReachedEventArgs.set_NumberOfTweetsNotReceived(Int32 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.ListEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.ListEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListEventArgs.ConstructorITweetList">
            <summary>Sets the shim of ListEventArgs.ListEventArgs(ITweetList list)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListEventArgs.ListGet">
            <summary>Sets the shim of ListEventArgs.get_List()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListEventArgs.ListSetITweetList">
            <summary>Sets the shim of ListEventArgs.set_List(ITweetList value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListEventArgs.AllInstances.ListGet">
            <summary>Sets the shim of ListEventArgs.get_List()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListEventArgs.AllInstances.ListSetITweetList">
            <summary>Sets the shim of ListEventArgs.set_List(ITweetList value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListUserUpdatedEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.ListUserUpdatedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListUserUpdatedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListUserUpdatedEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.ListUserUpdatedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListUserUpdatedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListUserUpdatedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListUserUpdatedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListUserUpdatedEventArgs.ConstructorITweetListIUser">
            <summary>Sets the shim of ListUserUpdatedEventArgs.ListUserUpdatedEventArgs(ITweetList list, IUser user)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListUserUpdatedEventArgs.UserGet">
            <summary>Sets the shim of ListUserUpdatedEventArgs.get_User()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListUserUpdatedEventArgs.UserSetIUser">
            <summary>Sets the shim of ListUserUpdatedEventArgs.set_User(IUser value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListUserUpdatedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListUserUpdatedEventArgs.AllInstances.UserGet">
            <summary>Sets the shim of ListUserUpdatedEventArgs.get_User()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimListUserUpdatedEventArgs.AllInstances.UserSetIUser">
            <summary>Sets the shim of ListUserUpdatedEventArgs.set_User(IUser value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLoggedUserUpdatedEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.LoggedUserUpdatedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLoggedUserUpdatedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLoggedUserUpdatedEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.LoggedUserUpdatedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLoggedUserUpdatedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLoggedUserUpdatedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLoggedUserUpdatedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLoggedUserUpdatedEventArgs.ConstructorILoggedUser">
            <summary>Sets the shim of LoggedUserUpdatedEventArgs.LoggedUserUpdatedEventArgs(ILoggedUser loggedUser)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLoggedUserUpdatedEventArgs.LoggedUserGet">
            <summary>Sets the shim of LoggedUserUpdatedEventArgs.get_LoggedUser()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLoggedUserUpdatedEventArgs.LoggedUserSetILoggedUser">
            <summary>Sets the shim of LoggedUserUpdatedEventArgs.set_LoggedUser(ILoggedUser value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLoggedUserUpdatedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLoggedUserUpdatedEventArgs.AllInstances.LoggedUserGet">
            <summary>Sets the shim of LoggedUserUpdatedEventArgs.get_LoggedUser()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimLoggedUserUpdatedEventArgs.AllInstances.LoggedUserSetILoggedUser">
            <summary>Sets the shim of LoggedUserUpdatedEventArgs.set_LoggedUser(ILoggedUser value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetAndLocationReceivedEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.MatchedTweetAndLocationReceivedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetAndLocationReceivedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetAndLocationReceivedEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.MatchedTweetAndLocationReceivedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetAndLocationReceivedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetAndLocationReceivedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetAndLocationReceivedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetAndLocationReceivedEventArgs.ConstructorITweetIEnumerableOfStringIEnumerableOfILocation">
            <summary>Sets the shim of MatchedTweetAndLocationReceivedEventArgs.MatchedTweetAndLocationReceivedEventArgs(ITweet tweet, IEnumerable`1&lt;String&gt; matchingTracks, IEnumerable`1&lt;ILocation&gt; matchingLocations)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetAndLocationReceivedEventArgs.MatchedLocationsGet">
            <summary>Sets the shim of MatchedTweetAndLocationReceivedEventArgs.get_MatchedLocations()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetAndLocationReceivedEventArgs.MatchedLocationsSetIEnumerableOfILocation">
            <summary>Sets the shim of MatchedTweetAndLocationReceivedEventArgs.set_MatchedLocations(IEnumerable`1&lt;ILocation&gt; value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetAndLocationReceivedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetAndLocationReceivedEventArgs.AllInstances.MatchedLocationsGet">
            <summary>Sets the shim of MatchedTweetAndLocationReceivedEventArgs.get_MatchedLocations()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetAndLocationReceivedEventArgs.AllInstances.MatchedLocationsSetIEnumerableOfILocation">
            <summary>Sets the shim of MatchedTweetAndLocationReceivedEventArgs.set_MatchedLocations(IEnumerable`1&lt;ILocation&gt; value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetReceivedEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.MatchedTweetReceivedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetReceivedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetReceivedEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.MatchedTweetReceivedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetReceivedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetReceivedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetReceivedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetReceivedEventArgs.ConstructorITweetIEnumerableOfString">
            <summary>Sets the shim of MatchedTweetReceivedEventArgs.MatchedTweetReceivedEventArgs(ITweet tweet, IEnumerable`1&lt;String&gt; matchingTracks)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetReceivedEventArgs.MatchingTracksGet">
            <summary>Sets the shim of MatchedTweetReceivedEventArgs.get_MatchingTracks()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetReceivedEventArgs.MatchingTracksSetIEnumerableOfString">
            <summary>Sets the shim of MatchedTweetReceivedEventArgs.set_MatchingTracks(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetReceivedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetReceivedEventArgs.AllInstances.MatchingTracksGet">
            <summary>Sets the shim of MatchedTweetReceivedEventArgs.get_MatchingTracks()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMatchedTweetReceivedEventArgs.AllInstances.MatchingTracksSetIEnumerableOfString">
            <summary>Sets the shim of MatchedTweetReceivedEventArgs.set_MatchingTracks(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMessageEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.MessageEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMessageEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMessageEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.MessageEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMessageEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMessageEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMessageEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMessageEventArgs.ConstructorIMessage">
            <summary>Sets the shim of MessageEventArgs.MessageEventArgs(IMessage message)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMessageEventArgs.MessageGet">
            <summary>Sets the shim of MessageEventArgs.get_Message()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMessageEventArgs.MessageSetIMessage">
            <summary>Sets the shim of MessageEventArgs.set_Message(IMessage value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMessageEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMessageEventArgs.AllInstances.MessageGet">
            <summary>Sets the shim of MessageEventArgs.get_Message()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimMessageEventArgs.AllInstances.MessageSetIMessage">
            <summary>Sets the shim of MessageEventArgs.set_Message(IMessage value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.StreamExceptionEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.StreamExceptionEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.ConstructorExceptionIDisconnectMessage">
            <summary>Sets the shim of StreamExceptionEventArgs.StreamExceptionEventArgs(Exception ex, IDisconnectMessage disconnectMessage)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.DisconnectMessageGet">
            <summary>Sets the shim of StreamExceptionEventArgs.get_DisconnectMessage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.DisconnectMessageSetIDisconnectMessage">
            <summary>Sets the shim of StreamExceptionEventArgs.set_DisconnectMessage(IDisconnectMessage value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.ExceptionGet">
            <summary>Sets the shim of StreamExceptionEventArgs.get_Exception()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.ExceptionSetException">
            <summary>Sets the shim of StreamExceptionEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.AllInstances.DisconnectMessageGet">
            <summary>Sets the shim of StreamExceptionEventArgs.get_DisconnectMessage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.AllInstances.DisconnectMessageSetIDisconnectMessage">
            <summary>Sets the shim of StreamExceptionEventArgs.set_DisconnectMessage(IDisconnectMessage value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.AllInstances.ExceptionGet">
            <summary>Sets the shim of StreamExceptionEventArgs.get_Exception()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimStreamExceptionEventArgs.AllInstances.ExceptionSetException">
            <summary>Sets the shim of StreamExceptionEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetDeletedEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.TweetDeletedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetDeletedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetDeletedEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.TweetDeletedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetDeletedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetDeletedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetDeletedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetDeletedEventArgs.ConstructorITweetDeletedInfo">
            <summary>Sets the shim of TweetDeletedEventArgs.TweetDeletedEventArgs(ITweetDeletedInfo tweetDeletedInfo)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetDeletedEventArgs.TweetDeletedInfoGet">
            <summary>Sets the shim of TweetDeletedEventArgs.get_TweetDeletedInfo()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetDeletedEventArgs.TweetDeletedInfoSetITweetDeletedInfo">
            <summary>Sets the shim of TweetDeletedEventArgs.set_TweetDeletedInfo(ITweetDeletedInfo value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetDeletedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetDeletedEventArgs.AllInstances.TweetDeletedInfoGet">
            <summary>Sets the shim of TweetDeletedEventArgs.get_TweetDeletedInfo()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetDeletedEventArgs.AllInstances.TweetDeletedInfoSetITweetDeletedInfo">
            <summary>Sets the shim of TweetDeletedEventArgs.set_TweetDeletedInfo(ITweetDeletedInfo value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.TweetEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.TweetEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetEventArgs.ConstructorITweet">
            <summary>Sets the shim of TweetEventArgs.TweetEventArgs(ITweet tweet)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetEventArgs.TweetGet">
            <summary>Sets the shim of TweetEventArgs.get_Tweet()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetEventArgs.TweetSetITweet">
            <summary>Sets the shim of TweetEventArgs.set_Tweet(ITweet value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetEventArgs.AllInstances.TweetGet">
            <summary>Sets the shim of TweetEventArgs.get_Tweet()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetEventArgs.AllInstances.TweetSetITweet">
            <summary>Sets the shim of TweetEventArgs.set_Tweet(ITweet value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetFavouritedEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.TweetFavouritedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetFavouritedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetFavouritedEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.TweetFavouritedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetFavouritedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetFavouritedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetFavouritedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetFavouritedEventArgs.ConstructorITweetIUser">
            <summary>Sets the shim of TweetFavouritedEventArgs.TweetFavouritedEventArgs(ITweet tweet, IUser favoritingUser)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetFavouritedEventArgs.FavouritingUserGet">
            <summary>Sets the shim of TweetFavouritedEventArgs.get_FavouritingUser()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetFavouritedEventArgs.FavouritingUserSetIUser">
            <summary>Sets the shim of TweetFavouritedEventArgs.set_FavouritingUser(IUser value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetFavouritedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetFavouritedEventArgs.AllInstances.FavouritingUserGet">
            <summary>Sets the shim of TweetFavouritedEventArgs.get_FavouritingUser()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetFavouritedEventArgs.AllInstances.FavouritingUserSetIUser">
            <summary>Sets the shim of TweetFavouritedEventArgs.set_FavouritingUser(IUser value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetLocationDeletedEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.TweetLocationDeletedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetLocationDeletedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetLocationDeletedEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.TweetLocationDeletedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetLocationDeletedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetLocationDeletedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetLocationDeletedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetLocationDeletedEventArgs.ConstructorITweetLocationRemovedInfo">
            <summary>Sets the shim of TweetLocationDeletedEventArgs.TweetLocationDeletedEventArgs(ITweetLocationRemovedInfo tweetLocationRemovedInfo)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetLocationDeletedEventArgs.TweetLocationRemovedInfoGet">
            <summary>Sets the shim of TweetLocationDeletedEventArgs.get_TweetLocationRemovedInfo()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetLocationDeletedEventArgs.TweetLocationRemovedInfoSetITweetLocationRemovedInfo">
            <summary>Sets the shim of TweetLocationDeletedEventArgs.set_TweetLocationRemovedInfo(ITweetLocationRemovedInfo value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetLocationDeletedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetLocationDeletedEventArgs.AllInstances.TweetLocationRemovedInfoGet">
            <summary>Sets the shim of TweetLocationDeletedEventArgs.get_TweetLocationRemovedInfo()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetLocationDeletedEventArgs.AllInstances.TweetLocationRemovedInfoSetITweetLocationRemovedInfo">
            <summary>Sets the shim of TweetLocationDeletedEventArgs.set_TweetLocationRemovedInfo(ITweetLocationRemovedInfo value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetReceivedEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.TweetReceivedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetReceivedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetReceivedEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.TweetReceivedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetReceivedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetReceivedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetReceivedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetReceivedEventArgs.ConstructorITweet">
            <summary>Sets the shim of TweetReceivedEventArgs.TweetReceivedEventArgs(ITweet tweet)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetReceivedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetWitheldEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.TweetWitheldEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetWitheldEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetWitheldEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.TweetWitheldEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetWitheldEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetWitheldEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetWitheldEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetWitheldEventArgs.ConstructorITweetWitheldInfo">
            <summary>Sets the shim of TweetWitheldEventArgs.TweetWitheldEventArgs(ITweetWitheldInfo tweetWitheldInfo)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetWitheldEventArgs.TweetWitheldInfoGet">
            <summary>Sets the shim of TweetWitheldEventArgs.get_TweetWitheldInfo()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetWitheldEventArgs.TweetWitheldInfoSetITweetWitheldInfo">
            <summary>Sets the shim of TweetWitheldEventArgs.set_TweetWitheldInfo(ITweetWitheldInfo value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetWitheldEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetWitheldEventArgs.AllInstances.TweetWitheldInfoGet">
            <summary>Sets the shim of TweetWitheldEventArgs.get_TweetWitheldInfo()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimTweetWitheldEventArgs.AllInstances.TweetWitheldInfoSetITweetWitheldInfo">
            <summary>Sets the shim of TweetWitheldEventArgs.set_TweetWitheldInfo(ITweetWitheldInfo value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUnmanagedMessageReceivedEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.UnmanagedMessageReceivedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUnmanagedMessageReceivedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUnmanagedMessageReceivedEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.UnmanagedMessageReceivedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUnmanagedMessageReceivedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUnmanagedMessageReceivedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUnmanagedMessageReceivedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUnmanagedMessageReceivedEventArgs.ConstructorString">
            <summary>Sets the shim of UnmanagedMessageReceivedEventArgs.UnmanagedMessageReceivedEventArgs(String json)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUnmanagedMessageReceivedEventArgs.JsonMessageReceivedGet">
            <summary>Sets the shim of UnmanagedMessageReceivedEventArgs.get_JsonMessageReceived()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUnmanagedMessageReceivedEventArgs.JsonMessageReceivedSetString">
            <summary>Sets the shim of UnmanagedMessageReceivedEventArgs.set_JsonMessageReceived(String value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUnmanagedMessageReceivedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUnmanagedMessageReceivedEventArgs.AllInstances.JsonMessageReceivedGet">
            <summary>Sets the shim of UnmanagedMessageReceivedEventArgs.get_JsonMessageReceived()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUnmanagedMessageReceivedEventArgs.AllInstances.JsonMessageReceivedSetString">
            <summary>Sets the shim of UnmanagedMessageReceivedEventArgs.set_JsonMessageReceived(String value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserBlockedEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.UserBlockedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserBlockedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserBlockedEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.UserBlockedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserBlockedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserBlockedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserBlockedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserBlockedEventArgs.ConstructorIUser">
            <summary>Sets the shim of UserBlockedEventArgs.UserBlockedEventArgs(IUser user)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserBlockedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.UserEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.UserEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserEventArgs.ConstructorIUser">
            <summary>Sets the shim of UserEventArgs.UserEventArgs(IUser user)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserEventArgs.UserGet">
            <summary>Sets the shim of UserEventArgs.get_User()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserEventArgs.UserSetIUser">
            <summary>Sets the shim of UserEventArgs.set_User(IUser value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserEventArgs.AllInstances.UserGet">
            <summary>Sets the shim of UserEventArgs.get_User()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserEventArgs.AllInstances.UserSetIUser">
            <summary>Sets the shim of UserEventArgs.set_User(IUser value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserFollowedEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.UserFollowedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserFollowedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserFollowedEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.UserFollowedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserFollowedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserFollowedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserFollowedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserFollowedEventArgs.ConstructorIUser">
            <summary>Sets the shim of UserFollowedEventArgs.UserFollowedEventArgs(IUser user)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserFollowedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserWitheldEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.UserWitheldEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserWitheldEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserWitheldEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.UserWitheldEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserWitheldEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserWitheldEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserWitheldEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserWitheldEventArgs.ConstructorIUserWitheldInfo">
            <summary>Sets the shim of UserWitheldEventArgs.UserWitheldEventArgs(IUserWitheldInfo userWitheldInfo)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserWitheldEventArgs.UserWitheldInfoGet">
            <summary>Sets the shim of UserWitheldEventArgs.get_UserWitheldInfo()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserWitheldEventArgs.UserWitheldInfoSetIUserWitheldInfo">
            <summary>Sets the shim of UserWitheldEventArgs.set_UserWitheldInfo(IUserWitheldInfo value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserWitheldEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserWitheldEventArgs.AllInstances.UserWitheldInfoGet">
            <summary>Sets the shim of UserWitheldEventArgs.get_UserWitheldInfo()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimUserWitheldEventArgs.AllInstances.UserWitheldInfoSetIUserWitheldInfo">
            <summary>Sets the shim of UserWitheldEventArgs.set_UserWitheldInfo(IUserWitheldInfo value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningFallingBehindEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.WarningFallingBehindEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningFallingBehindEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningFallingBehindEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.WarningFallingBehindEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningFallingBehindEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningFallingBehindEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningFallingBehindEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningFallingBehindEventArgs.ConstructorIWarningMessageFallingBehind">
            <summary>Sets the shim of WarningFallingBehindEventArgs.WarningFallingBehindEventArgs(IWarningMessageFallingBehind warningMessage)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningFallingBehindEventArgs.WarningMessageGet">
            <summary>Sets the shim of WarningFallingBehindEventArgs.get_WarningMessage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningFallingBehindEventArgs.WarningMessageSetIWarningMessageFallingBehind">
            <summary>Sets the shim of WarningFallingBehindEventArgs.set_WarningMessage(IWarningMessageFallingBehind value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningFallingBehindEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningFallingBehindEventArgs.AllInstances.WarningMessageGet">
            <summary>Sets the shim of WarningFallingBehindEventArgs.get_WarningMessage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningFallingBehindEventArgs.AllInstances.WarningMessageSetIWarningMessageFallingBehind">
            <summary>Sets the shim of WarningFallingBehindEventArgs.set_WarningMessage(IWarningMessageFallingBehind value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningTooManyFollowersEventArgs">
            <summary>Shim type of Tweetinvi.Core.Events.EventArguments.WarningTooManyFollowersEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningTooManyFollowersEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningTooManyFollowersEventArgs.#ctor(Tweetinvi.Core.Events.EventArguments.WarningTooManyFollowersEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningTooManyFollowersEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningTooManyFollowersEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningTooManyFollowersEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningTooManyFollowersEventArgs.ConstructorIWarningMessageTooManyFollowers">
            <summary>Sets the shim of WarningTooManyFollowersEventArgs.WarningTooManyFollowersEventArgs(IWarningMessageTooManyFollowers warningMessage)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningTooManyFollowersEventArgs.WarningMessageGet">
            <summary>Sets the shim of WarningTooManyFollowersEventArgs.get_WarningMessage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningTooManyFollowersEventArgs.WarningMessageSetIWarningMessageTooManyFollowers">
            <summary>Sets the shim of WarningTooManyFollowersEventArgs.set_WarningMessage(IWarningMessageTooManyFollowers value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningTooManyFollowersEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningTooManyFollowersEventArgs.AllInstances.WarningMessageGet">
            <summary>Sets the shim of WarningTooManyFollowersEventArgs.get_WarningMessage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.ShimWarningTooManyFollowersEventArgs.AllInstances.WarningMessageSetIWarningMessageTooManyFollowers">
            <summary>Sets the shim of WarningTooManyFollowersEventArgs.set_WarningMessage(IWarningMessageTooManyFollowers value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubDisconnectMessageEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.DisconnectMessageEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubDisconnectMessageEventArgs.#ctor(Tweetinvi.Core.Interfaces.DTO.IDisconnectMessage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubDisconnectMessageEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubDisconnectMessageEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubDisconnectMessageEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubDisconnectMessageEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubDisconnectMessageEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubExceptionEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.ExceptionEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubExceptionEventArgs.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubExceptionEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubExceptionEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubExceptionEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubExceptionEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubExceptionEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`1">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.GenericEventArgs`1</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`1.InitializeStub">
            <summary>Initializes a new instance of type StubGenericEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`2">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.GenericEventArgs`2</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`2.#ctor(`0,`1)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`2.InitializeStub">
            <summary>Initializes a new instance of type StubGenericEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`3">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.GenericEventArgs`3</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`3.#ctor(`0,`1,`2)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`3.InitializeStub">
            <summary>Initializes a new instance of type StubGenericEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`3.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`3.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`3.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`4">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.GenericEventArgs`4</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`4.#ctor(`0,`1,`2,`3)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`4.InitializeStub">
            <summary>Initializes a new instance of type StubGenericEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`4.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`4.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubGenericEventArgs`4.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubJsonObjectEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.JsonObjectEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubJsonObjectEventArgs.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubJsonObjectEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubJsonObjectEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubJsonObjectEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubJsonObjectEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubJsonObjectEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubLimitReachedEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.LimitReachedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubLimitReachedEventArgs.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubLimitReachedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubLimitReachedEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubLimitReachedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubLimitReachedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubLimitReachedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubListEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.ListEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubListEventArgs.#ctor(Tweetinvi.Core.Interfaces.ITweetList)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubListEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubListEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubListEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubListEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubListEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubListUserUpdatedEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.ListUserUpdatedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubListUserUpdatedEventArgs.#ctor(Tweetinvi.Core.Interfaces.ITweetList,Tweetinvi.Core.Interfaces.IUser)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubListUserUpdatedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubListUserUpdatedEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubListUserUpdatedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubListUserUpdatedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubListUserUpdatedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubLoggedUserUpdatedEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.LoggedUserUpdatedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubLoggedUserUpdatedEventArgs.#ctor(Tweetinvi.Core.Interfaces.ILoggedUser)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubLoggedUserUpdatedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubLoggedUserUpdatedEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubLoggedUserUpdatedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubLoggedUserUpdatedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubLoggedUserUpdatedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubMatchedTweetAndLocationReceivedEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.MatchedTweetAndLocationReceivedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubMatchedTweetAndLocationReceivedEventArgs.#ctor(Tweetinvi.Core.Interfaces.ITweet,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.Models.ILocation})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubMatchedTweetAndLocationReceivedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubMatchedTweetAndLocationReceivedEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubMatchedTweetAndLocationReceivedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubMatchedTweetAndLocationReceivedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubMatchedTweetAndLocationReceivedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubMatchedTweetReceivedEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.MatchedTweetReceivedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubMatchedTweetReceivedEventArgs.#ctor(Tweetinvi.Core.Interfaces.ITweet,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubMatchedTweetReceivedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubMatchedTweetReceivedEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubMatchedTweetReceivedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubMatchedTweetReceivedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubMatchedTweetReceivedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubMessageEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.MessageEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubMessageEventArgs.#ctor(Tweetinvi.Core.Interfaces.IMessage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubMessageEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubMessageEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubMessageEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubMessageEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubMessageEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubStreamExceptionEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.StreamExceptionEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubStreamExceptionEventArgs.#ctor(System.Exception,Tweetinvi.Core.Interfaces.DTO.IDisconnectMessage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubStreamExceptionEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubStreamExceptionEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubStreamExceptionEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubStreamExceptionEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubStreamExceptionEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetDeletedEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.TweetDeletedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetDeletedEventArgs.#ctor(Tweetinvi.Core.Interfaces.DTO.ITweetDeletedInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetDeletedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubTweetDeletedEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetDeletedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetDeletedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetDeletedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.TweetEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetEventArgs.#ctor(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubTweetEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetFavouritedEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.TweetFavouritedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetFavouritedEventArgs.#ctor(Tweetinvi.Core.Interfaces.ITweet,Tweetinvi.Core.Interfaces.IUser)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetFavouritedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubTweetFavouritedEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetFavouritedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetFavouritedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetFavouritedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetLocationDeletedEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.TweetLocationDeletedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetLocationDeletedEventArgs.#ctor(Tweetinvi.Core.Interfaces.DTO.ITweetLocationRemovedInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetLocationDeletedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubTweetLocationDeletedEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetLocationDeletedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetLocationDeletedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetLocationDeletedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetReceivedEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.TweetReceivedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetReceivedEventArgs.#ctor(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetReceivedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubTweetReceivedEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetReceivedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetReceivedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetReceivedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetWitheldEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.TweetWitheldEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetWitheldEventArgs.#ctor(Tweetinvi.Core.Interfaces.DTO.ITweetWitheldInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetWitheldEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubTweetWitheldEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetWitheldEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetWitheldEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubTweetWitheldEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubUnmanagedMessageReceivedEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.UnmanagedMessageReceivedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubUnmanagedMessageReceivedEventArgs.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubUnmanagedMessageReceivedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubUnmanagedMessageReceivedEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUnmanagedMessageReceivedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUnmanagedMessageReceivedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUnmanagedMessageReceivedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserBlockedEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.UserBlockedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserBlockedEventArgs.#ctor(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserBlockedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubUserBlockedEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserBlockedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserBlockedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserBlockedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.UserEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserEventArgs.#ctor(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubUserEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserFollowedEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.UserFollowedEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserFollowedEventArgs.#ctor(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserFollowedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubUserFollowedEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserFollowedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserFollowedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserFollowedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserWitheldEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.UserWitheldEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserWitheldEventArgs.#ctor(Tweetinvi.Core.Interfaces.DTO.IUserWitheldInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserWitheldEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubUserWitheldEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserWitheldEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserWitheldEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubUserWitheldEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubWarningFallingBehindEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.WarningFallingBehindEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubWarningFallingBehindEventArgs.#ctor(Tweetinvi.Core.Interfaces.Models.IWarningMessageFallingBehind)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubWarningFallingBehindEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubWarningFallingBehindEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubWarningFallingBehindEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubWarningFallingBehindEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubWarningFallingBehindEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.EventArguments.Fakes.StubWarningTooManyFollowersEventArgs">
            <summary>Stub type of Tweetinvi.Core.Events.EventArguments.WarningTooManyFollowersEventArgs</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubWarningTooManyFollowersEventArgs.#ctor(Tweetinvi.Core.Interfaces.Models.IWarningMessageTooManyFollowers)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.EventArguments.Fakes.StubWarningTooManyFollowersEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubWarningTooManyFollowersEventArgs</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubWarningTooManyFollowersEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubWarningTooManyFollowersEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.EventArguments.Fakes.StubWarningTooManyFollowersEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Events.Fakes.ShimEventHelpers">
            <summary>Shim type of Tweetinvi.Core.Events.EventHelpers</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.Fakes.ShimEventHelpers.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.Fakes.ShimEventHelpers.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.Fakes.ShimEventHelpers.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.Fakes.ShimEventHelpers.RaiseOf1ObjectEventHandlerOfGenericEventArgsOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.EventHandler{Tweetinvi.Core.Events.EventArguments.GenericEventArgs{``0}},``0})">
            <summary>Sets the shim of EventHelpers.Raise(Object o, EventHandler`1&lt;GenericEventArgs`1&lt;!!0&gt;&gt; handler, !!0 arg)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.Fakes.ShimEventHelpers.RaiseOf1ObjectEventHandlerOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.EventHandler{``0},``0})">
            <summary>Sets the shim of EventHelpers.Raise(Object o, EventHandler`1&lt;!!0&gt; handler, !!0 arg)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.Fakes.ShimEventHelpers.RaiseOf2ObjectEventHandlerOfGenericEventArgsOfM0M1M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.EventHandler{Tweetinvi.Core.Events.EventArguments.GenericEventArgs{``0,``1}},``0,``1})">
            <summary>Sets the shim of EventHelpers.Raise(Object o, EventHandler`1&lt;GenericEventArgs`2&lt;!!0,!!1&gt;&gt; handler, !!0 arg1, !!1 arg2)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.Fakes.ShimEventHelpers.RaiseOf3ObjectEventHandlerOfGenericEventArgsOfM0M1M2M0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.EventHandler{Tweetinvi.Core.Events.EventArguments.GenericEventArgs{``0,``1,``2}},``0,``1,``2})">
            <summary>Sets the shim of EventHelpers.Raise(Object o, EventHandler`1&lt;GenericEventArgs`3&lt;!!0,!!1,!!2&gt;&gt; handler, !!0 arg1, !!1 arg2, !!2 arg3)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Events.Fakes.ShimEventHelpers.RaiseOf4ObjectEventHandlerOfGenericEventArgsOfM0M1M2M3M0M1M2M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.EventHandler{Tweetinvi.Core.Events.EventArguments.GenericEventArgs{``0,``1,``2,``3}},``0,``1,``2,``3})">
            <summary>Sets the shim of EventHelpers.Raise(Object o, EventHandler`1&lt;GenericEventArgs`4&lt;!!0,!!1,!!2,!!3&gt;&gt; handler, !!0 arg1, !!1 arg2, !!2 arg3, !!3 arg4)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.Fakes.ShimEventHelpers.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Events.Fakes.ShimEventHelpers.RaiseObjectEventHandler">
            <summary>Sets the shim of EventHelpers.Raise(Object o, EventHandler handler)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterNullCredentialsException">
            <summary>Shim type of Tweetinvi.Core.Exceptions.TwitterNullCredentialsException</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterNullCredentialsException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterNullCredentialsException.#ctor(Tweetinvi.Core.Exceptions.TwitterNullCredentialsException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterNullCredentialsException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterNullCredentialsException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterNullCredentialsException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterNullCredentialsException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterNullCredentialsException.Constructor">
            <summary>Sets the shim of TwitterNullCredentialsException.TwitterNullCredentialsException()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterNullCredentialsException.DescriptionGet">
            <summary>Sets the shim of TwitterNullCredentialsException.get_Description()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterNullCredentialsException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterNullCredentialsException.AllInstances.DescriptionGet">
            <summary>Sets the shim of TwitterNullCredentialsException.get_Description()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException">
            <summary>Shim type of Tweetinvi.Core.Exceptions.TwitterTimeoutException</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.#ctor(Tweetinvi.Core.Exceptions.TwitterTimeoutException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.Bind(Tweetinvi.Core.Exceptions.ITwitterException)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.Bind(Tweetinvi.Core.Exceptions.ITwitterTimeoutException)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.ConstructorITweetinviSettingsAccessorString">
            <summary>Sets the shim of TwitterTimeoutException.TwitterTimeoutException(ITweetinviSettingsAccessor tweetinviSettingsAccessor, String url)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.StatusCodeGet">
            <summary>Sets the shim of TwitterTimeoutException.get_StatusCode()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.TwitterExceptionInfosGet">
            <summary>Sets the shim of TwitterTimeoutException.get_TwitterExceptionInfos()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.WebExceptionGet">
            <summary>Sets the shim of TwitterTimeoutException.get_WebException()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.AllInstances.StatusCodeGet">
            <summary>Sets the shim of TwitterTimeoutException.get_StatusCode()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.AllInstances.TwitterExceptionInfosGet">
            <summary>Sets the shim of TwitterTimeoutException.get_TwitterExceptionInfos()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.ShimTwitterTimeoutException.AllInstances.WebExceptionGet">
            <summary>Sets the shim of TwitterTimeoutException.get_WebException()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Exceptions.Fakes.StubITwitterException">
            <summary>Stub type of Tweetinvi.Core.Exceptions.ITwitterException</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubITwitterException.#ctor">
            <summary>Initializes a new instance of type StubITwitterException</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterException.CreationDateGet">
            <summary>Sets the stub of ITwitterException.get_CreationDate()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterException.StatusCodeGet">
            <summary>Sets the stub of ITwitterException.get_StatusCode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterException.TwitterDescriptionGet">
            <summary>Sets the stub of ITwitterException.get_TwitterDescription()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterException.TwitterExceptionInfosGet">
            <summary>Sets the stub of ITwitterException.get_TwitterExceptionInfos()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterException.URLGet">
            <summary>Sets the stub of ITwitterException.get_URL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterException.WebExceptionGet">
            <summary>Sets the stub of ITwitterException.get_WebException()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubITwitterException.tc::Tweetinvi#Core#Exceptions#ITwitterException#CreationDate">
            <summary>Sets the stub of ITwitterException.get_CreationDate()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubITwitterException.tc::Tweetinvi#Core#Exceptions#ITwitterException#StatusCode">
            <summary>Sets the stub of ITwitterException.get_StatusCode()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubITwitterException.tc::Tweetinvi#Core#Exceptions#ITwitterException#TwitterDescription">
            <summary>Sets the stub of ITwitterException.get_TwitterDescription()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubITwitterException.tc::Tweetinvi#Core#Exceptions#ITwitterException#TwitterExceptionInfos">
            <summary>Sets the stub of ITwitterException.get_TwitterExceptionInfos()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubITwitterException.tc::Tweetinvi#Core#Exceptions#ITwitterException#URL">
            <summary>Sets the stub of ITwitterException.get_URL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubITwitterException.tc::Tweetinvi#Core#Exceptions#ITwitterException#WebException">
            <summary>Sets the stub of ITwitterException.get_WebException()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Exceptions.Fakes.StubITwitterExceptionInfo">
            <summary>Stub type of Tweetinvi.Core.Exceptions.ITwitterExceptionInfo</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubITwitterExceptionInfo.#ctor">
            <summary>Initializes a new instance of type StubITwitterExceptionInfo</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubITwitterExceptionInfo.AttachBackingFieldToCode">
            <summary>Attaches delegates to emulate StubITwitterExceptionInfo.Code as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubITwitterExceptionInfo.AttachBackingFieldToMessage">
            <summary>Attaches delegates to emulate StubITwitterExceptionInfo.Message as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterExceptionInfo.CodeGet">
            <summary>Sets the stub of ITwitterExceptionInfo.get_Code()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterExceptionInfo.CodeSetInt32">
            <summary>Sets the stub of ITwitterExceptionInfo.set_Code(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterExceptionInfo.MessageGet">
            <summary>Sets the stub of ITwitterExceptionInfo.get_Message()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterExceptionInfo.MessageSetString">
            <summary>Sets the stub of ITwitterExceptionInfo.set_Message(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubITwitterExceptionInfo.tc::Tweetinvi#Core#Exceptions#ITwitterExceptionInfo#Code">
            <summary>Sets the stub of ITwitterExceptionInfo.get_Code()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubITwitterExceptionInfo.tc::Tweetinvi#Core#Exceptions#ITwitterExceptionInfo#Message">
            <summary>Sets the stub of ITwitterExceptionInfo.get_Message()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Exceptions.Fakes.StubITwitterTimeoutException">
            <summary>Stub type of Tweetinvi.Core.Exceptions.ITwitterTimeoutException</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubITwitterTimeoutException.#ctor">
            <summary>Initializes a new instance of type StubITwitterTimeoutException</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterTimeoutException.CreationDateGet">
            <summary>Sets the stub of ITwitterException.get_CreationDate()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterTimeoutException.StatusCodeGet">
            <summary>Sets the stub of ITwitterException.get_StatusCode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterTimeoutException.TwitterDescriptionGet">
            <summary>Sets the stub of ITwitterException.get_TwitterDescription()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterTimeoutException.TwitterExceptionInfosGet">
            <summary>Sets the stub of ITwitterException.get_TwitterExceptionInfos()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterTimeoutException.URLGet">
            <summary>Sets the stub of ITwitterException.get_URL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubITwitterTimeoutException.WebExceptionGet">
            <summary>Sets the stub of ITwitterException.get_WebException()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubITwitterTimeoutException.tc::Tweetinvi#Core#Exceptions#ITwitterException#CreationDate">
            <summary>Sets the stub of ITwitterException.get_CreationDate()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubITwitterTimeoutException.tc::Tweetinvi#Core#Exceptions#ITwitterException#StatusCode">
            <summary>Sets the stub of ITwitterException.get_StatusCode()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubITwitterTimeoutException.tc::Tweetinvi#Core#Exceptions#ITwitterException#TwitterDescription">
            <summary>Sets the stub of ITwitterException.get_TwitterDescription()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubITwitterTimeoutException.tc::Tweetinvi#Core#Exceptions#ITwitterException#TwitterExceptionInfos">
            <summary>Sets the stub of ITwitterException.get_TwitterExceptionInfos()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubITwitterTimeoutException.tc::Tweetinvi#Core#Exceptions#ITwitterException#URL">
            <summary>Sets the stub of ITwitterException.get_URL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubITwitterTimeoutException.tc::Tweetinvi#Core#Exceptions#ITwitterException#WebException">
            <summary>Sets the stub of ITwitterException.get_WebException()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Exceptions.Fakes.StubIWebExceptionInfoExtractor">
            <summary>Stub type of Tweetinvi.Core.Exceptions.IWebExceptionInfoExtractor</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubIWebExceptionInfoExtractor.#ctor">
            <summary>Initializes a new instance of type StubIWebExceptionInfoExtractor</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubIWebExceptionInfoExtractor.GetStatusCodeDescriptionInt32">
            <summary>Sets the stub of IWebExceptionInfoExtractor.GetStatusCodeDescription(Int32 statusCode)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubIWebExceptionInfoExtractor.GetTwitterExceptionInfoWebException">
            <summary>Sets the stub of IWebExceptionInfoExtractor.GetTwitterExceptionInfo(WebException wex)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubIWebExceptionInfoExtractor.GetWebExceptionStatusNumberWebException">
            <summary>Sets the stub of IWebExceptionInfoExtractor.GetWebExceptionStatusNumber(WebException wex)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubIWebExceptionInfoExtractor.tc::Tweetinvi#Core#Exceptions#IWebExceptionInfoExtractor#GetStatusCodeDescription(System.Int32)">
            <summary>Sets the stub of IWebExceptionInfoExtractor.GetStatusCodeDescription(Int32 statusCode)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubIWebExceptionInfoExtractor.tc::Tweetinvi#Core#Exceptions#IWebExceptionInfoExtractor#GetTwitterExceptionInfo(System.Net.WebException)">
            <summary>Sets the stub of IWebExceptionInfoExtractor.GetTwitterExceptionInfo(WebException wex)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubIWebExceptionInfoExtractor.tc::Tweetinvi#Core#Exceptions#IWebExceptionInfoExtractor#GetWebExceptionStatusNumber(System.Net.WebException)">
            <summary>Sets the stub of IWebExceptionInfoExtractor.GetWebExceptionStatusNumber(WebException wex)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException">
            <summary>Stub type of Tweetinvi.Core.Exceptions.TwitterNullCredentialsException</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubTwitterNullCredentialsException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubTwitterNullCredentialsException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.InitializeStub">
            <summary>Initializes a new instance of type StubTwitterNullCredentialsException</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterNullCredentialsException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException">
            <summary>Stub type of Tweetinvi.Core.Exceptions.TwitterTimeoutException</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.#ctor(Tweetinvi.Core.ITweetinviSettingsAccessor,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.AttachBackingFieldToCreationDate">
            <summary>Attaches delegates to emulate StubTwitterTimeoutException.CreationDate as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubTwitterTimeoutException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubTwitterTimeoutException.Source as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.AttachBackingFieldToTwitterDescription">
            <summary>Attaches delegates to emulate StubTwitterTimeoutException.TwitterDescription as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.AttachBackingFieldToURL">
            <summary>Attaches delegates to emulate StubTwitterTimeoutException.URL as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.CreationDateGet">
            <summary>Sets the stub of TwitterException.get_CreationDate()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.CreationDateSetDateTime">
            <summary>Sets the stub of TwitterException.set_CreationDate(DateTime value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of WebException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of WebException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.InitializeStub">
            <summary>Initializes a new instance of type StubTwitterTimeoutException</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.StatusCodeGet">
            <summary>Sets the stub of TwitterTimeoutException.get_StatusCode()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.ToString">
            <summary>Sets the stub of TwitterException.ToString()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.ToString01">
            <summary>Sets the stub of TwitterException.ToString()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.TwitterDescriptionGet">
            <summary>Sets the stub of TwitterException.get_TwitterDescription()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.TwitterDescriptionSetString">
            <summary>Sets the stub of TwitterException.set_TwitterDescription(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.TwitterExceptionInfosGet">
            <summary>Sets the stub of TwitterTimeoutException.get_TwitterExceptionInfos()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.URLGet">
            <summary>Sets the stub of TwitterException.get_URL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.URLSetString">
            <summary>Sets the stub of TwitterException.set_URL(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.CreationDate">
            <summary>Sets the stub of TwitterException.get_CreationDate()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.StatusCode">
            <summary>Sets the stub of TwitterTimeoutException.get_StatusCode()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.TwitterDescription">
            <summary>Sets the stub of TwitterException.get_TwitterDescription()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.TwitterExceptionInfos">
            <summary>Sets the stub of TwitterTimeoutException.get_TwitterExceptionInfos()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Exceptions.Fakes.StubTwitterTimeoutException.URL">
            <summary>Sets the stub of TwitterException.get_URL()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Extensions.Fakes.ShimExceptionExtension">
            <summary>Shim type of Tweetinvi.Core.Extensions.ExceptionExtension</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimExceptionExtension.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimExceptionExtension.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimExceptionExtension.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Extensions.Fakes.ShimExceptionExtension.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Extensions.Fakes.ShimExceptionExtension.GetWebExceptionStatusNumberWebException">
            <summary>Sets the shim of ExceptionExtension.GetWebExceptionStatusNumber(WebException wex)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Extensions.Fakes.ShimIEnumerableExtension">
            <summary>Shim type of Tweetinvi.Core.Extensions.IEnumerableExtension</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimIEnumerableExtension.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimIEnumerableExtension.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimIEnumerableExtension.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimIEnumerableExtension.ContainsSameObjectsAsOf1IEnumerableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of IEnumerableExtension.ContainsSameObjectsAs(IEnumerable`1&lt;!!0&gt; collection, IEnumerable`1&lt;!!0&gt; collection2)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimIEnumerableExtension.ForEachOf1IEnumerableOfM0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Action{``0}})">
            <summary>Sets the shim of IEnumerableExtension.ForEach(IEnumerable`1&lt;!!0&gt; collection, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimIEnumerableExtension.ForEachOf1M0ArrayActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[],System.Action{``0}})">
            <summary>Sets the shim of IEnumerableExtension.ForEach(!!0[] collection, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimIEnumerableExtension.IsEmptyOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of IEnumerableExtension.IsEmpty(IEnumerable`1&lt;!!0&gt; collection)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimIEnumerableExtension.IsNullOrEmptyOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of IEnumerableExtension.IsNullOrEmpty(IEnumerable`1&lt;!!0&gt; collection)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Extensions.Fakes.ShimIEnumerableExtension.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Tweetinvi.Core.Extensions.Fakes.ShimLanguageExtension">
            <summary>Shim type of Tweetinvi.Core.Extensions.LanguageExtension</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimLanguageExtension.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimLanguageExtension.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimLanguageExtension.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Extensions.Fakes.ShimLanguageExtension.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Extensions.Fakes.ShimLanguageExtension.GetDescriptionAttributeLanguage">
            <summary>Sets the shim of LanguageExtension.GetDescriptionAttribute(Language language)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Extensions.Fakes.ShimLanguageExtension.GetLangFromDescriptionString">
            <summary>Sets the shim of LanguageExtension.GetLangFromDescription(String descriptionValue)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Extensions.Fakes.ShimLanguageExtension.IsValidDescriptionFieldStringFieldInfo">
            <summary>Sets the shim of LanguageExtension.IsValidDescriptionField(String descriptionValue, FieldInfo field)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Extensions.Fakes.ShimStringFormater">
            <summary>Shim type of Tweetinvi.Core.Extensions.StringFormater</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimStringFormater.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimStringFormater.#ctor(Tweetinvi.Core.Extensions.StringFormater)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimStringFormater.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.ShimStringFormater.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Extensions.Fakes.ShimStringFormater.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Extensions.Fakes.ShimStringFormater.Constructor">
            <summary>Sets the shim of StringFormater.StringFormater()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Extensions.Fakes.ShimStringFormater.UrlEncodeString">
            <summary>Sets the shim of StringFormater.UrlEncode(String str)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Extensions.Fakes.ShimStringFormater.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Tweetinvi.Core.Extensions.Fakes.StubStringFormater">
            <summary>Stub type of Tweetinvi.Core.Extensions.StringFormater</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.StubStringFormater.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Extensions.Fakes.StubStringFormater.InitializeStub">
            <summary>Initializes a new instance of type StubStringFormater</summary>
        </member>
        <member name="P:Tweetinvi.Core.Extensions.Fakes.StubStringFormater.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Extensions.Fakes.StubStringFormater.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Extensions.Fakes.StubStringFormater.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Fakes.ShimTweetinviCoreModule">
            <summary>Shim type of Tweetinvi.Core.TweetinviCoreModule</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviCoreModule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviCoreModule.#ctor(Tweetinvi.Core.TweetinviCoreModule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviCoreModule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviCoreModule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviCoreModule.Bind(Tweetinvi.Core.Injectinvi.ITweetinviModule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviCoreModule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviCoreModule.ConstructorITweetinviContainer">
            <summary>Sets the shim of TweetinviCoreModule.TweetinviCoreModule(ITweetinviContainer container)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviCoreModule.Initialize">
            <summary>Sets the shim of TweetinviCoreModule.Initialize()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviCoreModule.TweetinviContainerGet">
            <summary>Sets the shim of TweetinviCoreModule.get_TweetinviContainer()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Fakes.ShimTweetinviCoreModule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviCoreModule.AllInstances.Initialize">
            <summary>Sets the shim of TweetinviCoreModule.Initialize()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Fakes.ShimTweetinviSettings">
            <summary>Shim type of Tweetinvi.Core.TweetinviSettings</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviSettings.#ctor(Tweetinvi.Core.TweetinviSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviSettings.Bind(Tweetinvi.Core.ITweetinviSettings)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.Clone">
            <summary>Sets the shim of TweetinviSettings.Clone()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.Constructor">
            <summary>Sets the shim of TweetinviSettings.TweetinviSettings()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.InitialiseFromITweetinviSettings">
            <summary>Sets the shim of TweetinviSettings.InitialiseFrom(ITweetinviSettings other)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.ProxyURLGet">
            <summary>Sets the shim of TweetinviSettings.get_ProxyURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.ProxyURLSetString">
            <summary>Sets the shim of TweetinviSettings.set_ProxyURL(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.ShowDebugGet">
            <summary>Sets the shim of TweetinviSettings.get_ShowDebug()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.ShowDebugSetBoolean">
            <summary>Sets the shim of TweetinviSettings.set_ShowDebug(Boolean value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.WebRequestTimeoutGet">
            <summary>Sets the shim of TweetinviSettings.get_WebRequestTimeout()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.WebRequestTimeoutSetInt32">
            <summary>Sets the shim of TweetinviSettings.set_WebRequestTimeout(Int32 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Fakes.ShimTweetinviSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.AllInstances.Clone">
            <summary>Sets the shim of TweetinviSettings.Clone()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.AllInstances.InitialiseFromITweetinviSettings">
            <summary>Sets the shim of TweetinviSettings.InitialiseFrom(ITweetinviSettings other)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.AllInstances.ProxyURLGet">
            <summary>Sets the shim of TweetinviSettings.get_ProxyURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.AllInstances.ProxyURLSetString">
            <summary>Sets the shim of TweetinviSettings.set_ProxyURL(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.AllInstances.ShowDebugGet">
            <summary>Sets the shim of TweetinviSettings.get_ShowDebug()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.AllInstances.ShowDebugSetBoolean">
            <summary>Sets the shim of TweetinviSettings.set_ShowDebug(Boolean value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.AllInstances.WebRequestTimeoutGet">
            <summary>Sets the shim of TweetinviSettings.get_WebRequestTimeout()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettings.AllInstances.WebRequestTimeoutSetInt32">
            <summary>Sets the shim of TweetinviSettings.set_WebRequestTimeout(Int32 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor">
            <summary>Shim type of Tweetinvi.Core.TweetinviSettingsAccessor</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.#ctor(Tweetinvi.Core.TweetinviSettingsAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.Bind(Tweetinvi.Core.ITweetinviSettingsAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.ApplicationSettingsGet">
            <summary>Sets the shim of TweetinviSettingsAccessor.get_ApplicationSettings()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.ApplicationSettingsSetITweetinviSettings">
            <summary>Sets the shim of TweetinviSettingsAccessor.set_ApplicationSettings(ITweetinviSettings value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.Constructor">
            <summary>Sets the shim of TweetinviSettingsAccessor.TweetinviSettingsAccessor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.CurrentThreadSettingsGet">
            <summary>Sets the shim of TweetinviSettingsAccessor.get_CurrentThreadSettings()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.CurrentThreadSettingsSetITweetinviSettings">
            <summary>Sets the shim of TweetinviSettingsAccessor.set_CurrentThreadSettings(ITweetinviSettings value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.HasTheApplicationSettingsBeenInitialized">
            <summary>Sets the shim of TweetinviSettingsAccessor.HasTheApplicationSettingsBeenInitialized()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.ProxyURLGet">
            <summary>Sets the shim of TweetinviSettingsAccessor.get_ProxyURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.ProxyURLSetString">
            <summary>Sets the shim of TweetinviSettingsAccessor.set_ProxyURL(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.ShowDebugGet">
            <summary>Sets the shim of TweetinviSettingsAccessor.get_ShowDebug()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.ShowDebugSetBoolean">
            <summary>Sets the shim of TweetinviSettingsAccessor.set_ShowDebug(Boolean value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.StaticTweetinviSettingsGet">
            <summary>Sets the shim of TweetinviSettingsAccessor.get_StaticTweetinviSettings()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.StaticTweetinviSettingsSetITweetinviSettings">
            <summary>Sets the shim of TweetinviSettingsAccessor.set_StaticTweetinviSettings(ITweetinviSettings value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.WebRequestTimeoutGet">
            <summary>Sets the shim of TweetinviSettingsAccessor.get_WebRequestTimeout()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.WebRequestTimeoutSetInt32">
            <summary>Sets the shim of TweetinviSettingsAccessor.set_WebRequestTimeout(Int32 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.AllInstances.ApplicationSettingsGet">
            <summary>Sets the shim of TweetinviSettingsAccessor.get_ApplicationSettings()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.AllInstances.ApplicationSettingsSetITweetinviSettings">
            <summary>Sets the shim of TweetinviSettingsAccessor.set_ApplicationSettings(ITweetinviSettings value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.AllInstances.CurrentThreadSettingsGet">
            <summary>Sets the shim of TweetinviSettingsAccessor.get_CurrentThreadSettings()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.AllInstances.CurrentThreadSettingsSetITweetinviSettings">
            <summary>Sets the shim of TweetinviSettingsAccessor.set_CurrentThreadSettings(ITweetinviSettings value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.AllInstances.HasTheApplicationSettingsBeenInitialized">
            <summary>Sets the shim of TweetinviSettingsAccessor.HasTheApplicationSettingsBeenInitialized()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.AllInstances.ProxyURLGet">
            <summary>Sets the shim of TweetinviSettingsAccessor.get_ProxyURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.AllInstances.ProxyURLSetString">
            <summary>Sets the shim of TweetinviSettingsAccessor.set_ProxyURL(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.AllInstances.ShowDebugGet">
            <summary>Sets the shim of TweetinviSettingsAccessor.get_ShowDebug()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.AllInstances.ShowDebugSetBoolean">
            <summary>Sets the shim of TweetinviSettingsAccessor.set_ShowDebug(Boolean value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.AllInstances.WebRequestTimeoutGet">
            <summary>Sets the shim of TweetinviSettingsAccessor.get_WebRequestTimeout()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.ShimTweetinviSettingsAccessor.AllInstances.WebRequestTimeoutSetInt32">
            <summary>Sets the shim of TweetinviSettingsAccessor.set_WebRequestTimeout(Int32 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Fakes.StubITweetinviSettings">
            <summary>Stub type of Tweetinvi.Core.ITweetinviSettings</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubITweetinviSettings.#ctor">
            <summary>Initializes a new instance of type StubITweetinviSettings</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubITweetinviSettings.AttachBackingFieldToProxyURL">
            <summary>Attaches delegates to emulate StubITweetinviSettings.ProxyURL as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubITweetinviSettings.AttachBackingFieldToShowDebug">
            <summary>Attaches delegates to emulate StubITweetinviSettings.ShowDebug as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubITweetinviSettings.AttachBackingFieldToWebRequestTimeout">
            <summary>Attaches delegates to emulate StubITweetinviSettings.WebRequestTimeout as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettings.Clone">
            <summary>Sets the stub of ITweetinviSettings.Clone()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettings.InitialiseFromITweetinviSettings">
            <summary>Sets the stub of ITweetinviSettings.InitialiseFrom(ITweetinviSettings other)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettings.ProxyURLGet">
            <summary>Sets the stub of ITweetinviSettings.get_ProxyURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettings.ProxyURLSetString">
            <summary>Sets the stub of ITweetinviSettings.set_ProxyURL(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettings.ShowDebugGet">
            <summary>Sets the stub of ITweetinviSettings.get_ShowDebug()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettings.ShowDebugSetBoolean">
            <summary>Sets the stub of ITweetinviSettings.set_ShowDebug(Boolean value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubITweetinviSettings.tc::Tweetinvi#Core#ITweetinviSettings#Clone">
            <summary>Sets the stub of ITweetinviSettings.Clone()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubITweetinviSettings.tc::Tweetinvi#Core#ITweetinviSettings#InitialiseFrom(Tweetinvi.Core.ITweetinviSettings)">
            <summary>Sets the stub of ITweetinviSettings.InitialiseFrom(ITweetinviSettings other)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettings.WebRequestTimeoutGet">
            <summary>Sets the stub of ITweetinviSettings.get_WebRequestTimeout()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettings.WebRequestTimeoutSetInt32">
            <summary>Sets the stub of ITweetinviSettings.set_WebRequestTimeout(Int32 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubITweetinviSettings.tc::Tweetinvi#Core#ITweetinviSettings#ProxyURL">
            <summary>Sets the stub of ITweetinviSettings.get_ProxyURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubITweetinviSettings.tc::Tweetinvi#Core#ITweetinviSettings#ShowDebug">
            <summary>Sets the stub of ITweetinviSettings.get_ShowDebug()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubITweetinviSettings.tc::Tweetinvi#Core#ITweetinviSettings#WebRequestTimeout">
            <summary>Sets the stub of ITweetinviSettings.get_WebRequestTimeout()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor">
            <summary>Stub type of Tweetinvi.Core.ITweetinviSettingsAccessor</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.#ctor">
            <summary>Initializes a new instance of type StubITweetinviSettingsAccessor</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.ApplicationSettingsGet">
            <summary>Sets the stub of ITweetinviSettingsAccessor.get_ApplicationSettings()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.ApplicationSettingsSetITweetinviSettings">
            <summary>Sets the stub of ITweetinviSettingsAccessor.set_ApplicationSettings(ITweetinviSettings value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.AttachBackingFieldToApplicationSettings">
            <summary>Attaches delegates to emulate StubITweetinviSettingsAccessor.ApplicationSettings as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.AttachBackingFieldToCurrentThreadSettings">
            <summary>Attaches delegates to emulate StubITweetinviSettingsAccessor.CurrentThreadSettings as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.AttachBackingFieldToProxyURL">
            <summary>Attaches delegates to emulate StubITweetinviSettingsAccessor.ProxyURL as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.AttachBackingFieldToShowDebug">
            <summary>Attaches delegates to emulate StubITweetinviSettingsAccessor.ShowDebug as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.AttachBackingFieldToWebRequestTimeout">
            <summary>Attaches delegates to emulate StubITweetinviSettingsAccessor.WebRequestTimeout as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.CurrentThreadSettingsGet">
            <summary>Sets the stub of ITweetinviSettingsAccessor.get_CurrentThreadSettings()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.CurrentThreadSettingsSetITweetinviSettings">
            <summary>Sets the stub of ITweetinviSettingsAccessor.set_CurrentThreadSettings(ITweetinviSettings value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.ProxyURLGet">
            <summary>Sets the stub of ITweetinviSettingsAccessor.get_ProxyURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.ProxyURLSetString">
            <summary>Sets the stub of ITweetinviSettingsAccessor.set_ProxyURL(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.ShowDebugGet">
            <summary>Sets the stub of ITweetinviSettingsAccessor.get_ShowDebug()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.ShowDebugSetBoolean">
            <summary>Sets the stub of ITweetinviSettingsAccessor.set_ShowDebug(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.WebRequestTimeoutGet">
            <summary>Sets the stub of ITweetinviSettingsAccessor.get_WebRequestTimeout()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.WebRequestTimeoutSetInt32">
            <summary>Sets the stub of ITweetinviSettingsAccessor.set_WebRequestTimeout(Int32 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.tc::Tweetinvi#Core#ITweetinviSettingsAccessor#ApplicationSettings">
            <summary>Sets the stub of ITweetinviSettingsAccessor.get_ApplicationSettings()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.tc::Tweetinvi#Core#ITweetinviSettingsAccessor#CurrentThreadSettings">
            <summary>Sets the stub of ITweetinviSettingsAccessor.get_CurrentThreadSettings()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.tc::Tweetinvi#Core#ITweetinviSettingsAccessor#ProxyURL">
            <summary>Sets the stub of ITweetinviSettingsAccessor.get_ProxyURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.tc::Tweetinvi#Core#ITweetinviSettingsAccessor#ShowDebug">
            <summary>Sets the stub of ITweetinviSettingsAccessor.get_ShowDebug()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubITweetinviSettingsAccessor.tc::Tweetinvi#Core#ITweetinviSettingsAccessor#WebRequestTimeout">
            <summary>Sets the stub of ITweetinviSettingsAccessor.get_WebRequestTimeout()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Fakes.StubTweetinviCoreModule">
            <summary>Stub type of Tweetinvi.Core.TweetinviCoreModule</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubTweetinviCoreModule.#ctor(Tweetinvi.Core.Injectinvi.ITweetinviContainer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubTweetinviCoreModule.InitializeStub">
            <summary>Initializes a new instance of type StubTweetinviCoreModule</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubTweetinviCoreModule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubTweetinviCoreModule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubTweetinviCoreModule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Fakes.StubTweetinviSettings">
            <summary>Stub type of Tweetinvi.Core.TweetinviSettings</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubTweetinviSettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubTweetinviSettings.InitializeStub">
            <summary>Initializes a new instance of type StubTweetinviSettings</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubTweetinviSettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubTweetinviSettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubTweetinviSettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Fakes.StubTweetinviSettingsAccessor">
            <summary>Stub type of Tweetinvi.Core.TweetinviSettingsAccessor</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubTweetinviSettingsAccessor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Fakes.StubTweetinviSettingsAccessor.InitializeStub">
            <summary>Initializes a new instance of type StubTweetinviSettingsAccessor</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubTweetinviSettingsAccessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubTweetinviSettingsAccessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Fakes.StubTweetinviSettingsAccessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Helpers.Fakes.ShimSynchronousInvoker">
            <summary>Shim type of Tweetinvi.Core.Helpers.SynchronousInvoker</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.ShimSynchronousInvoker.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.ShimSynchronousInvoker.#ctor(Tweetinvi.Core.Helpers.SynchronousInvoker)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.ShimSynchronousInvoker.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.ShimSynchronousInvoker.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.ShimSynchronousInvoker.Bind(Tweetinvi.Core.Helpers.ISynchronousInvoker)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.ShimSynchronousInvoker.GetResultSyncrhonouslyOf1TaskOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.Task{``0},``0})">
            <summary>Sets the shim of SynchronousInvoker.GetResultSyncrhonously(Task`1&lt;!!0&gt; task)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Helpers.Fakes.ShimSynchronousInvoker.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Helpers.Fakes.ShimSynchronousInvoker.Constructor">
            <summary>Sets the shim of SynchronousInvoker.SynchronousInvoker()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Helpers.Fakes.ShimSynchronousInvoker.ExecuteSynchronouslyTask">
            <summary>Sets the shim of SynchronousInvoker.ExecuteSynchronously(Task task)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Helpers.Fakes.ShimSynchronousInvoker.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.ShimSynchronousInvoker.AllInstances.GetResultSyncrhonouslyOf1TaskOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tweetinvi.Core.Helpers.SynchronousInvoker,System.Threading.Tasks.Task{``0},``0})">
            <summary>Sets the shim of SynchronousInvoker.GetResultSyncrhonously(Task`1&lt;!!0&gt; task)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Helpers.Fakes.ShimSynchronousInvoker.AllInstances.ExecuteSynchronouslyTask">
            <summary>Sets the shim of SynchronousInvoker.ExecuteSynchronously(Task task)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Helpers.Fakes.ShimTaskFactory">
            <summary>Shim type of Tweetinvi.Core.Helpers.TaskFactory</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.ShimTaskFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.ShimTaskFactory.#ctor(Tweetinvi.Core.Helpers.TaskFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.ShimTaskFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.ShimTaskFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.ShimTaskFactory.Bind(Tweetinvi.Core.Helpers.ITaskFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.ShimTaskFactory.ExecuteTaskAsyncOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},System.Threading.Tasks.Task{``0}})">
            <summary>Sets the shim of TaskFactory.ExecuteTaskAsync(Func`1&lt;!!0&gt; resultFunc)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Helpers.Fakes.ShimTaskFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Helpers.Fakes.ShimTaskFactory.Constructor">
            <summary>Sets the shim of TaskFactory.TaskFactory()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Helpers.Fakes.ShimTaskFactory.ExecuteTaskAsyncAction">
            <summary>Sets the shim of TaskFactory.ExecuteTaskAsync(Action action)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Helpers.Fakes.ShimTaskFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.ShimTaskFactory.AllInstances.ExecuteTaskAsyncOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tweetinvi.Core.Helpers.TaskFactory,System.Func{``0},System.Threading.Tasks.Task{``0}})">
            <summary>Sets the shim of TaskFactory.ExecuteTaskAsync(Func`1&lt;!!0&gt; resultFunc)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Helpers.Fakes.ShimTaskFactory.AllInstances.ExecuteTaskAsyncAction">
            <summary>Sets the shim of TaskFactory.ExecuteTaskAsync(Action action)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Helpers.Fakes.StubIJsonObjectConverter">
            <summary>Stub type of Tweetinvi.Core.Helpers.IJsonObjectConverter</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubIJsonObjectConverter.#ctor">
            <summary>Initializes a new instance of type StubIJsonObjectConverter</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubIJsonObjectConverter.DeserializeObjectOf1StringJsonConverterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Newtonsoft.Json.JsonConverter[],``0})">
            <summary>Sets stubs of DeserializeObject(String json, JsonConverter[] converters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubIJsonObjectConverter.tc::Tweetinvi#Core#Helpers#IJsonObjectConverter#DeserializeObject``1(System.String,Newtonsoft.Json.JsonConverter[])">
            <summary>Sets the stub of IJsonObjectConverter.DeserializeObject(String json, JsonConverter[] converters)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Helpers.Fakes.StubIJsonPropertyConverterRepository">
            <summary>Stub type of Tweetinvi.Core.Helpers.IJsonPropertyConverterRepository</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubIJsonPropertyConverterRepository.#ctor">
            <summary>Initializes a new instance of type StubIJsonPropertyConverterRepository</summary>
        </member>
        <member name="F:Tweetinvi.Core.Helpers.Fakes.StubIJsonPropertyConverterRepository.CanConvertType">
            <summary>Sets the stub of IJsonPropertyConverterRepository.CanConvert(Type objectType)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Helpers.Fakes.StubIJsonPropertyConverterRepository.GetObjectConverterObject">
            <summary>Sets the stub of IJsonPropertyConverterRepository.GetObjectConverter(Object objectToConvert)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Helpers.Fakes.StubIJsonPropertyConverterRepository.GetTypeConverterType">
            <summary>Sets the stub of IJsonPropertyConverterRepository.GetTypeConverter(Type objectType)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Helpers.Fakes.StubIJsonPropertyConverterRepository.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the stub of IJsonPropertyConverterRepository.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubIJsonPropertyConverterRepository.tc::Tweetinvi#Core#Helpers#IJsonPropertyConverterRepository#CanConvert(System.Type)">
            <summary>Sets the stub of IJsonPropertyConverterRepository.CanConvert(Type objectType)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubIJsonPropertyConverterRepository.tc::Tweetinvi#Core#Helpers#IJsonPropertyConverterRepository#GetObjectConverter(System.Object)">
            <summary>Sets the stub of IJsonPropertyConverterRepository.GetObjectConverter(Object objectToConvert)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubIJsonPropertyConverterRepository.tc::Tweetinvi#Core#Helpers#IJsonPropertyConverterRepository#GetTypeConverter(System.Type)">
            <summary>Sets the stub of IJsonPropertyConverterRepository.GetTypeConverter(Type objectType)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubIJsonPropertyConverterRepository.tc::Tweetinvi#Core#Helpers#IJsonPropertyConverterRepository#ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Sets the stub of IJsonPropertyConverterRepository.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubIJsonPropertyConverterRepository.tc::Tweetinvi#Core#Helpers#IJsonPropertyConverterRepository#WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Sets the stub of IJsonPropertyConverterRepository.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Helpers.Fakes.StubIJsonPropertyConverterRepository.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the stub of IJsonPropertyConverterRepository.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Helpers.Fakes.StubISynchronousInvoker">
            <summary>Stub type of Tweetinvi.Core.Helpers.ISynchronousInvoker</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubISynchronousInvoker.#ctor">
            <summary>Initializes a new instance of type StubISynchronousInvoker</summary>
        </member>
        <member name="F:Tweetinvi.Core.Helpers.Fakes.StubISynchronousInvoker.ExecuteSynchronouslyTask">
            <summary>Sets the stub of ISynchronousInvoker.ExecuteSynchronously(Task task)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubISynchronousInvoker.GetResultSyncrhonouslyOf1TaskOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.Task{``0},``0})">
            <summary>Sets stubs of GetResultSyncrhonously(Task`1&lt;!!0&gt; task)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubISynchronousInvoker.tc::Tweetinvi#Core#Helpers#ISynchronousInvoker#ExecuteSynchronously(System.Threading.Tasks.Task)">
            <summary>Sets the stub of ISynchronousInvoker.ExecuteSynchronously(Task task)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubISynchronousInvoker.tc::Tweetinvi#Core#Helpers#ISynchronousInvoker#GetResultSyncrhonously``1(System.Threading.Tasks.Task{``0})">
            <summary>Sets the stub of ISynchronousInvoker.GetResultSyncrhonously(Task`1&lt;!!0&gt; task)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Helpers.Fakes.StubITaskFactory">
            <summary>Stub type of Tweetinvi.Core.Helpers.ITaskFactory</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubITaskFactory.#ctor">
            <summary>Initializes a new instance of type StubITaskFactory</summary>
        </member>
        <member name="F:Tweetinvi.Core.Helpers.Fakes.StubITaskFactory.ExecuteTaskAsyncAction">
            <summary>Sets the stub of ITaskFactory.ExecuteTaskAsync(Action action)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubITaskFactory.ExecuteTaskAsyncOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},System.Threading.Tasks.Task{``0}})">
            <summary>Sets stubs of ExecuteTaskAsync(Func`1&lt;!!0&gt; resultFunc)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubITaskFactory.tc::Tweetinvi#Core#Helpers#ITaskFactory#ExecuteTaskAsync(System.Action)">
            <summary>Sets the stub of ITaskFactory.ExecuteTaskAsync(Action action)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubITaskFactory.tc::Tweetinvi#Core#Helpers#ITaskFactory#ExecuteTaskAsync``1(System.Func{``0})">
            <summary>Sets the stub of ITaskFactory.ExecuteTaskAsync(Func`1&lt;!!0&gt; resultFunc)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Helpers.Fakes.StubITwitterStringFormatter">
            <summary>Stub type of Tweetinvi.Core.Helpers.ITwitterStringFormatter</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubITwitterStringFormatter.#ctor">
            <summary>Initializes a new instance of type StubITwitterStringFormatter</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubITwitterStringFormatter.tc::Tweetinvi#Core#Helpers#ITwitterStringFormatter#TwitterDecode(System.String)">
            <summary>Sets the stub of ITwitterStringFormatter.TwitterDecode(String source)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubITwitterStringFormatter.tc::Tweetinvi#Core#Helpers#ITwitterStringFormatter#TwitterEncode(System.String)">
            <summary>Sets the stub of ITwitterStringFormatter.TwitterEncode(String source)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Helpers.Fakes.StubITwitterStringFormatter.TwitterDecodeString">
            <summary>Sets the stub of ITwitterStringFormatter.TwitterDecode(String source)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Helpers.Fakes.StubITwitterStringFormatter.TwitterEncodeString">
            <summary>Sets the stub of ITwitterStringFormatter.TwitterEncode(String source)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Helpers.Fakes.StubSynchronousInvoker">
            <summary>Stub type of Tweetinvi.Core.Helpers.SynchronousInvoker</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubSynchronousInvoker.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubSynchronousInvoker.InitializeStub">
            <summary>Initializes a new instance of type StubSynchronousInvoker</summary>
        </member>
        <member name="P:Tweetinvi.Core.Helpers.Fakes.StubSynchronousInvoker.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Helpers.Fakes.StubSynchronousInvoker.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Helpers.Fakes.StubSynchronousInvoker.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Helpers.Fakes.StubTaskFactory">
            <summary>Stub type of Tweetinvi.Core.Helpers.TaskFactory</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubTaskFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Helpers.Fakes.StubTaskFactory.InitializeStub">
            <summary>Initializes a new instance of type StubTaskFactory</summary>
        </member>
        <member name="P:Tweetinvi.Core.Helpers.Fakes.StubTaskFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Helpers.Fakes.StubTaskFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Helpers.Fakes.StubTaskFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter">
            <summary>Shim type of Tweetinvi.Core.Injectinvi.ConstructorNamedParameter</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.#ctor(Tweetinvi.Core.Injectinvi.ConstructorNamedParameter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.Bind(Tweetinvi.Core.Injectinvi.IConstructorNamedParameter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.ConstructorStringObject">
            <summary>Sets the shim of ConstructorNamedParameter.ConstructorNamedParameter(String name, Object value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.NameGet">
            <summary>Sets the shim of ConstructorNamedParameter.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.NameSetString">
            <summary>Sets the shim of ConstructorNamedParameter.set_Name(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.ValueGet">
            <summary>Sets the shim of ConstructorNamedParameter.get_Value()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.ValueSetObject">
            <summary>Sets the shim of ConstructorNamedParameter.set_Value(Object value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.AllInstances.NameGet">
            <summary>Sets the shim of ConstructorNamedParameter.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.AllInstances.NameSetString">
            <summary>Sets the shim of ConstructorNamedParameter.set_Name(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.AllInstances.ValueGet">
            <summary>Sets the shim of ConstructorNamedParameter.get_Value()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimConstructorNamedParameter.AllInstances.ValueSetObject">
            <summary>Sets the shim of ConstructorNamedParameter.set_Value(Object value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Injectinvi.Fakes.ShimFactory`1">
            <summary>Shim type of Tweetinvi.Core.Injectinvi.Factory`1</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.ShimFactory`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.ShimFactory`1.#ctor(Tweetinvi.Core.Injectinvi.Factory{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.ShimFactory`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.ShimFactory`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.ShimFactory`1.Bind(Tweetinvi.Core.Injectinvi.IFactory{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimFactory`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimFactory`1.ConstructorITweetinviContainer">
            <summary>Sets the shim of Factory`1.Factory`1(ITweetinviContainer container)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimFactory`1.CreateIConstructorNamedParameterArray">
            <summary>Sets the shim of Factory`1.Create(IConstructorNamedParameter[] parameters)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimFactory`1.GenerateParameterOverrideWrapperStringObject">
            <summary>Sets the shim of Factory`1.GenerateParameterOverrideWrapper(String parameterName, Object parameterValue)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Injectinvi.Fakes.ShimFactory`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimFactory`1.AllInstances.CreateIConstructorNamedParameterArray">
            <summary>Sets the shim of Factory`1.Create(IConstructorNamedParameter[] parameters)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.ShimFactory`1.AllInstances.GenerateParameterOverrideWrapperStringObject">
            <summary>Sets the shim of Factory`1.GenerateParameterOverrideWrapper(String parameterName, Object parameterValue)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Injectinvi.Fakes.StubConstructorNamedParameter">
            <summary>Stub type of Tweetinvi.Core.Injectinvi.ConstructorNamedParameter</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubConstructorNamedParameter.#ctor(System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubConstructorNamedParameter.InitializeStub">
            <summary>Initializes a new instance of type StubConstructorNamedParameter</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.StubConstructorNamedParameter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.StubConstructorNamedParameter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.StubConstructorNamedParameter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Injectinvi.Fakes.StubFactory`1">
            <summary>Stub type of Tweetinvi.Core.Injectinvi.Factory`1</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubFactory`1.#ctor(Tweetinvi.Core.Injectinvi.ITweetinviContainer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubFactory`1.InitializeStub">
            <summary>Initializes a new instance of type StubFactory</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.StubFactory`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.StubFactory`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.StubFactory`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Injectinvi.Fakes.StubIConstructorNamedParameter">
            <summary>Stub type of Tweetinvi.Core.Injectinvi.IConstructorNamedParameter</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubIConstructorNamedParameter.#ctor">
            <summary>Initializes a new instance of type StubIConstructorNamedParameter</summary>
        </member>
        <member name="F:Tweetinvi.Core.Injectinvi.Fakes.StubIConstructorNamedParameter.NameGet">
            <summary>Sets the stub of IConstructorNamedParameter.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Injectinvi.Fakes.StubIConstructorNamedParameter.ValueGet">
            <summary>Sets the stub of IConstructorNamedParameter.get_Value()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.StubIConstructorNamedParameter.tc::Tweetinvi#Core#Injectinvi#IConstructorNamedParameter#Name">
            <summary>Sets the stub of IConstructorNamedParameter.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Injectinvi.Fakes.StubIConstructorNamedParameter.tc::Tweetinvi#Core#Injectinvi#IConstructorNamedParameter#Value">
            <summary>Sets the stub of IConstructorNamedParameter.get_Value()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Injectinvi.Fakes.StubIFactory`1">
            <summary>Stub type of Tweetinvi.Core.Injectinvi.IFactory`1</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubIFactory`1.#ctor">
            <summary>Initializes a new instance of type StubIFactory</summary>
        </member>
        <member name="F:Tweetinvi.Core.Injectinvi.Fakes.StubIFactory`1.CreateIConstructorNamedParameterArray">
            <summary>Sets the stub of IFactory`1.Create(IConstructorNamedParameter[] parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Injectinvi.Fakes.StubIFactory`1.GenerateParameterOverrideWrapperStringObject">
            <summary>Sets the stub of IFactory`1.GenerateParameterOverrideWrapper(String parameterName, Object parameterValue)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubIFactory`1.tc::Tweetinvi#Core#Injectinvi#IFactory{T}#Create(Tweetinvi.Core.Injectinvi.IConstructorNamedParameter[])">
            <summary>Sets the stub of IFactory`1.Create(IConstructorNamedParameter[] parameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubIFactory`1.tc::Tweetinvi#Core#Injectinvi#IFactory{T}#GenerateParameterOverrideWrapper(System.String,System.Object)">
            <summary>Sets the stub of IFactory`1.GenerateParameterOverrideWrapper(String parameterName, Object parameterValue)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviContainer">
            <summary>Stub type of Tweetinvi.Core.Injectinvi.ITweetinviContainer</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviContainer.#ctor">
            <summary>Initializes a new instance of type StubITweetinviContainer</summary>
        </member>
        <member name="F:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviContainer.Initialize">
            <summary>Sets the stub of ITweetinviContainer.Initialize()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviContainer.RegisterGenericTypeTypeRegistrationLifetime">
            <summary>Sets the stub of ITweetinviContainer.RegisterGeneric(Type sourceType, Type targetType, RegistrationLifetime registrationLifetime)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviContainer.RegisterInstanceTypeObject">
            <summary>Sets the stub of ITweetinviContainer.RegisterInstance(Type T, Object value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviContainer.RegisterTypeOf2RegistrationLifetime``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Tweetinvi.Core.Injectinvi.RegistrationLifetime})">
            <summary>Sets stubs of RegisterType(RegistrationLifetime registrationLifetime)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviContainer.ResolveOf1IConstructorNamedParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tweetinvi.Core.Injectinvi.IConstructorNamedParameter[],``0})">
            <summary>Sets stubs of Resolve(IConstructorNamedParameter[] parameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviContainer.tc::Tweetinvi#Core#Injectinvi#ITweetinviContainer#Initialize">
            <summary>Sets the stub of ITweetinviContainer.Initialize()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviContainer.tc::Tweetinvi#Core#Injectinvi#ITweetinviContainer#RegisterGeneric(System.Type,System.Type,Tweetinvi.Core.Injectinvi.RegistrationLifetime)">
            <summary>Sets the stub of ITweetinviContainer.RegisterGeneric(Type sourceType, Type targetType, RegistrationLifetime registrationLifetime)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviContainer.tc::Tweetinvi#Core#Injectinvi#ITweetinviContainer#RegisterInstance(System.Type,System.Object)">
            <summary>Sets the stub of ITweetinviContainer.RegisterInstance(Type T, Object value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviContainer.tc::Tweetinvi#Core#Injectinvi#ITweetinviContainer#RegisterType``2(Tweetinvi.Core.Injectinvi.RegistrationLifetime)">
            <summary>Sets the stub of ITweetinviContainer.RegisterType(RegistrationLifetime registrationLifetime)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviContainer.tc::Tweetinvi#Core#Injectinvi#ITweetinviContainer#Resolve``1(Tweetinvi.Core.Injectinvi.IConstructorNamedParameter[])">
            <summary>Sets the stub of ITweetinviContainer.Resolve(IConstructorNamedParameter[] parameters)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviModule">
            <summary>Stub type of Tweetinvi.Core.Injectinvi.ITweetinviModule</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviModule.#ctor">
            <summary>Initializes a new instance of type StubITweetinviModule</summary>
        </member>
        <member name="F:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviModule.Initialize">
            <summary>Sets the stub of ITweetinviModule.Initialize()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Injectinvi.Fakes.StubITweetinviModule.tc::Tweetinvi#Core#Injectinvi#ITweetinviModule#Initialize">
            <summary>Sets the stub of ITweetinviModule.Initialize()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Async.ILoggedUserAsync</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.#ctor">
            <summary>Initializes a new instance of type StubILoggedUserAsync</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.FollowUserAsyncIUser">
            <summary>Sets the stub of ILoggedUserAsync.FollowUserAsync(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.GetAccountSettingsAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetAccountSettingsAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.GetBlockedUsersAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetBlockedUsersAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.GetBlockedUsersIdsAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetBlockedUsersIdsAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.GetHomeTimelineAsyncITimelineRequestParameters">
            <summary>Sets the stub of ILoggedUserAsync.GetHomeTimelineAsync(ITimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.GetHomeTimelineAsyncInt32">
            <summary>Sets the stub of ILoggedUserAsync.GetHomeTimelineAsync(Int32 count)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.GetLatestMessagesReceivedAsyncInt32">
            <summary>Sets the stub of ILoggedUserAsync.GetLatestMessagesReceivedAsync(Int32 count)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.GetLatestMessagesSentAsyncInt32">
            <summary>Sets the stub of ILoggedUserAsync.GetLatestMessagesSentAsync(Int32 maximumMessages)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.GetMentionsTimelineAsyncInt32">
            <summary>Sets the stub of ILoggedUserAsync.GetMentionsTimelineAsync(Int32 count)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.GetRelationshipStatesAssociatedWithAsyncIEnumerableOfIUser">
            <summary>Sets the stub of ILoggedUserAsync.GetRelationshipStatesAssociatedWithAsync(IEnumerable`1&lt;IUser&gt; users)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.GetRelationshipStatesWithAsyncIEnumerableOfIUser">
            <summary>Sets the stub of ILoggedUserAsync.GetRelationshipStatesWithAsync(IEnumerable`1&lt;IUser&gt; users)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.GetSavedSearchesAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetSavedSearchesAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.GetSuggestedUserListAsyncBoolean">
            <summary>Sets the stub of ILoggedUserAsync.GetSuggestedUserListAsync(Boolean createSuggestedUserList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.GetUsersRequestingFriendshipAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetUsersRequestingFriendshipAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.GetUsersYouRequestedToFollowAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetUsersYouRequestedToFollowAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.PublishMessageAsyncIMessage">
            <summary>Sets the stub of ILoggedUserAsync.PublishMessageAsync(IMessage message)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#FollowUserAsync(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of ILoggedUserAsync.FollowUserAsync(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetAccountSettingsAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetAccountSettingsAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetBlockedUsersAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetBlockedUsersAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetBlockedUsersIdsAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetBlockedUsersIdsAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetHomeTimelineAsync(Tweetinvi.Core.Interfaces.Models.Parameters.ITimelineRequestParameters)">
            <summary>Sets the stub of ILoggedUserAsync.GetHomeTimelineAsync(ITimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetHomeTimelineAsync(System.Int32)">
            <summary>Sets the stub of ILoggedUserAsync.GetHomeTimelineAsync(Int32 count)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetLatestMessagesReceivedAsync(System.Int32)">
            <summary>Sets the stub of ILoggedUserAsync.GetLatestMessagesReceivedAsync(Int32 count)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetLatestMessagesSentAsync(System.Int32)">
            <summary>Sets the stub of ILoggedUserAsync.GetLatestMessagesSentAsync(Int32 maximumMessages)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetMentionsTimelineAsync(System.Int32)">
            <summary>Sets the stub of ILoggedUserAsync.GetMentionsTimelineAsync(Int32 count)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetRelationshipStatesAssociatedWithAsync(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.IUser})">
            <summary>Sets the stub of ILoggedUserAsync.GetRelationshipStatesAssociatedWithAsync(IEnumerable`1&lt;IUser&gt; users)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetRelationshipStatesWithAsync(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.IUser})">
            <summary>Sets the stub of ILoggedUserAsync.GetRelationshipStatesWithAsync(IEnumerable`1&lt;IUser&gt; users)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetSavedSearchesAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetSavedSearchesAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetSuggestedUserListAsync(System.Boolean)">
            <summary>Sets the stub of ILoggedUserAsync.GetSuggestedUserListAsync(Boolean createSuggestedUserList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetUsersRequestingFriendshipAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetUsersRequestingFriendshipAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetUsersYouRequestedToFollowAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetUsersYouRequestedToFollowAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#PublishMessageAsync(Tweetinvi.Core.Interfaces.IMessage)">
            <summary>Sets the stub of ILoggedUserAsync.PublishMessageAsync(IMessage message)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#UnFollowUserAsync(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of ILoggedUserAsync.UnFollowUserAsync(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#UpdateRelationshipAuthorizationsWithAsync(Tweetinvi.Core.Interfaces.IUser,System.Boolean,System.Boolean)">
            <summary>Sets the stub of ILoggedUserAsync.UpdateRelationshipAuthorizationsWithAsync(IUser user, Boolean retweetsEnabled, Boolean deviceNotificationsEnabled)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.UnFollowUserAsyncIUser">
            <summary>Sets the stub of ILoggedUserAsync.UnFollowUserAsync(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubILoggedUserAsync.UpdateRelationshipAuthorizationsWithAsyncIUserBooleanBoolean">
            <summary>Sets the stub of ILoggedUserAsync.UpdateRelationshipAuthorizationsWithAsync(IUser user, Boolean retweetsEnabled, Boolean deviceNotificationsEnabled)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Async.Fakes.StubIMessageAsync">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Async.IMessageAsync</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIMessageAsync.#ctor">
            <summary>Initializes a new instance of type StubIMessageAsync</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIMessageAsync.DestroyAsync">
            <summary>Sets the stub of IMessageAsync.DestroyAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIMessageAsync.PublishAsync">
            <summary>Sets the stub of IMessageAsync.PublishAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIMessageAsync.PublishToAsyncIUser">
            <summary>Sets the stub of IMessageAsync.PublishToAsync(IUser recipient)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIMessageAsync.tc::Tweetinvi#Core#Interfaces#Async#IMessageAsync#DestroyAsync">
            <summary>Sets the stub of IMessageAsync.DestroyAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIMessageAsync.tc::Tweetinvi#Core#Interfaces#Async#IMessageAsync#PublishAsync">
            <summary>Sets the stub of IMessageAsync.PublishAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIMessageAsync.tc::Tweetinvi#Core#Interfaces#Async#IMessageAsync#PublishToAsync(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IMessageAsync.PublishToAsync(IUser recipient)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Async.ITweetAsync</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.#ctor">
            <summary>Initializes a new instance of type StubITweetAsync</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.DestroyAsync">
            <summary>Sets the stub of ITweetAsync.DestroyAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.FavouriteAsync">
            <summary>Sets the stub of ITweetAsync.FavouriteAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.GenerateOEmbedTweetAsync">
            <summary>Sets the stub of ITweetAsync.GenerateOEmbedTweetAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.GetRetweetsAsync">
            <summary>Sets the stub of ITweetAsync.GetRetweetsAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.PublishAsync">
            <summary>Sets the stub of ITweetAsync.PublishAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.PublishInReplyToAsyncITweet">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.PublishInReplyToAsyncInt64">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(Int64 replyToTweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.PublishReplyAsyncString">
            <summary>Sets the stub of ITweetAsync.PublishReplyAsync(String text)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.PublishRetweetAsync">
            <summary>Sets the stub of ITweetAsync.PublishRetweetAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.PublishWithGeoAsyncDoubleDouble">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(Double longitude, Double latitude)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.PublishWithGeoAsyncICoordinates">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(ICoordinates coordinates)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.PublishWithGeoInReplyToAsyncDoubleDoubleITweet">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.PublishWithGeoInReplyToAsyncDoubleDoubleInt64">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#DestroyAsync">
            <summary>Sets the stub of ITweetAsync.DestroyAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#FavouriteAsync">
            <summary>Sets the stub of ITweetAsync.FavouriteAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#GenerateOEmbedTweetAsync">
            <summary>Sets the stub of ITweetAsync.GenerateOEmbedTweetAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#GetRetweetsAsync">
            <summary>Sets the stub of ITweetAsync.GetRetweetsAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishAsync">
            <summary>Sets the stub of ITweetAsync.PublishAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishInReplyToAsync(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishInReplyToAsync(System.Int64)">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishReplyAsync(System.String)">
            <summary>Sets the stub of ITweetAsync.PublishReplyAsync(String text)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishRetweetAsync">
            <summary>Sets the stub of ITweetAsync.PublishRetweetAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoAsync(Tweetinvi.Core.Interfaces.Models.ICoordinates)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(ICoordinates coordinates)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoAsync(System.Double,System.Double)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(Double longitude, Double latitude)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoInReplyToAsync(System.Double,System.Double,Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoInReplyToAsync(System.Double,System.Double,System.Int64)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#UnFavouriteAsync">
            <summary>Sets the stub of ITweetAsync.UnFavouriteAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetAsync.UnFavouriteAsync">
            <summary>Sets the stub of ITweetAsync.UnFavouriteAsync()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetListAsync">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Async.ITweetListAsync</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetListAsync.#ctor">
            <summary>Initializes a new instance of type StubITweetListAsync</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetListAsync.DestroyAsync">
            <summary>Sets the stub of ITweetListAsync.DestroyAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetListAsync.GetMembersAsyncInt32">
            <summary>Sets the stub of ITweetListAsync.GetMembersAsync(Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetListAsync.GetTweetsAsync">
            <summary>Sets the stub of ITweetListAsync.GetTweetsAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetListAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetListAsync#DestroyAsync">
            <summary>Sets the stub of ITweetListAsync.DestroyAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetListAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetListAsync#GetMembersAsync(System.Int32)">
            <summary>Sets the stub of ITweetListAsync.GetMembersAsync(Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetListAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetListAsync#GetTweetsAsync">
            <summary>Sets the stub of ITweetListAsync.GetTweetsAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetListAsync.tc::Tweetinvi#Core#Interfaces#Async#ITweetListAsync#UpdateAsync(Tweetinvi.Core.Interfaces.Parameters.IListUpdateParameters)">
            <summary>Sets the stub of ITweetListAsync.UpdateAsync(IListUpdateParameters parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubITweetListAsync.UpdateAsyncIListUpdateParameters">
            <summary>Sets the stub of ITweetListAsync.UpdateAsync(IListUpdateParameters parameters)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Async.IUserAsync</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.#ctor">
            <summary>Initializes a new instance of type StubIUserAsync</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.BlockAsync">
            <summary>Sets the stub of IUserAsync.BlockAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.GetContributeesAsyncBoolean">
            <summary>Sets the stub of IUserAsync.GetContributeesAsync(Boolean createContributeeList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.GetContributorsAsyncBoolean">
            <summary>Sets the stub of IUserAsync.GetContributorsAsync(Boolean createContributorList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.GetFavoritesAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFavoritesAsync(Int32 maximumTweets)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.GetFollowerIdsAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFollowerIdsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.GetFollowersAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFollowersAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.GetFriendIdsAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFriendIdsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.GetFriendsAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFriendsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.GetProfileImageStreamAsyncImageSize">
            <summary>Sets the stub of IUserAsync.GetProfileImageStreamAsync(ImageSize imageSize)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.GetRelationshipWithAsyncIUser">
            <summary>Sets the stub of IUserAsync.GetRelationshipWithAsync(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.GetUserTimelineAsyncIUserTimelineRequestParameters">
            <summary>Sets the stub of IUserAsync.GetUserTimelineAsync(IUserTimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.GetUserTimelineAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetUserTimelineAsync(Int32 maximumTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#BlockAsync">
            <summary>Sets the stub of IUserAsync.BlockAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetContributeesAsync(System.Boolean)">
            <summary>Sets the stub of IUserAsync.GetContributeesAsync(Boolean createContributeeList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetContributorsAsync(System.Boolean)">
            <summary>Sets the stub of IUserAsync.GetContributorsAsync(Boolean createContributorList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFavoritesAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFavoritesAsync(Int32 maximumTweets)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFollowerIdsAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFollowerIdsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFollowersAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFollowersAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFriendIdsAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFriendIdsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFriendsAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFriendsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetProfileImageStreamAsync(Tweetinvi.Core.Enum.ImageSize)">
            <summary>Sets the stub of IUserAsync.GetProfileImageStreamAsync(ImageSize imageSize)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetRelationshipWithAsync(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IUserAsync.GetRelationshipWithAsync(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetUserTimelineAsync(Tweetinvi.Core.Interfaces.Models.Parameters.IUserTimelineRequestParameters)">
            <summary>Sets the stub of IUserAsync.GetUserTimelineAsync(IUserTimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetUserTimelineAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetUserTimelineAsync(Int32 maximumTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#UnBlockAsync">
            <summary>Sets the stub of IUserAsync.UnBlockAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Async.Fakes.StubIUserAsync.UnBlockAsync">
            <summary>Sets the stub of IUserAsync.UnBlockAsync()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIAccountController">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Controllers.IAccountController</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIAccountController.#ctor">
            <summary>Initializes a new instance of type StubIAccountController</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIAccountController.GetLoggedUserSettings">
            <summary>Sets the stub of IAccountController.GetLoggedUserSettings()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIAccountController.tc::Tweetinvi#Core#Interfaces#Controllers#IAccountController#GetLoggedUserSettings">
            <summary>Sets the stub of IAccountController.GetLoggedUserSettings()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Controllers.IFriendshipController</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.#ctor">
            <summary>Initializes a new instance of type StubIFriendshipController</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.CreateFriendshipWithIUser">
            <summary>Sets the stub of IFriendshipController.CreateFriendshipWith(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.CreateFriendshipWithIUserIdentifier">
            <summary>Sets the stub of IFriendshipController.CreateFriendshipWith(IUserIdentifier userDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.CreateFriendshipWithInt64">
            <summary>Sets the stub of IFriendshipController.CreateFriendshipWith(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.CreateFriendshipWithString">
            <summary>Sets the stub of IFriendshipController.CreateFriendshipWith(String userScreeName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.DestroyFriendshipWithIUser">
            <summary>Sets the stub of IFriendshipController.DestroyFriendshipWith(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.DestroyFriendshipWithIUserIdentifier">
            <summary>Sets the stub of IFriendshipController.DestroyFriendshipWith(IUserIdentifier userDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.DestroyFriendshipWithInt64">
            <summary>Sets the stub of IFriendshipController.DestroyFriendshipWith(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.DestroyFriendshipWithString">
            <summary>Sets the stub of IFriendshipController.DestroyFriendshipWith(String userScreeName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetRelationshipBetweenIUserIUser">
            <summary>Sets the stub of IFriendshipController.GetRelationshipBetween(IUser sourceUser, IUser targetUser)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetRelationshipBetweenIUserIdentifierIUserIdentifier">
            <summary>Sets the stub of IFriendshipController.GetRelationshipBetween(IUserIdentifier sourceUserDTO, IUserIdentifier targetUserDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetRelationshipBetweenInt64Int64">
            <summary>Sets the stub of IFriendshipController.GetRelationshipBetween(Int64 sourceUserId, Int64 targetUserId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetRelationshipBetweenInt64String">
            <summary>Sets the stub of IFriendshipController.GetRelationshipBetween(Int64 sourceUserId, String targetUserScreenName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetRelationshipBetweenStringInt64">
            <summary>Sets the stub of IFriendshipController.GetRelationshipBetween(String sourceUserScreenName, Int64 targetUserId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetRelationshipBetweenStringString">
            <summary>Sets the stub of IFriendshipController.GetRelationshipBetween(String sourceUserScreenName, String targetUserScreenName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetRelationshipStatesAssociatedWithIEnumerableOfIUser">
            <summary>Sets the stub of IFriendshipController.GetRelationshipStatesAssociatedWith(IEnumerable`1&lt;IUser&gt; targetUsers)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetRelationshipStatesWithIEnumerableOfIUser">
            <summary>Sets the stub of IFriendshipController.GetRelationshipStatesWith(IEnumerable`1&lt;IUser&gt; targetUsers)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetRelationshipStatesWithIEnumerableOfIUserIdentifier">
            <summary>Sets the stub of IFriendshipController.GetRelationshipStatesWith(IEnumerable`1&lt;IUserIdentifier&gt; targetUsersDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetRelationshipStatesWithIEnumerableOfInt64">
            <summary>Sets the stub of IFriendshipController.GetRelationshipStatesWith(IEnumerable`1&lt;Int64&gt; targetUsersId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetRelationshipStatesWithIEnumerableOfString">
            <summary>Sets the stub of IFriendshipController.GetRelationshipStatesWith(IEnumerable`1&lt;String&gt; targetUsersScreenName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetUserIdsRequestingFriendship">
            <summary>Sets the stub of IFriendshipController.GetUserIdsRequestingFriendship()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetUserIdsYouRequestedToFollow">
            <summary>Sets the stub of IFriendshipController.GetUserIdsYouRequestedToFollow()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetUsersRequestingFriendship">
            <summary>Sets the stub of IFriendshipController.GetUsersRequestingFriendship()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.GetUsersYouRequestedToFollow">
            <summary>Sets the stub of IFriendshipController.GetUsersYouRequestedToFollow()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#CreateFriendshipWith(Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of IFriendshipController.CreateFriendshipWith(IUserIdentifier userDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#CreateFriendshipWith(System.Int64)">
            <summary>Sets the stub of IFriendshipController.CreateFriendshipWith(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#CreateFriendshipWith(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IFriendshipController.CreateFriendshipWith(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#CreateFriendshipWith(System.String)">
            <summary>Sets the stub of IFriendshipController.CreateFriendshipWith(String userScreeName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#DestroyFriendshipWith(Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of IFriendshipController.DestroyFriendshipWith(IUserIdentifier userDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#DestroyFriendshipWith(System.Int64)">
            <summary>Sets the stub of IFriendshipController.DestroyFriendshipWith(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#DestroyFriendshipWith(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IFriendshipController.DestroyFriendshipWith(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#DestroyFriendshipWith(System.String)">
            <summary>Sets the stub of IFriendshipController.DestroyFriendshipWith(String userScreeName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetRelationshipBetween(Tweetinvi.Core.Interfaces.IUser,Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IFriendshipController.GetRelationshipBetween(IUser sourceUser, IUser targetUser)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetRelationshipBetween(Tweetinvi.Core.Interfaces.Models.IUserIdentifier,Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of IFriendshipController.GetRelationshipBetween(IUserIdentifier sourceUserDTO, IUserIdentifier targetUserDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetRelationshipBetween(System.String,System.String)">
            <summary>Sets the stub of IFriendshipController.GetRelationshipBetween(String sourceUserScreenName, String targetUserScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetRelationshipBetween(System.Int64,System.Int64)">
            <summary>Sets the stub of IFriendshipController.GetRelationshipBetween(Int64 sourceUserId, Int64 targetUserId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetRelationshipBetween(System.String,System.Int64)">
            <summary>Sets the stub of IFriendshipController.GetRelationshipBetween(String sourceUserScreenName, Int64 targetUserId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetRelationshipBetween(System.Int64,System.String)">
            <summary>Sets the stub of IFriendshipController.GetRelationshipBetween(Int64 sourceUserId, String targetUserScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetRelationshipStatesAssociatedWith(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.IUser})">
            <summary>Sets the stub of IFriendshipController.GetRelationshipStatesAssociatedWith(IEnumerable`1&lt;IUser&gt; targetUsers)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetRelationshipStatesWith(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Sets the stub of IFriendshipController.GetRelationshipStatesWith(IEnumerable`1&lt;String&gt; targetUsersScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetRelationshipStatesWith(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>Sets the stub of IFriendshipController.GetRelationshipStatesWith(IEnumerable`1&lt;Int64&gt; targetUsersId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetRelationshipStatesWith(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.IUser})">
            <summary>Sets the stub of IFriendshipController.GetRelationshipStatesWith(IEnumerable`1&lt;IUser&gt; targetUsers)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetRelationshipStatesWith(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.Models.IUserIdentifier})">
            <summary>Sets the stub of IFriendshipController.GetRelationshipStatesWith(IEnumerable`1&lt;IUserIdentifier&gt; targetUsersDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetUserIdsRequestingFriendship">
            <summary>Sets the stub of IFriendshipController.GetUserIdsRequestingFriendship()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetUserIdsYouRequestedToFollow">
            <summary>Sets the stub of IFriendshipController.GetUserIdsYouRequestedToFollow()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetUsersRequestingFriendship">
            <summary>Sets the stub of IFriendshipController.GetUsersRequestingFriendship()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#GetUsersYouRequestedToFollow">
            <summary>Sets the stub of IFriendshipController.GetUsersYouRequestedToFollow()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#UpdateRelationshipAuthorizationsWith(Tweetinvi.Core.Interfaces.IUser,System.Boolean,System.Boolean)">
            <summary>Sets the stub of IFriendshipController.UpdateRelationshipAuthorizationsWith(IUser user, Boolean retweetsEnabled, Boolean deviceNotifictionEnabled)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#UpdateRelationshipAuthorizationsWith(System.String,System.Boolean,System.Boolean)">
            <summary>Sets the stub of IFriendshipController.UpdateRelationshipAuthorizationsWith(String userScreenName, Boolean retweetsEnabled, Boolean deviceNotifictionEnabled)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#UpdateRelationshipAuthorizationsWith(System.Int64,System.Boolean,System.Boolean)">
            <summary>Sets the stub of IFriendshipController.UpdateRelationshipAuthorizationsWith(Int64 userId, Boolean retweetsEnabled, Boolean deviceNotifictionEnabled)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.tc::Tweetinvi#Core#Interfaces#Controllers#IFriendshipController#UpdateRelationshipAuthorizationsWith(Tweetinvi.Core.Interfaces.Models.IUserIdentifier,System.Boolean,System.Boolean)">
            <summary>Sets the stub of IFriendshipController.UpdateRelationshipAuthorizationsWith(IUserIdentifier userDTO, Boolean retweetsEnabled, Boolean deviceNotifictionEnabled)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.UpdateRelationshipAuthorizationsWithIUserBooleanBoolean">
            <summary>Sets the stub of IFriendshipController.UpdateRelationshipAuthorizationsWith(IUser user, Boolean retweetsEnabled, Boolean deviceNotifictionEnabled)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.UpdateRelationshipAuthorizationsWithIUserIdentifierBooleanBoolean">
            <summary>Sets the stub of IFriendshipController.UpdateRelationshipAuthorizationsWith(IUserIdentifier userDTO, Boolean retweetsEnabled, Boolean deviceNotifictionEnabled)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.UpdateRelationshipAuthorizationsWithInt64BooleanBoolean">
            <summary>Sets the stub of IFriendshipController.UpdateRelationshipAuthorizationsWith(Int64 userId, Boolean retweetsEnabled, Boolean deviceNotifictionEnabled)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIFriendshipController.UpdateRelationshipAuthorizationsWithStringBooleanBoolean">
            <summary>Sets the stub of IFriendshipController.UpdateRelationshipAuthorizationsWith(String userScreenName, Boolean retweetsEnabled, Boolean deviceNotifictionEnabled)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIGeoController">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Controllers.IGeoController</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIGeoController.#ctor">
            <summary>Initializes a new instance of type StubIGeoController</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIGeoController.GetPlaceFromIdString">
            <summary>Sets the stub of IGeoController.GetPlaceFromId(String placeId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIGeoController.tc::Tweetinvi#Core#Interfaces#Controllers#IGeoController#GetPlaceFromId(System.String)">
            <summary>Sets the stub of IGeoController.GetPlaceFromId(String placeId)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIHelpController">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Controllers.IHelpController</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIHelpController.#ctor">
            <summary>Initializes a new instance of type StubIHelpController</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIHelpController.GetCredentialsRateLimitsIOAuthCredentials">
            <summary>Sets the stub of IHelpController.GetCredentialsRateLimits(IOAuthCredentials credentials)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIHelpController.GetCurrentCredentialsRateLimits">
            <summary>Sets the stub of IHelpController.GetCurrentCredentialsRateLimits()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIHelpController.GetTwitterPrivacyPolicy">
            <summary>Sets the stub of IHelpController.GetTwitterPrivacyPolicy()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIHelpController.tc::Tweetinvi#Core#Interfaces#Controllers#IHelpController#GetCredentialsRateLimits(Tweetinvi.Core.Interfaces.oAuth.IOAuthCredentials)">
            <summary>Sets the stub of IHelpController.GetCredentialsRateLimits(IOAuthCredentials credentials)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIHelpController.tc::Tweetinvi#Core#Interfaces#Controllers#IHelpController#GetCurrentCredentialsRateLimits">
            <summary>Sets the stub of IHelpController.GetCurrentCredentialsRateLimits()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIHelpController.tc::Tweetinvi#Core#Interfaces#Controllers#IHelpController#GetTwitterPrivacyPolicy">
            <summary>Sets the stub of IHelpController.GetTwitterPrivacyPolicy()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Controllers.IMessageController</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.#ctor">
            <summary>Initializes a new instance of type StubIMessageController</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.DestroyMessageIMessage">
            <summary>Sets the stub of IMessageController.DestroyMessage(IMessage message)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.DestroyMessageIMessageDTO">
            <summary>Sets the stub of IMessageController.DestroyMessage(IMessageDTO messageDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.DestroyMessageInt64">
            <summary>Sets the stub of IMessageController.DestroyMessage(Int64 messageId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.GetLatestMessagesReceivedInt32">
            <summary>Sets the stub of IMessageController.GetLatestMessagesReceived(Int32 maximumMessages)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.GetLatestMessagesSentInt32">
            <summary>Sets the stub of IMessageController.GetLatestMessagesSent(Int32 maximumMessages)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.PublishMessageIMessage">
            <summary>Sets the stub of IMessageController.PublishMessage(IMessage message)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.PublishMessageIMessageDTO">
            <summary>Sets the stub of IMessageController.PublishMessage(IMessageDTO messageDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.PublishMessageStringIUser">
            <summary>Sets the stub of IMessageController.PublishMessage(String text, IUser targetUser)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.PublishMessageStringIUserIdentifier">
            <summary>Sets the stub of IMessageController.PublishMessage(String text, IUserIdentifier targetUserDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.PublishMessageStringInt64">
            <summary>Sets the stub of IMessageController.PublishMessage(String text, Int64 targetUserId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.PublishMessageStringString">
            <summary>Sets the stub of IMessageController.PublishMessage(String text, String targetUserScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.tc::Tweetinvi#Core#Interfaces#Controllers#IMessageController#DestroyMessage(Tweetinvi.Core.Interfaces.IMessage)">
            <summary>Sets the stub of IMessageController.DestroyMessage(IMessage message)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.tc::Tweetinvi#Core#Interfaces#Controllers#IMessageController#DestroyMessage(Tweetinvi.Core.Interfaces.DTO.IMessageDTO)">
            <summary>Sets the stub of IMessageController.DestroyMessage(IMessageDTO messageDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.tc::Tweetinvi#Core#Interfaces#Controllers#IMessageController#DestroyMessage(System.Int64)">
            <summary>Sets the stub of IMessageController.DestroyMessage(Int64 messageId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.tc::Tweetinvi#Core#Interfaces#Controllers#IMessageController#GetLatestMessagesReceived(System.Int32)">
            <summary>Sets the stub of IMessageController.GetLatestMessagesReceived(Int32 maximumMessages)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.tc::Tweetinvi#Core#Interfaces#Controllers#IMessageController#GetLatestMessagesSent(System.Int32)">
            <summary>Sets the stub of IMessageController.GetLatestMessagesSent(Int32 maximumMessages)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.tc::Tweetinvi#Core#Interfaces#Controllers#IMessageController#PublishMessage(Tweetinvi.Core.Interfaces.IMessage)">
            <summary>Sets the stub of IMessageController.PublishMessage(IMessage message)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.tc::Tweetinvi#Core#Interfaces#Controllers#IMessageController#PublishMessage(Tweetinvi.Core.Interfaces.DTO.IMessageDTO)">
            <summary>Sets the stub of IMessageController.PublishMessage(IMessageDTO messageDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.tc::Tweetinvi#Core#Interfaces#Controllers#IMessageController#PublishMessage(System.String,System.Int64)">
            <summary>Sets the stub of IMessageController.PublishMessage(String text, Int64 targetUserId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.tc::Tweetinvi#Core#Interfaces#Controllers#IMessageController#PublishMessage(System.String,Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IMessageController.PublishMessage(String text, IUser targetUser)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.tc::Tweetinvi#Core#Interfaces#Controllers#IMessageController#PublishMessage(System.String,Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of IMessageController.PublishMessage(String text, IUserIdentifier targetUserDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIMessageController.tc::Tweetinvi#Core#Interfaces#Controllers#IMessageController#PublishMessage(System.String,System.String)">
            <summary>Sets the stub of IMessageController.PublishMessage(String text, String targetUserScreenName)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubISavedSearchController">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Controllers.ISavedSearchController</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubISavedSearchController.#ctor">
            <summary>Initializes a new instance of type StubISavedSearchController</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubISavedSearchController.DestroySavedSearchISavedSearch">
            <summary>Sets the stub of ISavedSearchController.DestroySavedSearch(ISavedSearch savedSearch)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubISavedSearchController.DestroySavedSearchInt64">
            <summary>Sets the stub of ISavedSearchController.DestroySavedSearch(Int64 searchId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubISavedSearchController.GetSavedSearches">
            <summary>Sets the stub of ISavedSearchController.GetSavedSearches()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubISavedSearchController.tc::Tweetinvi#Core#Interfaces#Controllers#ISavedSearchController#DestroySavedSearch(Tweetinvi.Core.Interfaces.Models.ISavedSearch)">
            <summary>Sets the stub of ISavedSearchController.DestroySavedSearch(ISavedSearch savedSearch)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubISavedSearchController.tc::Tweetinvi#Core#Interfaces#Controllers#ISavedSearchController#DestroySavedSearch(System.Int64)">
            <summary>Sets the stub of ISavedSearchController.DestroySavedSearch(Int64 searchId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubISavedSearchController.tc::Tweetinvi#Core#Interfaces#Controllers#ISavedSearchController#GetSavedSearches">
            <summary>Sets the stub of ISavedSearchController.GetSavedSearches()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Controllers.ITimelineController</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.#ctor">
            <summary>Initializes a new instance of type StubITimelineController</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.GetHomeTimelineIHomeTimelineRequestParameters">
            <summary>Sets the stub of ITimelineController.GetHomeTimeline(IHomeTimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.GetHomeTimelineInt32">
            <summary>Sets the stub of ITimelineController.GetHomeTimeline(Int32 maximumNumberOfTweetsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.GetMentionsTimelineIMentionsTimelineRequestParameters">
            <summary>Sets the stub of ITimelineController.GetMentionsTimeline(IMentionsTimelineRequestParameters mentionsTimelineRequestParameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.GetMentionsTimelineInt32">
            <summary>Sets the stub of ITimelineController.GetMentionsTimeline(Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.GetRetweetsOfMeTimelineIRetweetsOfMeTimelineRequestParameters">
            <summary>Sets the stub of ITimelineController.GetRetweetsOfMeTimeline(IRetweetsOfMeTimelineRequestParameters parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.GetUserTimelineIUserIdentifierInt32">
            <summary>Sets the stub of ITimelineController.GetUserTimeline(IUserIdentifier userIdentifier, Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.GetUserTimelineIUserInt32">
            <summary>Sets the stub of ITimelineController.GetUserTimeline(IUser user, Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.GetUserTimelineIUserTimelineRequestParameters">
            <summary>Sets the stub of ITimelineController.GetUserTimeline(IUserTimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.GetUserTimelineInt64Int32">
            <summary>Sets the stub of ITimelineController.GetUserTimeline(Int64 userId, Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.GetUserTimelineStringInt32">
            <summary>Sets the stub of ITimelineController.GetUserTimeline(String userScreenName, Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.tc::Tweetinvi#Core#Interfaces#Controllers#ITimelineController#GetHomeTimeline(Tweetinvi.Core.Interfaces.Models.Parameters.IHomeTimelineRequestParameters)">
            <summary>Sets the stub of ITimelineController.GetHomeTimeline(IHomeTimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.tc::Tweetinvi#Core#Interfaces#Controllers#ITimelineController#GetHomeTimeline(System.Int32)">
            <summary>Sets the stub of ITimelineController.GetHomeTimeline(Int32 maximumNumberOfTweetsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.tc::Tweetinvi#Core#Interfaces#Controllers#ITimelineController#GetMentionsTimeline(System.Int32)">
            <summary>Sets the stub of ITimelineController.GetMentionsTimeline(Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.tc::Tweetinvi#Core#Interfaces#Controllers#ITimelineController#GetMentionsTimeline(Tweetinvi.Core.Interfaces.Models.Parameters.IMentionsTimelineRequestParameters)">
            <summary>Sets the stub of ITimelineController.GetMentionsTimeline(IMentionsTimelineRequestParameters mentionsTimelineRequestParameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.tc::Tweetinvi#Core#Interfaces#Controllers#ITimelineController#GetRetweetsOfMeTimeline(Tweetinvi.Core.Interfaces.Models.Parameters.IRetweetsOfMeTimelineRequestParameters)">
            <summary>Sets the stub of ITimelineController.GetRetweetsOfMeTimeline(IRetweetsOfMeTimelineRequestParameters parameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.tc::Tweetinvi#Core#Interfaces#Controllers#ITimelineController#GetUserTimeline(Tweetinvi.Core.Interfaces.Models.Parameters.IUserTimelineRequestParameters)">
            <summary>Sets the stub of ITimelineController.GetUserTimeline(IUserTimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.tc::Tweetinvi#Core#Interfaces#Controllers#ITimelineController#GetUserTimeline(Tweetinvi.Core.Interfaces.IUser,System.Int32)">
            <summary>Sets the stub of ITimelineController.GetUserTimeline(IUser user, Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.tc::Tweetinvi#Core#Interfaces#Controllers#ITimelineController#GetUserTimeline(Tweetinvi.Core.Interfaces.Models.IUserIdentifier,System.Int32)">
            <summary>Sets the stub of ITimelineController.GetUserTimeline(IUserIdentifier userIdentifier, Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.tc::Tweetinvi#Core#Interfaces#Controllers#ITimelineController#GetUserTimeline(System.Int64,System.Int32)">
            <summary>Sets the stub of ITimelineController.GetUserTimeline(Int64 userId, Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITimelineController.tc::Tweetinvi#Core#Interfaces#Controllers#ITimelineController#GetUserTimeline(System.String,System.Int32)">
            <summary>Sets the stub of ITimelineController.GetUserTimeline(String userScreenName, Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITrendsController">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Controllers.ITrendsController</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITrendsController.#ctor">
            <summary>Initializes a new instance of type StubITrendsController</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITrendsController.GetPlaceTrendsAtIWoeIdLocation">
            <summary>Sets the stub of ITrendsController.GetPlaceTrendsAt(IWoeIdLocation woeIdLocation)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITrendsController.GetPlaceTrendsAtInt64">
            <summary>Sets the stub of ITrendsController.GetPlaceTrendsAt(Int64 woeid)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITrendsController.tc::Tweetinvi#Core#Interfaces#Controllers#ITrendsController#GetPlaceTrendsAt(System.Int64)">
            <summary>Sets the stub of ITrendsController.GetPlaceTrendsAt(Int64 woeid)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITrendsController.tc::Tweetinvi#Core#Interfaces#Controllers#ITrendsController#GetPlaceTrendsAt(Tweetinvi.Core.Interfaces.Models.IWoeIdLocation)">
            <summary>Sets the stub of ITrendsController.GetPlaceTrendsAt(IWoeIdLocation woeIdLocation)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Controllers.ITweetController</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.#ctor">
            <summary>Initializes a new instance of type StubITweetController</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.DestroyTweetITweet">
            <summary>Sets the stub of ITweetController.DestroyTweet(ITweet tweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.DestroyTweetITweetDTO">
            <summary>Sets the stub of ITweetController.DestroyTweet(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.DestroyTweetInt64">
            <summary>Sets the stub of ITweetController.DestroyTweet(Int64 tweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.FavoriteTweetITweet">
            <summary>Sets the stub of ITweetController.FavoriteTweet(ITweet tweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.FavoriteTweetITweetDTO">
            <summary>Sets the stub of ITweetController.FavoriteTweet(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.FavoriteTweetInt64">
            <summary>Sets the stub of ITweetController.FavoriteTweet(Int64 tweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.GenerateOEmbedTweetITweet">
            <summary>Sets the stub of ITweetController.GenerateOEmbedTweet(ITweet tweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.GenerateOEmbedTweetITweetDTO">
            <summary>Sets the stub of ITweetController.GenerateOEmbedTweet(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.GenerateOEmbedTweetInt64">
            <summary>Sets the stub of ITweetController.GenerateOEmbedTweet(Int64 tweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.GetRetweetsITweet">
            <summary>Sets the stub of ITweetController.GetRetweets(ITweet tweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.GetRetweetsITweetDTO">
            <summary>Sets the stub of ITweetController.GetRetweets(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.GetRetweetsInt64">
            <summary>Sets the stub of ITweetController.GetRetweets(Int64 tweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishRetweetITweet">
            <summary>Sets the stub of ITweetController.PublishRetweet(ITweet tweetToPublish)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishRetweetITweetDTO">
            <summary>Sets the stub of ITweetController.PublishRetweet(ITweetDTO tweetToPublish)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishRetweetInt64">
            <summary>Sets the stub of ITweetController.PublishRetweet(Int64 tweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishTweetITweet">
            <summary>Sets the stub of ITweetController.PublishTweet(ITweet tweetToPublish)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishTweetITweetDTO">
            <summary>Sets the stub of ITweetController.PublishTweet(ITweetDTO tweetToPublish)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishTweetInReplyToITweetDTOITweetDTO">
            <summary>Sets the stub of ITweetController.PublishTweetInReplyTo(ITweetDTO tweetToPublish, ITweetDTO tweetToReplyTo)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishTweetInReplyToITweetDTOInt64">
            <summary>Sets the stub of ITweetController.PublishTweetInReplyTo(ITweetDTO tweetToPublish, Int64 tweetIdToReplyTo)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishTweetInReplyToITweetITweet">
            <summary>Sets the stub of ITweetController.PublishTweetInReplyTo(ITweet tweetToPublish, ITweet tweetToReplyTo)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishTweetInReplyToITweetInt64">
            <summary>Sets the stub of ITweetController.PublishTweetInReplyTo(ITweet tweetToPublish, Int64 tweetIdToReplyTo)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishTweetWithGeoITweetDTODoubleDouble">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeo(ITweetDTO tweetToPublish, Double longitude, Double latitude)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishTweetWithGeoITweetDTOICoordinates">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeo(ITweetDTO tweetToPublish, ICoordinates coordinates)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishTweetWithGeoITweetDoubleDouble">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeo(ITweet tweetToPublish, Double longitude, Double latitude)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishTweetWithGeoITweetICoordinates">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeo(ITweet tweetToPublish, ICoordinates coordinates)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishTweetWithGeoInReplyToITweetDTODoubleDoubleInt64">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeoInReplyTo(ITweetDTO tweetToPublish, Double longitude, Double latitude, Int64 tweetIdToReplyTo)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishTweetWithGeoInReplyToITweetDTOICoordinatesInt64">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeoInReplyTo(ITweetDTO tweetToPublish, ICoordinates coordinates, Int64 tweetIdToReplyTo)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishTweetWithGeoInReplyToITweetDoubleDoubleInt64">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeoInReplyTo(ITweet tweetToPublish, Double longitude, Double latitude, Int64 tweetIdToReplyTo)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.PublishTweetWithGeoInReplyToITweetICoordinatesInt64">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeoInReplyTo(ITweet tweetToPublish, ICoordinates coordinates, Int64 tweetIdToReplyTo)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#DestroyTweet(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetController.DestroyTweet(ITweet tweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#DestroyTweet(System.Int64)">
            <summary>Sets the stub of ITweetController.DestroyTweet(Int64 tweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#DestroyTweet(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetController.DestroyTweet(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#FavoriteTweet(System.Int64)">
            <summary>Sets the stub of ITweetController.FavoriteTweet(Int64 tweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#FavoriteTweet(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetController.FavoriteTweet(ITweet tweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#FavoriteTweet(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetController.FavoriteTweet(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#GenerateOEmbedTweet(System.Int64)">
            <summary>Sets the stub of ITweetController.GenerateOEmbedTweet(Int64 tweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#GenerateOEmbedTweet(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetController.GenerateOEmbedTweet(ITweet tweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#GenerateOEmbedTweet(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetController.GenerateOEmbedTweet(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#GetRetweets(System.Int64)">
            <summary>Sets the stub of ITweetController.GetRetweets(Int64 tweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#GetRetweets(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetController.GetRetweets(ITweet tweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#GetRetweets(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetController.GetRetweets(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishRetweet(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetController.PublishRetweet(ITweet tweetToPublish)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishRetweet(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetController.PublishRetweet(ITweetDTO tweetToPublish)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishRetweet(System.Int64)">
            <summary>Sets the stub of ITweetController.PublishRetweet(Int64 tweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishTweet(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetController.PublishTweet(ITweetDTO tweetToPublish)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishTweet(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetController.PublishTweet(ITweet tweetToPublish)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishTweetInReplyTo(Tweetinvi.Core.Interfaces.ITweet,Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetController.PublishTweetInReplyTo(ITweet tweetToPublish, ITweet tweetToReplyTo)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishTweetInReplyTo(Tweetinvi.Core.Interfaces.ITweet,System.Int64)">
            <summary>Sets the stub of ITweetController.PublishTweetInReplyTo(ITweet tweetToPublish, Int64 tweetIdToReplyTo)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishTweetInReplyTo(Tweetinvi.Core.Interfaces.DTO.ITweetDTO,Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetController.PublishTweetInReplyTo(ITweetDTO tweetToPublish, ITweetDTO tweetToReplyTo)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishTweetInReplyTo(Tweetinvi.Core.Interfaces.DTO.ITweetDTO,System.Int64)">
            <summary>Sets the stub of ITweetController.PublishTweetInReplyTo(ITweetDTO tweetToPublish, Int64 tweetIdToReplyTo)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishTweetWithGeo(Tweetinvi.Core.Interfaces.DTO.ITweetDTO,Tweetinvi.Core.Interfaces.Models.ICoordinates)">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeo(ITweetDTO tweetToPublish, ICoordinates coordinates)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishTweetWithGeo(Tweetinvi.Core.Interfaces.ITweet,Tweetinvi.Core.Interfaces.Models.ICoordinates)">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeo(ITweet tweetToPublish, ICoordinates coordinates)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishTweetWithGeo(Tweetinvi.Core.Interfaces.DTO.ITweetDTO,System.Double,System.Double)">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeo(ITweetDTO tweetToPublish, Double longitude, Double latitude)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishTweetWithGeo(Tweetinvi.Core.Interfaces.ITweet,System.Double,System.Double)">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeo(ITweet tweetToPublish, Double longitude, Double latitude)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishTweetWithGeoInReplyTo(Tweetinvi.Core.Interfaces.ITweet,Tweetinvi.Core.Interfaces.Models.ICoordinates,System.Int64)">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeoInReplyTo(ITweet tweetToPublish, ICoordinates coordinates, Int64 tweetIdToReplyTo)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishTweetWithGeoInReplyTo(Tweetinvi.Core.Interfaces.DTO.ITweetDTO,System.Double,System.Double,System.Int64)">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeoInReplyTo(ITweetDTO tweetToPublish, Double longitude, Double latitude, Int64 tweetIdToReplyTo)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishTweetWithGeoInReplyTo(Tweetinvi.Core.Interfaces.DTO.ITweetDTO,Tweetinvi.Core.Interfaces.Models.ICoordinates,System.Int64)">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeoInReplyTo(ITweetDTO tweetToPublish, ICoordinates coordinates, Int64 tweetIdToReplyTo)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#PublishTweetWithGeoInReplyTo(Tweetinvi.Core.Interfaces.ITweet,System.Double,System.Double,System.Int64)">
            <summary>Sets the stub of ITweetController.PublishTweetWithGeoInReplyTo(ITweet tweetToPublish, Double longitude, Double latitude, Int64 tweetIdToReplyTo)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#UnFavoriteTweet(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetController.UnFavoriteTweet(ITweet tweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#UnFavoriteTweet(System.Int64)">
            <summary>Sets the stub of ITweetController.UnFavoriteTweet(Int64 tweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#UnFavoriteTweet(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetController.UnFavoriteTweet(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetController#UpdateTweetIfTweetSuccessfullyBeenPublished(Tweetinvi.Core.Interfaces.ITweet,Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetController.UpdateTweetIfTweetSuccessfullyBeenPublished(ITweet sourceTweet, ITweetDTO publishedTweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.UnFavoriteTweetITweet">
            <summary>Sets the stub of ITweetController.UnFavoriteTweet(ITweet tweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.UnFavoriteTweetITweetDTO">
            <summary>Sets the stub of ITweetController.UnFavoriteTweet(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.UnFavoriteTweetInt64">
            <summary>Sets the stub of ITweetController.UnFavoriteTweet(Int64 tweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetController.UpdateTweetIfTweetSuccessfullyBeenPublishedITweetITweetDTO">
            <summary>Sets the stub of ITweetController.UpdateTweetIfTweetSuccessfullyBeenPublished(ITweet sourceTweet, ITweetDTO publishedTweetDTO)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Controllers.ITweetListController</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.#ctor">
            <summary>Initializes a new instance of type StubITweetListController</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.DestroyListIListIdentifier">
            <summary>Sets the stub of ITweetListController.DestroyList(IListIdentifier identifier)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.DestroyListITweetList">
            <summary>Sets the stub of ITweetListController.DestroyList(ITweetList tweetList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.DestroyListITweetListDTO">
            <summary>Sets the stub of ITweetListController.DestroyList(ITweetListDTO tweetListDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.DestroyListInt64">
            <summary>Sets the stub of ITweetListController.DestroyList(Int64 listId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.DestroyListStringIUser">
            <summary>Sets the stub of ITweetListController.DestroyList(String slug, IUser owner)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.DestroyListStringIUserIdentifier">
            <summary>Sets the stub of ITweetListController.DestroyList(String slug, IUserIdentifier ownerDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.DestroyListStringInt64">
            <summary>Sets the stub of ITweetListController.DestroyList(String slug, Int64 ownerId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.DestroyListStringString">
            <summary>Sets the stub of ITweetListController.DestroyList(String slug, String ownerScreenName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetMembersOfListIListIdentifierInt32">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(IListIdentifier identifier, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetMembersOfListITweetListDTOInt32">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(ITweetListDTO tweetListDTO, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetMembersOfListITweetListInt32">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(ITweetList tweetList, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetMembersOfListInt64Int32">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(Int64 listId, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetMembersOfListStringIUserIdentifierInt32">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(String slug, IUserIdentifier ownerDTO, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetMembersOfListStringIUserInt32">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(String slug, IUser owner, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetMembersOfListStringInt64Int32">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(String slug, Int64 ownerId, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetMembersOfListStringStringInt32">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(String slug, String ownerScreenName, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetTweetsFromListIListIdentifier">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(IListIdentifier identifier)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetTweetsFromListITweetList">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(ITweetList tweetList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetTweetsFromListITweetListDTO">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(ITweetListDTO tweetListDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetTweetsFromListInt64">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(Int64 listId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetTweetsFromListStringIUser">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(String slug, IUser owner)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetTweetsFromListStringIUserIdentifier">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(String slug, IUserIdentifier ownerDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetTweetsFromListStringInt64">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(String slug, Int64 ownerId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetTweetsFromListStringString">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(String slug, String ownerScreenName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetUserListsIUserBoolean">
            <summary>Sets the stub of ITweetListController.GetUserLists(IUser user, Boolean getOwnedListsFirst)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetUserListsIUserIdentifierBoolean">
            <summary>Sets the stub of ITweetListController.GetUserLists(IUserIdentifier userDTO, Boolean getOwnedListsFirst)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetUserListsInt64Boolean">
            <summary>Sets the stub of ITweetListController.GetUserLists(Int64 userId, Boolean getOwnedListsFirst)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.GetUserListsStringBoolean">
            <summary>Sets the stub of ITweetListController.GetUserLists(String userScreenName, Boolean getOwnedListsFirst)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#DestroyList(Tweetinvi.Core.Interfaces.ITweetList)">
            <summary>Sets the stub of ITweetListController.DestroyList(ITweetList tweetList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#DestroyList(System.Int64)">
            <summary>Sets the stub of ITweetListController.DestroyList(Int64 listId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#DestroyList(Tweetinvi.Core.Interfaces.DTO.ITweetListDTO)">
            <summary>Sets the stub of ITweetListController.DestroyList(ITweetListDTO tweetListDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#DestroyList(Tweetinvi.Core.Interfaces.Parameters.IListIdentifier)">
            <summary>Sets the stub of ITweetListController.DestroyList(IListIdentifier identifier)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#DestroyList(System.String,Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of ITweetListController.DestroyList(String slug, IUser owner)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#DestroyList(System.String,Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of ITweetListController.DestroyList(String slug, IUserIdentifier ownerDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#DestroyList(System.String,System.String)">
            <summary>Sets the stub of ITweetListController.DestroyList(String slug, String ownerScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#DestroyList(System.String,System.Int64)">
            <summary>Sets the stub of ITweetListController.DestroyList(String slug, Int64 ownerId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetMembersOfList(Tweetinvi.Core.Interfaces.ITweetList,System.Int32)">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(ITweetList tweetList, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetMembersOfList(Tweetinvi.Core.Interfaces.DTO.ITweetListDTO,System.Int32)">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(ITweetListDTO tweetListDTO, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetMembersOfList(System.Int64,System.Int32)">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(Int64 listId, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetMembersOfList(Tweetinvi.Core.Interfaces.Parameters.IListIdentifier,System.Int32)">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(IListIdentifier identifier, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetMembersOfList(System.String,Tweetinvi.Core.Interfaces.IUser,System.Int32)">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(String slug, IUser owner, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetMembersOfList(System.String,Tweetinvi.Core.Interfaces.Models.IUserIdentifier,System.Int32)">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(String slug, IUserIdentifier ownerDTO, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetMembersOfList(System.String,System.Int64,System.Int32)">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(String slug, Int64 ownerId, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetMembersOfList(System.String,System.String,System.Int32)">
            <summary>Sets the stub of ITweetListController.GetMembersOfList(String slug, String ownerScreenName, Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetTweetsFromList(Tweetinvi.Core.Interfaces.ITweetList)">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(ITweetList tweetList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetTweetsFromList(Tweetinvi.Core.Interfaces.DTO.ITweetListDTO)">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(ITweetListDTO tweetListDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetTweetsFromList(Tweetinvi.Core.Interfaces.Parameters.IListIdentifier)">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(IListIdentifier identifier)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetTweetsFromList(System.Int64)">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(Int64 listId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetTweetsFromList(System.String,System.Int64)">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(String slug, Int64 ownerId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetTweetsFromList(System.String,Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(String slug, IUser owner)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetTweetsFromList(System.String,Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(String slug, IUserIdentifier ownerDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetTweetsFromList(System.String,System.String)">
            <summary>Sets the stub of ITweetListController.GetTweetsFromList(String slug, String ownerScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetUserLists(System.Int64,System.Boolean)">
            <summary>Sets the stub of ITweetListController.GetUserLists(Int64 userId, Boolean getOwnedListsFirst)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetUserLists(Tweetinvi.Core.Interfaces.IUser,System.Boolean)">
            <summary>Sets the stub of ITweetListController.GetUserLists(IUser user, Boolean getOwnedListsFirst)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetUserLists(Tweetinvi.Core.Interfaces.Models.IUserIdentifier,System.Boolean)">
            <summary>Sets the stub of ITweetListController.GetUserLists(IUserIdentifier userDTO, Boolean getOwnedListsFirst)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#GetUserLists(System.String,System.Boolean)">
            <summary>Sets the stub of ITweetListController.GetUserLists(String userScreenName, Boolean getOwnedListsFirst)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#UpdateList(Tweetinvi.Core.Interfaces.ITweetList,Tweetinvi.Core.Interfaces.Parameters.IListUpdateParameters)">
            <summary>Sets the stub of ITweetListController.UpdateList(ITweetList tweetList, IListUpdateParameters parameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#UpdateList(Tweetinvi.Core.Interfaces.DTO.ITweetListDTO,Tweetinvi.Core.Interfaces.Parameters.IListUpdateParameters)">
            <summary>Sets the stub of ITweetListController.UpdateList(ITweetListDTO tweetListDTO, IListUpdateParameters parameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#UpdateList(Tweetinvi.Core.Interfaces.Parameters.IListIdentifier,Tweetinvi.Core.Interfaces.Parameters.IListUpdateParameters)">
            <summary>Sets the stub of ITweetListController.UpdateList(IListIdentifier identifier, IListUpdateParameters parameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#UpdateList(System.Int64,Tweetinvi.Core.Interfaces.Parameters.IListUpdateParameters)">
            <summary>Sets the stub of ITweetListController.UpdateList(Int64 listId, IListUpdateParameters parameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#UpdateList(System.String,Tweetinvi.Core.Interfaces.IUser,Tweetinvi.Core.Interfaces.Parameters.IListUpdateParameters)">
            <summary>Sets the stub of ITweetListController.UpdateList(String slug, IUser owner, IListUpdateParameters parameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#UpdateList(System.String,Tweetinvi.Core.Interfaces.Models.IUserIdentifier,Tweetinvi.Core.Interfaces.Parameters.IListUpdateParameters)">
            <summary>Sets the stub of ITweetListController.UpdateList(String slug, IUserIdentifier ownerDTO, IListUpdateParameters parameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#UpdateList(System.String,System.String,Tweetinvi.Core.Interfaces.Parameters.IListUpdateParameters)">
            <summary>Sets the stub of ITweetListController.UpdateList(String slug, String ownerScreenName, IListUpdateParameters parameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.tc::Tweetinvi#Core#Interfaces#Controllers#ITweetListController#UpdateList(System.String,System.Int64,Tweetinvi.Core.Interfaces.Parameters.IListUpdateParameters)">
            <summary>Sets the stub of ITweetListController.UpdateList(String slug, Int64 ownerId, IListUpdateParameters parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.UpdateListIListIdentifierIListUpdateParameters">
            <summary>Sets the stub of ITweetListController.UpdateList(IListIdentifier identifier, IListUpdateParameters parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.UpdateListITweetListDTOIListUpdateParameters">
            <summary>Sets the stub of ITweetListController.UpdateList(ITweetListDTO tweetListDTO, IListUpdateParameters parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.UpdateListITweetListIListUpdateParameters">
            <summary>Sets the stub of ITweetListController.UpdateList(ITweetList tweetList, IListUpdateParameters parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.UpdateListInt64IListUpdateParameters">
            <summary>Sets the stub of ITweetListController.UpdateList(Int64 listId, IListUpdateParameters parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.UpdateListStringIUserIListUpdateParameters">
            <summary>Sets the stub of ITweetListController.UpdateList(String slug, IUser owner, IListUpdateParameters parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.UpdateListStringIUserIdentifierIListUpdateParameters">
            <summary>Sets the stub of ITweetListController.UpdateList(String slug, IUserIdentifier ownerDTO, IListUpdateParameters parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.UpdateListStringInt64IListUpdateParameters">
            <summary>Sets the stub of ITweetListController.UpdateList(String slug, Int64 ownerId, IListUpdateParameters parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubITweetListController.UpdateListStringStringIListUpdateParameters">
            <summary>Sets the stub of ITweetListController.UpdateList(String slug, String ownerScreenName, IListUpdateParameters parameters)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Controllers.IUserController</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.#ctor">
            <summary>Initializes a new instance of type StubIUserController</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.BlockUserIUser">
            <summary>Sets the stub of IUserController.BlockUser(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.BlockUserIUserIdentifier">
            <summary>Sets the stub of IUserController.BlockUser(IUserIdentifier userIdentifier)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.BlockUserInt64">
            <summary>Sets the stub of IUserController.BlockUser(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.BlockUserString">
            <summary>Sets the stub of IUserController.BlockUser(String userScreenName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetBlockedUserIdsInt32">
            <summary>Sets the stub of IUserController.GetBlockedUserIds(Int32 maxUserIds)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetBlockedUsersInt32">
            <summary>Sets the stub of IUserController.GetBlockedUsers(Int32 maxUsers)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFavouriteTweetsIUserIdentifierInt32">
            <summary>Sets the stub of IUserController.GetFavouriteTweets(IUserIdentifier userDTO, Int32 maxFavouritesToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFavouriteTweetsIUserInt32">
            <summary>Sets the stub of IUserController.GetFavouriteTweets(IUser user, Int32 maxFavouritesToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFavouriteTweetsInt64Int32">
            <summary>Sets the stub of IUserController.GetFavouriteTweets(Int64 userId, Int32 maxFavouritesToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFavouriteTweetsStringInt32">
            <summary>Sets the stub of IUserController.GetFavouriteTweets(String userScreenName, Int32 maxFavouritesToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFollowerIdsIUserIdentifierInt32">
            <summary>Sets the stub of IUserController.GetFollowerIds(IUserIdentifier userDTO, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFollowerIdsIUserInt32">
            <summary>Sets the stub of IUserController.GetFollowerIds(IUser user, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFollowerIdsInt64Int32">
            <summary>Sets the stub of IUserController.GetFollowerIds(Int64 userId, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFollowerIdsStringInt32">
            <summary>Sets the stub of IUserController.GetFollowerIds(String userScreenName, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFollowersIUserIdentifierInt32">
            <summary>Sets the stub of IUserController.GetFollowers(IUserIdentifier userDTO, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFollowersIUserInt32">
            <summary>Sets the stub of IUserController.GetFollowers(IUser user, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFollowersInt64Int32">
            <summary>Sets the stub of IUserController.GetFollowers(Int64 userId, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFollowersStringInt32">
            <summary>Sets the stub of IUserController.GetFollowers(String userScreenName, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFriendIdsIUserIdentifierInt32">
            <summary>Sets the stub of IUserController.GetFriendIds(IUserIdentifier userDTO, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFriendIdsIUserInt32">
            <summary>Sets the stub of IUserController.GetFriendIds(IUser user, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFriendIdsInt64Int32">
            <summary>Sets the stub of IUserController.GetFriendIds(Int64 userId, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFriendIdsStringInt32">
            <summary>Sets the stub of IUserController.GetFriendIds(String userScreenName, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFriendsIUserIdentifierInt32">
            <summary>Sets the stub of IUserController.GetFriends(IUserIdentifier userDTO, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFriendsIUserInt32">
            <summary>Sets the stub of IUserController.GetFriends(IUser user, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFriendsInt64Int32">
            <summary>Sets the stub of IUserController.GetFriends(Int64 userId, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetFriendsStringInt32">
            <summary>Sets the stub of IUserController.GetFriends(String userScreenName, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetProfileImageStreamIUserDTOImageSize">
            <summary>Sets the stub of IUserController.GetProfileImageStream(IUserDTO userDTO, ImageSize imageSize)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.GetProfileImageStreamIUserImageSize">
            <summary>Sets the stub of IUserController.GetProfileImageStream(IUser user, ImageSize imageSize)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#BlockUser(System.Int64)">
            <summary>Sets the stub of IUserController.BlockUser(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#BlockUser(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IUserController.BlockUser(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#BlockUser(Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of IUserController.BlockUser(IUserIdentifier userIdentifier)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#BlockUser(System.String)">
            <summary>Sets the stub of IUserController.BlockUser(String userScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetBlockedUserIds(System.Int32)">
            <summary>Sets the stub of IUserController.GetBlockedUserIds(Int32 maxUserIds)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetBlockedUsers(System.Int32)">
            <summary>Sets the stub of IUserController.GetBlockedUsers(Int32 maxUsers)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFavouriteTweets(Tweetinvi.Core.Interfaces.IUser,System.Int32)">
            <summary>Sets the stub of IUserController.GetFavouriteTweets(IUser user, Int32 maxFavouritesToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFavouriteTweets(Tweetinvi.Core.Interfaces.Models.IUserIdentifier,System.Int32)">
            <summary>Sets the stub of IUserController.GetFavouriteTweets(IUserIdentifier userDTO, Int32 maxFavouritesToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFavouriteTweets(System.String,System.Int32)">
            <summary>Sets the stub of IUserController.GetFavouriteTweets(String userScreenName, Int32 maxFavouritesToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFavouriteTweets(System.Int64,System.Int32)">
            <summary>Sets the stub of IUserController.GetFavouriteTweets(Int64 userId, Int32 maxFavouritesToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFollowerIds(Tweetinvi.Core.Interfaces.IUser,System.Int32)">
            <summary>Sets the stub of IUserController.GetFollowerIds(IUser user, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFollowerIds(Tweetinvi.Core.Interfaces.Models.IUserIdentifier,System.Int32)">
            <summary>Sets the stub of IUserController.GetFollowerIds(IUserIdentifier userDTO, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFollowerIds(System.String,System.Int32)">
            <summary>Sets the stub of IUserController.GetFollowerIds(String userScreenName, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFollowerIds(System.Int64,System.Int32)">
            <summary>Sets the stub of IUserController.GetFollowerIds(Int64 userId, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFollowers(Tweetinvi.Core.Interfaces.IUser,System.Int32)">
            <summary>Sets the stub of IUserController.GetFollowers(IUser user, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFollowers(Tweetinvi.Core.Interfaces.Models.IUserIdentifier,System.Int32)">
            <summary>Sets the stub of IUserController.GetFollowers(IUserIdentifier userDTO, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFollowers(System.Int64,System.Int32)">
            <summary>Sets the stub of IUserController.GetFollowers(Int64 userId, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFollowers(System.String,System.Int32)">
            <summary>Sets the stub of IUserController.GetFollowers(String userScreenName, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFriendIds(Tweetinvi.Core.Interfaces.IUser,System.Int32)">
            <summary>Sets the stub of IUserController.GetFriendIds(IUser user, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFriendIds(Tweetinvi.Core.Interfaces.Models.IUserIdentifier,System.Int32)">
            <summary>Sets the stub of IUserController.GetFriendIds(IUserIdentifier userDTO, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFriendIds(System.String,System.Int32)">
            <summary>Sets the stub of IUserController.GetFriendIds(String userScreenName, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFriendIds(System.Int64,System.Int32)">
            <summary>Sets the stub of IUserController.GetFriendIds(Int64 userId, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFriends(System.Int64,System.Int32)">
            <summary>Sets the stub of IUserController.GetFriends(Int64 userId, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFriends(Tweetinvi.Core.Interfaces.IUser,System.Int32)">
            <summary>Sets the stub of IUserController.GetFriends(IUser user, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFriends(Tweetinvi.Core.Interfaces.Models.IUserIdentifier,System.Int32)">
            <summary>Sets the stub of IUserController.GetFriends(IUserIdentifier userDTO, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetFriends(System.String,System.Int32)">
            <summary>Sets the stub of IUserController.GetFriends(String userScreenName, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetProfileImageStream(Tweetinvi.Core.Interfaces.IUser,Tweetinvi.Core.Enum.ImageSize)">
            <summary>Sets the stub of IUserController.GetProfileImageStream(IUser user, ImageSize imageSize)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#GetProfileImageStream(Tweetinvi.Core.Interfaces.DTO.IUserDTO,Tweetinvi.Core.Enum.ImageSize)">
            <summary>Sets the stub of IUserController.GetProfileImageStream(IUserDTO userDTO, ImageSize imageSize)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#UnBlockUser(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IUserController.UnBlockUser(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#UnBlockUser(Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of IUserController.UnBlockUser(IUserIdentifier userDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#UnBlockUser(System.Int64)">
            <summary>Sets the stub of IUserController.UnBlockUser(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.tc::Tweetinvi#Core#Interfaces#Controllers#IUserController#UnBlockUser(System.String)">
            <summary>Sets the stub of IUserController.UnBlockUser(String userScreenName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.UnBlockUserIUser">
            <summary>Sets the stub of IUserController.UnBlockUser(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.UnBlockUserIUserIdentifier">
            <summary>Sets the stub of IUserController.UnBlockUser(IUserIdentifier userDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.UnBlockUserInt64">
            <summary>Sets the stub of IUserController.UnBlockUser(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Controllers.Fakes.StubIUserController.UnBlockUserString">
            <summary>Sets the stub of IUserController.UnBlockUser(String userScreenName)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubICredentialsAccessor">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Credentials.ICredentialsAccessor</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubICredentialsAccessor.#ctor">
            <summary>Initializes a new instance of type StubICredentialsAccessor</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubICredentialsAccessor.ApplicationCredentialsGet">
            <summary>Sets the stub of ICredentialsAccessor.get_ApplicationCredentials()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubICredentialsAccessor.ApplicationCredentialsSetIOAuthCredentials">
            <summary>Sets the stub of ICredentialsAccessor.set_ApplicationCredentials(IOAuthCredentials value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubICredentialsAccessor.AttachBackingFieldToApplicationCredentials">
            <summary>Attaches delegates to emulate StubICredentialsAccessor.ApplicationCredentials as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubICredentialsAccessor.AttachBackingFieldToCurrentThreadCredentials">
            <summary>Attaches delegates to emulate StubICredentialsAccessor.CurrentThreadCredentials as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubICredentialsAccessor.CurrentThreadCredentialsGet">
            <summary>Sets the stub of ICredentialsAccessor.get_CurrentThreadCredentials()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubICredentialsAccessor.CurrentThreadCredentialsSetIOAuthCredentials">
            <summary>Sets the stub of ICredentialsAccessor.set_CurrentThreadCredentials(IOAuthCredentials value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubICredentialsAccessor.ExecuteOperationWithCredentialsIOAuthCredentialsAction">
            <summary>Sets the stub of ICredentialsAccessor.ExecuteOperationWithCredentials(IOAuthCredentials credentials, Action operation)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubICredentialsAccessor.ExecuteOperationWithCredentialsOf1IOAuthCredentialsFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Tweetinvi.Core.Interfaces.oAuth.IOAuthCredentials,System.Func{``0},``0})">
            <summary>Sets stubs of ExecuteOperationWithCredentials(IOAuthCredentials credentials, Func`1&lt;!!0&gt; operation)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubICredentialsAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ICredentialsAccessor#ExecuteOperationWithCredentials(Tweetinvi.Core.Interfaces.oAuth.IOAuthCredentials,System.Action)">
            <summary>Sets the stub of ICredentialsAccessor.ExecuteOperationWithCredentials(IOAuthCredentials credentials, Action operation)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubICredentialsAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ICredentialsAccessor#ExecuteOperationWithCredentials``1(Tweetinvi.Core.Interfaces.oAuth.IOAuthCredentials,System.Func{``0})">
            <summary>Sets the stub of ICredentialsAccessor.ExecuteOperationWithCredentials(IOAuthCredentials credentials, Func`1&lt;!!0&gt; operation)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubICredentialsAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ICredentialsAccessor#ApplicationCredentials">
            <summary>Sets the stub of ICredentialsAccessor.get_ApplicationCredentials()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubICredentialsAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ICredentialsAccessor#CurrentThreadCredentials">
            <summary>Sets the stub of ICredentialsAccessor.get_CurrentThreadCredentials()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIRateLimit">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Credentials.IRateLimit</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIRateLimit.#ctor">
            <summary>Initializes a new instance of type StubIRateLimit</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIRateLimit.LimitGet">
            <summary>Sets the stub of IRateLimit.get_Limit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIRateLimit.RemainingGet">
            <summary>Sets the stub of IRateLimit.get_Remaining()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIRateLimit.ResetDateTimeGet">
            <summary>Sets the stub of IRateLimit.get_ResetDateTime()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIRateLimit.ResetTimeInSecondGet">
            <summary>Sets the stub of IRateLimit.get_ResetTimeInSecond()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIRateLimit.ResourceNameGet">
            <summary>Sets the stub of IRateLimit.get_ResourceName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIRateLimit.tc::Tweetinvi#Core#Interfaces#Credentials#IRateLimit#Limit">
            <summary>Sets the stub of IRateLimit.get_Limit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIRateLimit.tc::Tweetinvi#Core#Interfaces#Credentials#IRateLimit#Remaining">
            <summary>Sets the stub of IRateLimit.get_Remaining()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIRateLimit.tc::Tweetinvi#Core#Interfaces#Credentials#IRateLimit#ResetDateTime">
            <summary>Sets the stub of IRateLimit.get_ResetDateTime()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIRateLimit.tc::Tweetinvi#Core#Interfaces#Credentials#IRateLimit#ResetTimeInSecond">
            <summary>Sets the stub of IRateLimit.get_ResetTimeInSecond()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIRateLimit.tc::Tweetinvi#Core#Interfaces#Credentials#IRateLimit#ResourceName">
            <summary>Sets the stub of IRateLimit.get_ResourceName()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Credentials.ITemporaryCredentials</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.#ctor">
            <summary>Initializes a new instance of type StubITemporaryCredentials</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.AttachBackingFieldToAuthorizationKey">
            <summary>Attaches delegates to emulate StubITemporaryCredentials.AuthorizationKey as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.AttachBackingFieldToAuthorizationSecret">
            <summary>Attaches delegates to emulate StubITemporaryCredentials.AuthorizationSecret as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.AttachBackingFieldToConsumerKey">
            <summary>Attaches delegates to emulate StubITemporaryCredentials.ConsumerKey as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.AttachBackingFieldToConsumerSecret">
            <summary>Attaches delegates to emulate StubITemporaryCredentials.ConsumerSecret as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.AttachBackingFieldToVerifierCode">
            <summary>Attaches delegates to emulate StubITemporaryCredentials.VerifierCode as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.AuthorizationKeyGet">
            <summary>Sets the stub of ITemporaryCredentials.get_AuthorizationKey()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.AuthorizationKeySetString">
            <summary>Sets the stub of ITemporaryCredentials.set_AuthorizationKey(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.AuthorizationSecretGet">
            <summary>Sets the stub of ITemporaryCredentials.get_AuthorizationSecret()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.AuthorizationSecretSetString">
            <summary>Sets the stub of ITemporaryCredentials.set_AuthorizationSecret(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.ConsumerKeyGet">
            <summary>Sets the stub of IConsumerCredentials.get_ConsumerKey()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.ConsumerKeySetString">
            <summary>Sets the stub of IConsumerCredentials.set_ConsumerKey(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.ConsumerSecretGet">
            <summary>Sets the stub of IConsumerCredentials.get_ConsumerSecret()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.ConsumerSecretSetString">
            <summary>Sets the stub of IConsumerCredentials.set_ConsumerSecret(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.VerifierCodeGet">
            <summary>Sets the stub of ITemporaryCredentials.get_VerifierCode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.VerifierCodeSetString">
            <summary>Sets the stub of ITemporaryCredentials.set_VerifierCode(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.tc::Tweetinvi#Core#Interfaces#Credentials#ITemporaryCredentials#AuthorizationKey">
            <summary>Sets the stub of ITemporaryCredentials.get_AuthorizationKey()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.tc::Tweetinvi#Core#Interfaces#Credentials#ITemporaryCredentials#AuthorizationSecret">
            <summary>Sets the stub of ITemporaryCredentials.get_AuthorizationSecret()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.tc::Tweetinvi#Core#Interfaces#oAuth#IConsumerCredentials#ConsumerKey">
            <summary>Sets the stub of IConsumerCredentials.get_ConsumerKey()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.tc::Tweetinvi#Core#Interfaces#oAuth#IConsumerCredentials#ConsumerSecret">
            <summary>Sets the stub of IConsumerCredentials.get_ConsumerSecret()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITemporaryCredentials.tc::Tweetinvi#Core#Interfaces#Credentials#ITemporaryCredentials#VerifierCode">
            <summary>Sets the stub of ITemporaryCredentials.get_VerifierCode()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimit">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Credentials.ITokenRateLimit</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimit.#ctor">
            <summary>Initializes a new instance of type StubITokenRateLimit</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimit.LimitGet">
            <summary>Sets the stub of ITokenRateLimit.get_Limit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimit.RemainingGet">
            <summary>Sets the stub of ITokenRateLimit.get_Remaining()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimit.ResetDateTimeGet">
            <summary>Sets the stub of ITokenRateLimit.get_ResetDateTime()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimit.ResetDateTimeInSecondsGet">
            <summary>Sets the stub of ITokenRateLimit.get_ResetDateTimeInSeconds()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimit.ResetGet">
            <summary>Sets the stub of ITokenRateLimit.get_Reset()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimit.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimit#Limit">
            <summary>Sets the stub of ITokenRateLimit.get_Limit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimit.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimit#Remaining">
            <summary>Sets the stub of ITokenRateLimit.get_Remaining()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimit.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimit#Reset">
            <summary>Sets the stub of ITokenRateLimit.get_Reset()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimit.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimit#ResetDateTime">
            <summary>Sets the stub of ITokenRateLimit.get_ResetDateTime()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimit.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimit#ResetDateTimeInSeconds">
            <summary>Sets the stub of ITokenRateLimit.get_ResetDateTimeInSeconds()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Credentials.ITokenRateLimits</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.#ctor">
            <summary>Initializes a new instance of type StubITokenRateLimits</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.AccessTokenGet">
            <summary>Sets the stub of ITokenRateLimits.get_AccessToken()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.AccountLoginVerificationEnrollmentLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_AccountLoginVerificationEnrollmentLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.AccountSettingsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_AccountSettingsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.AccountUpdateProfileLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_AccountUpdateProfileLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.AccountVerifyCredentialsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_AccountVerifyCredentialsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.ApplicationRateLimitStatusLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_ApplicationRateLimitStatusLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.BlocksIdsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_BlocksIdsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.BlocksListLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_BlocksListLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.DeviceTokenLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_DeviceTokenLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.DirectMessagesLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_DirectMessagesLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.DirectMessagesSentAndReceivedLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_DirectMessagesSentAndReceivedLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.DirectMessagesSentLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_DirectMessagesSentLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.DirectMessagesShowLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_DirectMessagesShowLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.FavoritesListLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_FavoritesListLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.FollowersIdsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_FollowersIdsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.FollowersListLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_FollowersListLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.FriendsFollowingIdsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_FriendsFollowingIdsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.FriendsFollowingListLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_FriendsFollowingListLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.FriendsIdsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_FriendsIdsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.FriendsListLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_FriendsListLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.FriendshipsIncomingLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_FriendshipsIncomingLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.FriendshipsLookupLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_FriendshipsLookupLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.FriendshipsNoRetweetsIdsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_FriendshipsNoRetweetsIdsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.FriendshipsOutgoingLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_FriendshipsOutgoingLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.FriendshipsShowLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_FriendshipsShowLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.GeoGetPlaceFromIdLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_GeoGetPlaceFromIdLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.GeoReverseGeoCodeLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_GeoReverseGeoCodeLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.GeoSearchLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_GeoSearchLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.GeoSimilarPlacesLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_GeoSimilarPlacesLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.HelpConfigurationLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_HelpConfigurationLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.HelpLanguagesLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_HelpLanguagesLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.HelpPrivacyLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_HelpPrivacyLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.HelpSettingsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_HelpSettingsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.HelpTosLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_HelpTosLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.ListsListLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_ListsListLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.ListsMembersLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_ListsMembersLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.ListsMembersShowLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_ListsMembersShowLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.ListsMembershipsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_ListsMembershipsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.ListsOwnershipsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_ListsOwnershipsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.ListsShowLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_ListsShowLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.ListsStatusesLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_ListsStatusesLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.ListsSubscribersLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_ListsSubscribersLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.ListsSubscribersShowLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_ListsSubscribersShowLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.ListsSubscriptionsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_ListsSubscriptionsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.MutesUserIdsGet">
            <summary>Sets the stub of ITokenRateLimits.get_MutesUserIds()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.MutesUserListGet">
            <summary>Sets the stub of ITokenRateLimits.get_MutesUserList()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.SavedSearchDestroyListGet">
            <summary>Sets the stub of ITokenRateLimits.get_SavedSearchDestroyList()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.SavedSearchesListLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_SavedSearchesListLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.SavedSearchesShowIdLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_SavedSearchesShowIdLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.SearchTweetsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_SearchTweetsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.StatusesFriendsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesFriendsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.StatusesHomeTimelineLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesHomeTimelineLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.StatusesLookupLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesLookupLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.StatusesMentionsTimelineLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesMentionsTimelineLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.StatusesOembedLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesOembedLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.StatusesRetweetersIdsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesRetweetersIdsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.StatusesRetweetsIdLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesRetweetsIdLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.StatusesRetweetsOfMeLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesRetweetsOfMeLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.StatusesShowIdLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesShowIdLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.StatusesUserTimelineLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesUserTimelineLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.TrendsAvailableLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_TrendsAvailableLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.TrendsClosestLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_TrendsClosestLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.TrendsPlaceLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_TrendsPlaceLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.UsersContributeesLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_UsersContributeesLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.UsersContributorsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_UsersContributorsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.UsersDerivedInfoLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_UsersDerivedInfoLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.UsersLookupLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_UsersLookupLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.UsersProfileBannerLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_UsersProfileBannerLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.UsersReportSpamLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_UsersReportSpamLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.UsersSearchLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_UsersSearchLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.UsersShowIdLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_UsersShowIdLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.UsersSuggestionsLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_UsersSuggestionsLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.UsersSuggestionsSlugLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_UsersSuggestionsSlugLimit()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.UsersSuggestionsSlugMembersLimitGet">
            <summary>Sets the stub of ITokenRateLimits.get_UsersSuggestionsSlugMembersLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#AccessToken">
            <summary>Sets the stub of ITokenRateLimits.get_AccessToken()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#AccountLoginVerificationEnrollmentLimit">
            <summary>Sets the stub of ITokenRateLimits.get_AccountLoginVerificationEnrollmentLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#AccountSettingsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_AccountSettingsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#AccountUpdateProfileLimit">
            <summary>Sets the stub of ITokenRateLimits.get_AccountUpdateProfileLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#AccountVerifyCredentialsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_AccountVerifyCredentialsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#ApplicationRateLimitStatusLimit">
            <summary>Sets the stub of ITokenRateLimits.get_ApplicationRateLimitStatusLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#BlocksIdsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_BlocksIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#BlocksListLimit">
            <summary>Sets the stub of ITokenRateLimits.get_BlocksListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#DeviceTokenLimit">
            <summary>Sets the stub of ITokenRateLimits.get_DeviceTokenLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#DirectMessagesLimit">
            <summary>Sets the stub of ITokenRateLimits.get_DirectMessagesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#DirectMessagesSentAndReceivedLimit">
            <summary>Sets the stub of ITokenRateLimits.get_DirectMessagesSentAndReceivedLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#DirectMessagesSentLimit">
            <summary>Sets the stub of ITokenRateLimits.get_DirectMessagesSentLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#DirectMessagesShowLimit">
            <summary>Sets the stub of ITokenRateLimits.get_DirectMessagesShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#FavoritesListLimit">
            <summary>Sets the stub of ITokenRateLimits.get_FavoritesListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#FollowersIdsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_FollowersIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#FollowersListLimit">
            <summary>Sets the stub of ITokenRateLimits.get_FollowersListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#FriendsFollowingIdsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_FriendsFollowingIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#FriendsFollowingListLimit">
            <summary>Sets the stub of ITokenRateLimits.get_FriendsFollowingListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#FriendsIdsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_FriendsIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#FriendsListLimit">
            <summary>Sets the stub of ITokenRateLimits.get_FriendsListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#FriendshipsIncomingLimit">
            <summary>Sets the stub of ITokenRateLimits.get_FriendshipsIncomingLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#FriendshipsLookupLimit">
            <summary>Sets the stub of ITokenRateLimits.get_FriendshipsLookupLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#FriendshipsNoRetweetsIdsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_FriendshipsNoRetweetsIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#FriendshipsOutgoingLimit">
            <summary>Sets the stub of ITokenRateLimits.get_FriendshipsOutgoingLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#FriendshipsShowLimit">
            <summary>Sets the stub of ITokenRateLimits.get_FriendshipsShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#GeoGetPlaceFromIdLimit">
            <summary>Sets the stub of ITokenRateLimits.get_GeoGetPlaceFromIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#GeoReverseGeoCodeLimit">
            <summary>Sets the stub of ITokenRateLimits.get_GeoReverseGeoCodeLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#GeoSearchLimit">
            <summary>Sets the stub of ITokenRateLimits.get_GeoSearchLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#GeoSimilarPlacesLimit">
            <summary>Sets the stub of ITokenRateLimits.get_GeoSimilarPlacesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#HelpConfigurationLimit">
            <summary>Sets the stub of ITokenRateLimits.get_HelpConfigurationLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#HelpLanguagesLimit">
            <summary>Sets the stub of ITokenRateLimits.get_HelpLanguagesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#HelpPrivacyLimit">
            <summary>Sets the stub of ITokenRateLimits.get_HelpPrivacyLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#HelpSettingsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_HelpSettingsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#HelpTosLimit">
            <summary>Sets the stub of ITokenRateLimits.get_HelpTosLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#ListsListLimit">
            <summary>Sets the stub of ITokenRateLimits.get_ListsListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#ListsMembersLimit">
            <summary>Sets the stub of ITokenRateLimits.get_ListsMembersLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#ListsMembersShowLimit">
            <summary>Sets the stub of ITokenRateLimits.get_ListsMembersShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#ListsMembershipsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_ListsMembershipsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#ListsOwnershipsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_ListsOwnershipsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#ListsShowLimit">
            <summary>Sets the stub of ITokenRateLimits.get_ListsShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#ListsStatusesLimit">
            <summary>Sets the stub of ITokenRateLimits.get_ListsStatusesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#ListsSubscribersLimit">
            <summary>Sets the stub of ITokenRateLimits.get_ListsSubscribersLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#ListsSubscribersShowLimit">
            <summary>Sets the stub of ITokenRateLimits.get_ListsSubscribersShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#ListsSubscriptionsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_ListsSubscriptionsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#MutesUserIds">
            <summary>Sets the stub of ITokenRateLimits.get_MutesUserIds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#MutesUserList">
            <summary>Sets the stub of ITokenRateLimits.get_MutesUserList()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#SavedSearchDestroyList">
            <summary>Sets the stub of ITokenRateLimits.get_SavedSearchDestroyList()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#SavedSearchesListLimit">
            <summary>Sets the stub of ITokenRateLimits.get_SavedSearchesListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#SavedSearchesShowIdLimit">
            <summary>Sets the stub of ITokenRateLimits.get_SavedSearchesShowIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#SearchTweetsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_SearchTweetsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#StatusesFriendsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesFriendsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#StatusesHomeTimelineLimit">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesHomeTimelineLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#StatusesLookupLimit">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesLookupLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#StatusesMentionsTimelineLimit">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesMentionsTimelineLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#StatusesOembedLimit">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesOembedLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#StatusesRetweetersIdsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesRetweetersIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#StatusesRetweetsIdLimit">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesRetweetsIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#StatusesRetweetsOfMeLimit">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesRetweetsOfMeLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#StatusesShowIdLimit">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesShowIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#StatusesUserTimelineLimit">
            <summary>Sets the stub of ITokenRateLimits.get_StatusesUserTimelineLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#TrendsAvailableLimit">
            <summary>Sets the stub of ITokenRateLimits.get_TrendsAvailableLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#TrendsClosestLimit">
            <summary>Sets the stub of ITokenRateLimits.get_TrendsClosestLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#TrendsPlaceLimit">
            <summary>Sets the stub of ITokenRateLimits.get_TrendsPlaceLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#UsersContributeesLimit">
            <summary>Sets the stub of ITokenRateLimits.get_UsersContributeesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#UsersContributorsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_UsersContributorsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#UsersDerivedInfoLimit">
            <summary>Sets the stub of ITokenRateLimits.get_UsersDerivedInfoLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#UsersLookupLimit">
            <summary>Sets the stub of ITokenRateLimits.get_UsersLookupLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#UsersProfileBannerLimit">
            <summary>Sets the stub of ITokenRateLimits.get_UsersProfileBannerLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#UsersReportSpamLimit">
            <summary>Sets the stub of ITokenRateLimits.get_UsersReportSpamLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#UsersSearchLimit">
            <summary>Sets the stub of ITokenRateLimits.get_UsersSearchLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#UsersShowIdLimit">
            <summary>Sets the stub of ITokenRateLimits.get_UsersShowIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#UsersSuggestionsLimit">
            <summary>Sets the stub of ITokenRateLimits.get_UsersSuggestionsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#UsersSuggestionsSlugLimit">
            <summary>Sets the stub of ITokenRateLimits.get_UsersSuggestionsSlugLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITokenRateLimits.tc::Tweetinvi#Core#Interfaces#Credentials#ITokenRateLimits#UsersSuggestionsSlugMembersLimit">
            <summary>Sets the stub of ITokenRateLimits.get_UsersSuggestionsSlugMembersLimit()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Credentials.ITwitterAccessor</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.#ctor">
            <summary>Initializes a new instance of type StubITwitterAccessor</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.ExecuteCursorGETCursorQueryResultOf1StringInt32Int64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Int32,System.Int64,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of ExecuteCursorGETCursorQueryResult(String query, Int32 maxObjectToRetrieve, Int64 cursor)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.ExecuteCursorGETQueryOf2StringInt32Int64``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Int32,System.Int64,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of ExecuteCursorGETQuery(String baseQuery, Int32 maxObjectToRetrieve, Int64 cursor)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.ExecuteGETQueryOf1StringJsonConverterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Newtonsoft.Json.JsonConverter[],``0})">
            <summary>Sets stubs of ExecuteGETQuery(String query, JsonConverter[] converters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.ExecuteGETQueryString">
            <summary>Sets the stub of ITwitterAccessor.ExecuteGETQuery(String query)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.ExecuteGETQueryWithPathOf1StringStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String[],``0})">
            <summary>Sets stubs of ExecuteGETQueryWithPath(String query, String[] paths)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.ExecuteJsonCursorGETQueryOf1StringInt32Int64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Int32,System.Int64,System.Collections.Generic.IEnumerable{System.String}})">
            <summary>Sets stubs of ExecuteJsonCursorGETQuery(String baseQuery, Int32 maxObjectToRetrieve, Int64 cursor)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.ExecuteJsonGETQueryString">
            <summary>Sets the stub of ITwitterAccessor.ExecuteJsonGETQuery(String query)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.ExecuteJsonPOSTQueryString">
            <summary>Sets the stub of ITwitterAccessor.ExecuteJsonPOSTQuery(String query)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.ExecuteMultipartQueryStringHttpMethodIEnumerableOfIMedia">
            <summary>Sets the stub of ITwitterAccessor.ExecuteMultipartQuery(String query, HttpMethod method, IEnumerable`1&lt;IMedia&gt; medias)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.ExecutePOSTMultipartQueryOf1StringIEnumerableOfIMediaJsonConverterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.IMedia},Newtonsoft.Json.JsonConverter[],``0})">
            <summary>Sets stubs of ExecutePOSTMultipartQuery(String query, IEnumerable`1&lt;IMedia&gt; medias, JsonConverter[] converters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.ExecutePOSTQueryOf1StringJsonConverterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Newtonsoft.Json.JsonConverter[],``0})">
            <summary>Sets stubs of ExecutePOSTQuery(String query, JsonConverter[] converters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.ExecutePOSTQueryString">
            <summary>Sets the stub of ITwitterAccessor.ExecutePOSTQuery(String query)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.ExecutePOSTQueryWithPathOf1StringStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String[],``0})">
            <summary>Sets stubs of ExecutePOSTQueryWithPath(String query, String[] paths)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.ExecuteQueryStringHttpMethod">
            <summary>Sets the stub of ITwitterAccessor.ExecuteQuery(String query, HttpMethod method)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.TryExecuteGETQueryOf1StringM0OutJsonConverterArray``1(Microsoft.QualityTools.Testing.Fakes.Delegates.TweetinviCoreDelegates.Out1Func4{System.String,``0,Newtonsoft.Json.JsonConverter[],System.Boolean})">
            <summary>Sets stubs of TryExecuteGETQuery(String query, !!0&amp; resultObject, JsonConverter[] converters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.TryExecuteGETQueryStringJsonConverterArray">
            <summary>Sets the stub of ITwitterAccessor.TryExecuteGETQuery(String query, JsonConverter[] converters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.TryExecuteJsonGETQueryStringStringOut">
            <summary>Sets the stub of ITwitterAccessor.TryExecuteJsonGETQuery(String query, String&amp; json)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.TryExecuteJsonPOSTQueryStringStringOut">
            <summary>Sets the stub of ITwitterAccessor.TryExecuteJsonPOSTQuery(String query, String&amp; json)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.TryExecutePOSTQueryOf1StringM0OutJsonConverterArray``1(Microsoft.QualityTools.Testing.Fakes.Delegates.TweetinviCoreDelegates.Out1Func4{System.String,``0,Newtonsoft.Json.JsonConverter[],System.Boolean})">
            <summary>Sets stubs of TryExecutePOSTQuery(String query, !!0&amp; resultObject, JsonConverter[] converters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.TryExecutePOSTQueryStringJsonConverterArray">
            <summary>Sets the stub of ITwitterAccessor.TryExecutePOSTQuery(String query, JsonConverter[] converters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#ExecuteCursorGETCursorQueryResult``1(System.String,System.Int32,System.Int64)">
            <summary>Sets the stub of ITwitterAccessor.ExecuteCursorGETCursorQueryResult(String query, Int32 maxObjectToRetrieve, Int64 cursor)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#ExecuteCursorGETQuery``2(System.String,System.Int32,System.Int64)">
            <summary>Sets the stub of ITwitterAccessor.ExecuteCursorGETQuery(String baseQuery, Int32 maxObjectToRetrieve, Int64 cursor)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#ExecuteGETQuery(System.String)">
            <summary>Sets the stub of ITwitterAccessor.ExecuteGETQuery(String query)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#ExecuteGETQuery``1(System.String,Newtonsoft.Json.JsonConverter[])">
            <summary>Sets the stub of ITwitterAccessor.ExecuteGETQuery(String query, JsonConverter[] converters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#ExecuteGETQueryWithPath``1(System.String,System.String[])">
            <summary>Sets the stub of ITwitterAccessor.ExecuteGETQueryWithPath(String query, String[] paths)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#ExecuteJsonCursorGETQuery``1(System.String,System.Int32,System.Int64)">
            <summary>Sets the stub of ITwitterAccessor.ExecuteJsonCursorGETQuery(String baseQuery, Int32 maxObjectToRetrieve, Int64 cursor)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#ExecuteJsonGETQuery(System.String)">
            <summary>Sets the stub of ITwitterAccessor.ExecuteJsonGETQuery(String query)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#ExecuteJsonPOSTQuery(System.String)">
            <summary>Sets the stub of ITwitterAccessor.ExecuteJsonPOSTQuery(String query)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#ExecuteMultipartQuery(System.String,Tweetinvi.Core.Enum.HttpMethod,System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.IMedia})">
            <summary>Sets the stub of ITwitterAccessor.ExecuteMultipartQuery(String query, HttpMethod method, IEnumerable`1&lt;IMedia&gt; medias)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#ExecutePOSTMultipartQuery``1(System.String,System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.IMedia},Newtonsoft.Json.JsonConverter[])">
            <summary>Sets the stub of ITwitterAccessor.ExecutePOSTMultipartQuery(String query, IEnumerable`1&lt;IMedia&gt; medias, JsonConverter[] converters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#ExecutePOSTQuery``1(System.String,Newtonsoft.Json.JsonConverter[])">
            <summary>Sets the stub of ITwitterAccessor.ExecutePOSTQuery(String query, JsonConverter[] converters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#ExecutePOSTQuery(System.String)">
            <summary>Sets the stub of ITwitterAccessor.ExecutePOSTQuery(String query)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#ExecutePOSTQueryWithPath``1(System.String,System.String[])">
            <summary>Sets the stub of ITwitterAccessor.ExecutePOSTQueryWithPath(String query, String[] paths)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#ExecuteQuery(System.String,Tweetinvi.Core.Enum.HttpMethod)">
            <summary>Sets the stub of ITwitterAccessor.ExecuteQuery(String query, HttpMethod method)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#TryExecuteGETQuery(System.String,Newtonsoft.Json.JsonConverter[])">
            <summary>Sets the stub of ITwitterAccessor.TryExecuteGETQuery(String query, JsonConverter[] converters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#TryExecuteGETQuery``1(System.String,``0@,Newtonsoft.Json.JsonConverter[])">
            <summary>Sets the stub of ITwitterAccessor.TryExecuteGETQuery(String query, !!0&amp; resultObject, JsonConverter[] converters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#TryExecuteJsonGETQuery(System.String,System.String@)">
            <summary>Sets the stub of ITwitterAccessor.TryExecuteJsonGETQuery(String query, String&amp; json)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#TryExecuteJsonPOSTQuery(System.String,System.String@)">
            <summary>Sets the stub of ITwitterAccessor.TryExecuteJsonPOSTQuery(String query, String&amp; json)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#TryExecutePOSTQuery(System.String,Newtonsoft.Json.JsonConverter[])">
            <summary>Sets the stub of ITwitterAccessor.TryExecutePOSTQuery(String query, JsonConverter[] converters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubITwitterAccessor.tc::Tweetinvi#Core#Interfaces#Credentials#ITwitterAccessor#TryExecutePOSTQuery``1(System.String,``0@,Newtonsoft.Json.JsonConverter[])">
            <summary>Sets the stub of ITwitterAccessor.TryExecutePOSTQuery(String query, !!0&amp; resultObject, JsonConverter[] converters)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIWebTokenCreator">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Credentials.IWebTokenCreator</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIWebTokenCreator.#ctor">
            <summary>Initializes a new instance of type StubIWebTokenCreator</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIWebTokenCreator.GetAuthorizationURLITemporaryCredentialsString">
            <summary>Sets the stub of IWebTokenCreator.GetAuthorizationURL(ITemporaryCredentials temporaryCredentials, String callbackURL)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIWebTokenCreator.GetPinCodeAuthorizationURLITemporaryCredentials">
            <summary>Sets the stub of IWebTokenCreator.GetPinCodeAuthorizationURL(ITemporaryCredentials temporaryCredentials)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIWebTokenCreator.GetVerifierCodeFromCallbackURLString">
            <summary>Sets the stub of IWebTokenCreator.GetVerifierCodeFromCallbackURL(String callbackURL)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIWebTokenCreator.tc::Tweetinvi#Core#Interfaces#Credentials#IWebTokenCreator#GetAuthorizationURL(Tweetinvi.Core.Interfaces.Credentials.ITemporaryCredentials,System.String)">
            <summary>Sets the stub of IWebTokenCreator.GetAuthorizationURL(ITemporaryCredentials temporaryCredentials, String callbackURL)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIWebTokenCreator.tc::Tweetinvi#Core#Interfaces#Credentials#IWebTokenCreator#GetPinCodeAuthorizationURL(Tweetinvi.Core.Interfaces.Credentials.ITemporaryCredentials)">
            <summary>Sets the stub of IWebTokenCreator.GetPinCodeAuthorizationURL(ITemporaryCredentials temporaryCredentials)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Credentials.Fakes.StubIWebTokenCreator.tc::Tweetinvi#Core#Interfaces#Credentials#IWebTokenCreator#GetVerifierCodeFromCallbackURL(System.String)">
            <summary>Sets the stub of IWebTokenCreator.GetVerifierCodeFromCallbackURL(String callbackURL)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.IAccountSettingsDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.#ctor">
            <summary>Initializes a new instance of type StubIAccountSettingsDTO</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AlwaysUseHttpsGet">
            <summary>Sets the stub of IAccountSettingsDTO.get_AlwaysUseHttps()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AlwaysUseHttpsSetBoolean">
            <summary>Sets the stub of IAccountSettingsDTO.set_AlwaysUseHttps(Boolean value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AttachBackingFieldToAlwaysUseHttps">
            <summary>Attaches delegates to emulate StubIAccountSettingsDTO.AlwaysUseHttps as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AttachBackingFieldToDiscoverableByEmail">
            <summary>Attaches delegates to emulate StubIAccountSettingsDTO.DiscoverableByEmail as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AttachBackingFieldToGeoEnabled">
            <summary>Attaches delegates to emulate StubIAccountSettingsDTO.GeoEnabled as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AttachBackingFieldToLanguage">
            <summary>Attaches delegates to emulate StubIAccountSettingsDTO.Language as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AttachBackingFieldToPrivacyMode">
            <summary>Attaches delegates to emulate StubIAccountSettingsDTO.PrivacyMode as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AttachBackingFieldToScreenName">
            <summary>Attaches delegates to emulate StubIAccountSettingsDTO.ScreenName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AttachBackingFieldToShowAllInlineMedia">
            <summary>Attaches delegates to emulate StubIAccountSettingsDTO.ShowAllInlineMedia as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AttachBackingFieldToSleepTimeEnabled">
            <summary>Attaches delegates to emulate StubIAccountSettingsDTO.SleepTimeEnabled as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AttachBackingFieldToSleepTimeEndHour">
            <summary>Attaches delegates to emulate StubIAccountSettingsDTO.SleepTimeEndHour as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AttachBackingFieldToSleepTimeStartHour">
            <summary>Attaches delegates to emulate StubIAccountSettingsDTO.SleepTimeStartHour as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AttachBackingFieldToTimeZone">
            <summary>Attaches delegates to emulate StubIAccountSettingsDTO.TimeZone as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AttachBackingFieldToTrendLocation">
            <summary>Attaches delegates to emulate StubIAccountSettingsDTO.TrendLocation as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.AttachBackingFieldToUseCookiePersonalization">
            <summary>Attaches delegates to emulate StubIAccountSettingsDTO.UseCookiePersonalization as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.DiscoverableByEmailGet">
            <summary>Sets the stub of IAccountSettingsDTO.get_DiscoverableByEmail()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.DiscoverableByEmailSetBoolean">
            <summary>Sets the stub of IAccountSettingsDTO.set_DiscoverableByEmail(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.GeoEnabledGet">
            <summary>Sets the stub of IAccountSettingsDTO.get_GeoEnabled()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.GeoEnabledSetBoolean">
            <summary>Sets the stub of IAccountSettingsDTO.set_GeoEnabled(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.LanguageGet">
            <summary>Sets the stub of IAccountSettingsDTO.get_Language()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.LanguageSetLanguage">
            <summary>Sets the stub of IAccountSettingsDTO.set_Language(Language value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.PrivacyModeGet">
            <summary>Sets the stub of IAccountSettingsDTO.get_PrivacyMode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.PrivacyModeSetPrivacyMode">
            <summary>Sets the stub of IAccountSettingsDTO.set_PrivacyMode(PrivacyMode value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.ScreenNameGet">
            <summary>Sets the stub of IAccountSettingsDTO.get_ScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.ScreenNameSetString">
            <summary>Sets the stub of IAccountSettingsDTO.set_ScreenName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.ShowAllInlineMediaGet">
            <summary>Sets the stub of IAccountSettingsDTO.get_ShowAllInlineMedia()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.ShowAllInlineMediaSetBoolean">
            <summary>Sets the stub of IAccountSettingsDTO.set_ShowAllInlineMedia(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.SleepTimeEnabledGet">
            <summary>Sets the stub of IAccountSettingsDTO.get_SleepTimeEnabled()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.SleepTimeEnabledSetBoolean">
            <summary>Sets the stub of IAccountSettingsDTO.set_SleepTimeEnabled(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.SleepTimeEndHourGet">
            <summary>Sets the stub of IAccountSettingsDTO.get_SleepTimeEndHour()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.SleepTimeEndHourSetInt32">
            <summary>Sets the stub of IAccountSettingsDTO.set_SleepTimeEndHour(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.SleepTimeStartHourGet">
            <summary>Sets the stub of IAccountSettingsDTO.get_SleepTimeStartHour()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.SleepTimeStartHourSetInt32">
            <summary>Sets the stub of IAccountSettingsDTO.set_SleepTimeStartHour(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.TimeZoneGet">
            <summary>Sets the stub of IAccountSettingsDTO.get_TimeZone()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.TimeZoneSetITimeZone">
            <summary>Sets the stub of IAccountSettingsDTO.set_TimeZone(ITimeZone value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.TrendLocationGet">
            <summary>Sets the stub of IAccountSettingsDTO.get_TrendLocation()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.TrendLocationSetITrendLocation">
            <summary>Sets the stub of IAccountSettingsDTO.set_TrendLocation(ITrendLocation value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.UseCookiePersonalizationGet">
            <summary>Sets the stub of IAccountSettingsDTO.get_UseCookiePersonalization()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.UseCookiePersonalizationSetBoolean">
            <summary>Sets the stub of IAccountSettingsDTO.set_UseCookiePersonalization(Boolean value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.tc::Tweetinvi#Core#Interfaces#DTO#IAccountSettingsDTO#AlwaysUseHttps">
            <summary>Sets the stub of IAccountSettingsDTO.get_AlwaysUseHttps()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.tc::Tweetinvi#Core#Interfaces#DTO#IAccountSettingsDTO#DiscoverableByEmail">
            <summary>Sets the stub of IAccountSettingsDTO.get_DiscoverableByEmail()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.tc::Tweetinvi#Core#Interfaces#DTO#IAccountSettingsDTO#GeoEnabled">
            <summary>Sets the stub of IAccountSettingsDTO.get_GeoEnabled()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.tc::Tweetinvi#Core#Interfaces#DTO#IAccountSettingsDTO#Language">
            <summary>Sets the stub of IAccountSettingsDTO.get_Language()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.tc::Tweetinvi#Core#Interfaces#DTO#IAccountSettingsDTO#PrivacyMode">
            <summary>Sets the stub of IAccountSettingsDTO.get_PrivacyMode()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.tc::Tweetinvi#Core#Interfaces#DTO#IAccountSettingsDTO#ScreenName">
            <summary>Sets the stub of IAccountSettingsDTO.get_ScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.tc::Tweetinvi#Core#Interfaces#DTO#IAccountSettingsDTO#ShowAllInlineMedia">
            <summary>Sets the stub of IAccountSettingsDTO.get_ShowAllInlineMedia()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.tc::Tweetinvi#Core#Interfaces#DTO#IAccountSettingsDTO#SleepTimeEnabled">
            <summary>Sets the stub of IAccountSettingsDTO.get_SleepTimeEnabled()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.tc::Tweetinvi#Core#Interfaces#DTO#IAccountSettingsDTO#SleepTimeEndHour">
            <summary>Sets the stub of IAccountSettingsDTO.get_SleepTimeEndHour()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.tc::Tweetinvi#Core#Interfaces#DTO#IAccountSettingsDTO#SleepTimeStartHour">
            <summary>Sets the stub of IAccountSettingsDTO.get_SleepTimeStartHour()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.tc::Tweetinvi#Core#Interfaces#DTO#IAccountSettingsDTO#TimeZone">
            <summary>Sets the stub of IAccountSettingsDTO.get_TimeZone()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.tc::Tweetinvi#Core#Interfaces#DTO#IAccountSettingsDTO#TrendLocation">
            <summary>Sets the stub of IAccountSettingsDTO.get_TrendLocation()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIAccountSettingsDTO.tc::Tweetinvi#Core#Interfaces#DTO#IAccountSettingsDTO#UseCookiePersonalization">
            <summary>Sets the stub of IAccountSettingsDTO.get_UseCookiePersonalization()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessage">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.IDisconnectMessage</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessage.#ctor">
            <summary>Initializes a new instance of type StubIDisconnectMessage</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessage.AttachBackingFieldToCode">
            <summary>Attaches delegates to emulate StubIDisconnectMessage.Code as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessage.AttachBackingFieldToReason">
            <summary>Attaches delegates to emulate StubIDisconnectMessage.Reason as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessage.AttachBackingFieldToStreamName">
            <summary>Attaches delegates to emulate StubIDisconnectMessage.StreamName as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessage.CodeGet">
            <summary>Sets the stub of IDisconnectMessage.get_Code()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessage.CodeSetInt32">
            <summary>Sets the stub of IDisconnectMessage.set_Code(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessage.ReasonGet">
            <summary>Sets the stub of IDisconnectMessage.get_Reason()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessage.ReasonSetString">
            <summary>Sets the stub of IDisconnectMessage.set_Reason(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessage.StreamNameGet">
            <summary>Sets the stub of IDisconnectMessage.get_StreamName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessage.StreamNameSetString">
            <summary>Sets the stub of IDisconnectMessage.set_StreamName(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessage.tc::Tweetinvi#Core#Interfaces#DTO#IDisconnectMessage#Code">
            <summary>Sets the stub of IDisconnectMessage.get_Code()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessage.tc::Tweetinvi#Core#Interfaces#DTO#IDisconnectMessage#Reason">
            <summary>Sets the stub of IDisconnectMessage.get_Reason()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessage.tc::Tweetinvi#Core#Interfaces#DTO#IDisconnectMessage#StreamName">
            <summary>Sets the stub of IDisconnectMessage.get_StreamName()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessageDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.IDisconnectMessageDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessageDTO.#ctor">
            <summary>Initializes a new instance of type StubIDisconnectMessageDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessageDTO.AttachBackingFieldToCode">
            <summary>Attaches delegates to emulate StubIDisconnectMessageDTO.Code as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessageDTO.AttachBackingFieldToReason">
            <summary>Attaches delegates to emulate StubIDisconnectMessageDTO.Reason as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessageDTO.AttachBackingFieldToStreamName">
            <summary>Attaches delegates to emulate StubIDisconnectMessageDTO.StreamName as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessageDTO.CodeGet">
            <summary>Sets the stub of IDisconnectMessageDTO.get_Code()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessageDTO.CodeSetInt32">
            <summary>Sets the stub of IDisconnectMessageDTO.set_Code(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessageDTO.ReasonGet">
            <summary>Sets the stub of IDisconnectMessageDTO.get_Reason()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessageDTO.ReasonSetString">
            <summary>Sets the stub of IDisconnectMessageDTO.set_Reason(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessageDTO.StreamNameGet">
            <summary>Sets the stub of IDisconnectMessageDTO.get_StreamName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessageDTO.StreamNameSetString">
            <summary>Sets the stub of IDisconnectMessageDTO.set_StreamName(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IDisconnectMessageDTO#Code">
            <summary>Sets the stub of IDisconnectMessageDTO.get_Code()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IDisconnectMessageDTO#Reason">
            <summary>Sets the stub of IDisconnectMessageDTO.get_Reason()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIDisconnectMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IDisconnectMessageDTO#StreamName">
            <summary>Sets the stub of IDisconnectMessageDTO.get_StreamName()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMedia">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.IMedia</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMedia.#ctor">
            <summary>Initializes a new instance of type StubIMedia</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMedia.AttachBackingFieldToData">
            <summary>Attaches delegates to emulate StubIMedia.Data as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMedia.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIMedia.Name as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMedia.DataGet">
            <summary>Sets the stub of IMedia.get_Data()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMedia.DataSetByteArray">
            <summary>Sets the stub of IMedia.set_Data(Byte[] value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMedia.NameGet">
            <summary>Sets the stub of IMedia.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMedia.NameSetString">
            <summary>Sets the stub of IMedia.set_Name(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMedia.tc::Tweetinvi#Core#Interfaces#DTO#IMedia#Data">
            <summary>Sets the stub of IMedia.get_Data()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMedia.tc::Tweetinvi#Core#Interfaces#DTO#IMedia#Name">
            <summary>Sets the stub of IMedia.get_Name()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.IMessageDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.#ctor">
            <summary>Initializes a new instance of type StubIMessageDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.AttachBackingFieldToCreatedAt">
            <summary>Attaches delegates to emulate StubIMessageDTO.CreatedAt as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.AttachBackingFieldToEntities">
            <summary>Attaches delegates to emulate StubIMessageDTO.Entities as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubIMessageDTO.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.AttachBackingFieldToIdStr">
            <summary>Attaches delegates to emulate StubIMessageDTO.IdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.AttachBackingFieldToIsMessageDestroyed">
            <summary>Attaches delegates to emulate StubIMessageDTO.IsMessageDestroyed as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.AttachBackingFieldToIsMessagePublished">
            <summary>Attaches delegates to emulate StubIMessageDTO.IsMessagePublished as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.AttachBackingFieldToRecipient">
            <summary>Attaches delegates to emulate StubIMessageDTO.Recipient as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.AttachBackingFieldToRecipientId">
            <summary>Attaches delegates to emulate StubIMessageDTO.RecipientId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.AttachBackingFieldToRecipientScreenName">
            <summary>Attaches delegates to emulate StubIMessageDTO.RecipientScreenName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.AttachBackingFieldToSender">
            <summary>Attaches delegates to emulate StubIMessageDTO.Sender as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.AttachBackingFieldToSenderId">
            <summary>Attaches delegates to emulate StubIMessageDTO.SenderId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.AttachBackingFieldToSenderScreenName">
            <summary>Attaches delegates to emulate StubIMessageDTO.SenderScreenName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubIMessageDTO.Text as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.CreatedAtGet">
            <summary>Sets the stub of IMessageDTO.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.CreatedAtSetDateTime">
            <summary>Sets the stub of IMessageDTO.set_CreatedAt(DateTime value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.EntitiesGet">
            <summary>Sets the stub of IMessageDTO.get_Entities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.EntitiesSetITweetEntities">
            <summary>Sets the stub of IMessageDTO.set_Entities(ITweetEntities value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.IdGet">
            <summary>Sets the stub of IMessageDTO.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.IdSetInt64">
            <summary>Sets the stub of IMessageDTO.set_Id(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.IdStrGet">
            <summary>Sets the stub of IMessageDTO.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.IdStrSetString">
            <summary>Sets the stub of IMessageDTO.set_IdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.IsMessageDestroyedGet">
            <summary>Sets the stub of IMessageDTO.get_IsMessageDestroyed()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.IsMessageDestroyedSetBoolean">
            <summary>Sets the stub of IMessageDTO.set_IsMessageDestroyed(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.IsMessagePublishedGet">
            <summary>Sets the stub of IMessageDTO.get_IsMessagePublished()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.IsMessagePublishedSetBoolean">
            <summary>Sets the stub of IMessageDTO.set_IsMessagePublished(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.RecipientGet">
            <summary>Sets the stub of IMessageDTO.get_Recipient()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.RecipientIdGet">
            <summary>Sets the stub of IMessageDTO.get_RecipientId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.RecipientIdSetInt64">
            <summary>Sets the stub of IMessageDTO.set_RecipientId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.RecipientScreenNameGet">
            <summary>Sets the stub of IMessageDTO.get_RecipientScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.RecipientScreenNameSetString">
            <summary>Sets the stub of IMessageDTO.set_RecipientScreenName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.RecipientSetIUserDTO">
            <summary>Sets the stub of IMessageDTO.set_Recipient(IUserDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.SenderGet">
            <summary>Sets the stub of IMessageDTO.get_Sender()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.SenderIdGet">
            <summary>Sets the stub of IMessageDTO.get_SenderId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.SenderIdSetInt64">
            <summary>Sets the stub of IMessageDTO.set_SenderId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.SenderScreenNameGet">
            <summary>Sets the stub of IMessageDTO.get_SenderScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.SenderScreenNameSetString">
            <summary>Sets the stub of IMessageDTO.set_SenderScreenName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.SenderSetIUserDTO">
            <summary>Sets the stub of IMessageDTO.set_Sender(IUserDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.TextGet">
            <summary>Sets the stub of IMessageDTO.get_Text()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.TextSetString">
            <summary>Sets the stub of IMessageDTO.set_Text(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IMessageDTO#CreatedAt">
            <summary>Sets the stub of IMessageDTO.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IMessageDTO#Entities">
            <summary>Sets the stub of IMessageDTO.get_Entities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IMessageDTO#Id">
            <summary>Sets the stub of IMessageDTO.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IMessageDTO#IdStr">
            <summary>Sets the stub of IMessageDTO.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IMessageDTO#IsMessageDestroyed">
            <summary>Sets the stub of IMessageDTO.get_IsMessageDestroyed()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IMessageDTO#IsMessagePublished">
            <summary>Sets the stub of IMessageDTO.get_IsMessagePublished()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IMessageDTO#Recipient">
            <summary>Sets the stub of IMessageDTO.get_Recipient()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IMessageDTO#RecipientId">
            <summary>Sets the stub of IMessageDTO.get_RecipientId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IMessageDTO#RecipientScreenName">
            <summary>Sets the stub of IMessageDTO.get_RecipientScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IMessageDTO#Sender">
            <summary>Sets the stub of IMessageDTO.get_Sender()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IMessageDTO#SenderId">
            <summary>Sets the stub of IMessageDTO.get_SenderId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IMessageDTO#SenderScreenName">
            <summary>Sets the stub of IMessageDTO.get_SenderScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIMessageDTO.tc::Tweetinvi#Core#Interfaces#DTO#IMessageDTO#Text">
            <summary>Sets the stub of IMessageDTO.get_Text()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.IOEmbedTweetDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.#ctor">
            <summary>Initializes a new instance of type StubIOEmbedTweetDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.AttachBackingFieldToAuthorName">
            <summary>Attaches delegates to emulate StubIOEmbedTweetDTO.AuthorName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.AttachBackingFieldToAuthorURL">
            <summary>Attaches delegates to emulate StubIOEmbedTweetDTO.AuthorURL as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.AttachBackingFieldToCacheAge">
            <summary>Attaches delegates to emulate StubIOEmbedTweetDTO.CacheAge as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.AttachBackingFieldToHTML">
            <summary>Attaches delegates to emulate StubIOEmbedTweetDTO.HTML as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.AttachBackingFieldToHeight">
            <summary>Attaches delegates to emulate StubIOEmbedTweetDTO.Height as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.AttachBackingFieldToProviderURL">
            <summary>Attaches delegates to emulate StubIOEmbedTweetDTO.ProviderURL as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.AttachBackingFieldToType">
            <summary>Attaches delegates to emulate StubIOEmbedTweetDTO.Type as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.AttachBackingFieldToURL">
            <summary>Attaches delegates to emulate StubIOEmbedTweetDTO.URL as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.AttachBackingFieldToVersion">
            <summary>Attaches delegates to emulate StubIOEmbedTweetDTO.Version as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.AttachBackingFieldToWidth">
            <summary>Attaches delegates to emulate StubIOEmbedTweetDTO.Width as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.AuthorNameGet">
            <summary>Sets the stub of IOEmbedTweetDTO.get_AuthorName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.AuthorNameSetString">
            <summary>Sets the stub of IOEmbedTweetDTO.set_AuthorName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.AuthorURLGet">
            <summary>Sets the stub of IOEmbedTweetDTO.get_AuthorURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.AuthorURLSetString">
            <summary>Sets the stub of IOEmbedTweetDTO.set_AuthorURL(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.CacheAgeGet">
            <summary>Sets the stub of IOEmbedTweetDTO.get_CacheAge()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.CacheAgeSetString">
            <summary>Sets the stub of IOEmbedTweetDTO.set_CacheAge(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.HTMLGet">
            <summary>Sets the stub of IOEmbedTweetDTO.get_HTML()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.HTMLSetString">
            <summary>Sets the stub of IOEmbedTweetDTO.set_HTML(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.HeightGet">
            <summary>Sets the stub of IOEmbedTweetDTO.get_Height()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.HeightSetDouble">
            <summary>Sets the stub of IOEmbedTweetDTO.set_Height(Double value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.ProviderURLGet">
            <summary>Sets the stub of IOEmbedTweetDTO.get_ProviderURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.ProviderURLSetString">
            <summary>Sets the stub of IOEmbedTweetDTO.set_ProviderURL(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.TypeGet">
            <summary>Sets the stub of IOEmbedTweetDTO.get_Type()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.TypeSetString">
            <summary>Sets the stub of IOEmbedTweetDTO.set_Type(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.URLGet">
            <summary>Sets the stub of IOEmbedTweetDTO.get_URL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.URLSetString">
            <summary>Sets the stub of IOEmbedTweetDTO.set_URL(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.VersionGet">
            <summary>Sets the stub of IOEmbedTweetDTO.get_Version()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.VersionSetString">
            <summary>Sets the stub of IOEmbedTweetDTO.set_Version(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.WidthGet">
            <summary>Sets the stub of IOEmbedTweetDTO.get_Width()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.WidthSetDouble">
            <summary>Sets the stub of IOEmbedTweetDTO.set_Width(Double value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#IOEmbedTweetDTO#AuthorName">
            <summary>Sets the stub of IOEmbedTweetDTO.get_AuthorName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#IOEmbedTweetDTO#AuthorURL">
            <summary>Sets the stub of IOEmbedTweetDTO.get_AuthorURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#IOEmbedTweetDTO#CacheAge">
            <summary>Sets the stub of IOEmbedTweetDTO.get_CacheAge()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#IOEmbedTweetDTO#HTML">
            <summary>Sets the stub of IOEmbedTweetDTO.get_HTML()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#IOEmbedTweetDTO#Height">
            <summary>Sets the stub of IOEmbedTweetDTO.get_Height()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#IOEmbedTweetDTO#ProviderURL">
            <summary>Sets the stub of IOEmbedTweetDTO.get_ProviderURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#IOEmbedTweetDTO#Type">
            <summary>Sets the stub of IOEmbedTweetDTO.get_Type()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#IOEmbedTweetDTO#URL">
            <summary>Sets the stub of IOEmbedTweetDTO.get_URL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#IOEmbedTweetDTO#Version">
            <summary>Sets the stub of IOEmbedTweetDTO.get_Version()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIOEmbedTweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#IOEmbedTweetDTO#Width">
            <summary>Sets the stub of IOEmbedTweetDTO.get_Width()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.IRelationshipDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.#ctor">
            <summary>Initializes a new instance of type StubIRelationshipDTO</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.AllRepliesGet">
            <summary>Sets the stub of IRelationshipDTO.get_AllReplies()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.BlockingGet">
            <summary>Sets the stub of IRelationshipDTO.get_Blocking()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.CanSendDirectMessageGet">
            <summary>Sets the stub of IRelationshipDTO.get_CanSendDirectMessage()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.FollowedByGet">
            <summary>Sets the stub of IRelationshipDTO.get_FollowedBy()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.FollowingGet">
            <summary>Sets the stub of IRelationshipDTO.get_Following()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.MarkedSpamGet">
            <summary>Sets the stub of IRelationshipDTO.get_MarkedSpam()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.NotificationsEnabledGet">
            <summary>Sets the stub of IRelationshipDTO.get_NotificationsEnabled()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.SourceIdGet">
            <summary>Sets the stub of IRelationshipDTO.get_SourceId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.SourceIdStrGet">
            <summary>Sets the stub of IRelationshipDTO.get_SourceIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.SourceScreenNameGet">
            <summary>Sets the stub of IRelationshipDTO.get_SourceScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.TargetIdGet">
            <summary>Sets the stub of IRelationshipDTO.get_TargetId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.TargetIdStrGet">
            <summary>Sets the stub of IRelationshipDTO.get_TargetIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.TargetScreenNameGet">
            <summary>Sets the stub of IRelationshipDTO.get_TargetScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.WantRetweetsGet">
            <summary>Sets the stub of IRelationshipDTO.get_WantRetweets()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipDTO#AllReplies">
            <summary>Sets the stub of IRelationshipDTO.get_AllReplies()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipDTO#Blocking">
            <summary>Sets the stub of IRelationshipDTO.get_Blocking()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipDTO#CanSendDirectMessage">
            <summary>Sets the stub of IRelationshipDTO.get_CanSendDirectMessage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipDTO#FollowedBy">
            <summary>Sets the stub of IRelationshipDTO.get_FollowedBy()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipDTO#Following">
            <summary>Sets the stub of IRelationshipDTO.get_Following()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipDTO#MarkedSpam">
            <summary>Sets the stub of IRelationshipDTO.get_MarkedSpam()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipDTO#NotificationsEnabled">
            <summary>Sets the stub of IRelationshipDTO.get_NotificationsEnabled()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipDTO#SourceId">
            <summary>Sets the stub of IRelationshipDTO.get_SourceId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipDTO#SourceIdStr">
            <summary>Sets the stub of IRelationshipDTO.get_SourceIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipDTO#SourceScreenName">
            <summary>Sets the stub of IRelationshipDTO.get_SourceScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipDTO#TargetId">
            <summary>Sets the stub of IRelationshipDTO.get_TargetId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipDTO#TargetIdStr">
            <summary>Sets the stub of IRelationshipDTO.get_TargetIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipDTO#TargetScreenName">
            <summary>Sets the stub of IRelationshipDTO.get_TargetScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipDTO#WantRetweets">
            <summary>Sets the stub of IRelationshipDTO.get_WantRetweets()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.IRelationshipStateDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.#ctor">
            <summary>Initializes a new instance of type StubIRelationshipStateDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.AttachBackingFieldToConnections">
            <summary>Attaches delegates to emulate StubIRelationshipStateDTO.Connections as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.AttachBackingFieldToFollowedBy">
            <summary>Attaches delegates to emulate StubIRelationshipStateDTO.FollowedBy as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.AttachBackingFieldToFollowing">
            <summary>Attaches delegates to emulate StubIRelationshipStateDTO.Following as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.AttachBackingFieldToFollowingRequested">
            <summary>Attaches delegates to emulate StubIRelationshipStateDTO.FollowingRequested as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.AttachBackingFieldToTargetUserId">
            <summary>Attaches delegates to emulate StubIRelationshipStateDTO.TargetUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.AttachBackingFieldToTargetUserIdStr">
            <summary>Attaches delegates to emulate StubIRelationshipStateDTO.TargetUserIdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.AttachBackingFieldToTargetUserName">
            <summary>Attaches delegates to emulate StubIRelationshipStateDTO.TargetUserName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.AttachBackingFieldToTargetUserScreenName">
            <summary>Attaches delegates to emulate StubIRelationshipStateDTO.TargetUserScreenName as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.ConnectionsGet">
            <summary>Sets the stub of IRelationshipStateDTO.get_Connections()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.ConnectionsSetListOfString">
            <summary>Sets the stub of IRelationshipStateDTO.set_Connections(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.FollowedByGet">
            <summary>Sets the stub of IRelationshipStateDTO.get_FollowedBy()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.FollowedBySetBoolean">
            <summary>Sets the stub of IRelationshipStateDTO.set_FollowedBy(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.FollowingGet">
            <summary>Sets the stub of IRelationshipStateDTO.get_Following()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.FollowingRequestedGet">
            <summary>Sets the stub of IRelationshipStateDTO.get_FollowingRequested()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.FollowingRequestedSetBoolean">
            <summary>Sets the stub of IRelationshipStateDTO.set_FollowingRequested(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.FollowingSetBoolean">
            <summary>Sets the stub of IRelationshipStateDTO.set_Following(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.TargetUserIdGet">
            <summary>Sets the stub of IRelationshipStateDTO.get_TargetUserId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.TargetUserIdSetInt64">
            <summary>Sets the stub of IRelationshipStateDTO.set_TargetUserId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.TargetUserIdStrGet">
            <summary>Sets the stub of IRelationshipStateDTO.get_TargetUserIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.TargetUserIdStrSetString">
            <summary>Sets the stub of IRelationshipStateDTO.set_TargetUserIdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.TargetUserNameGet">
            <summary>Sets the stub of IRelationshipStateDTO.get_TargetUserName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.TargetUserNameSetString">
            <summary>Sets the stub of IRelationshipStateDTO.set_TargetUserName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.TargetUserScreenNameGet">
            <summary>Sets the stub of IRelationshipStateDTO.get_TargetUserScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.TargetUserScreenNameSetString">
            <summary>Sets the stub of IRelationshipStateDTO.set_TargetUserScreenName(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipStateDTO#Connections">
            <summary>Sets the stub of IRelationshipStateDTO.get_Connections()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipStateDTO#FollowedBy">
            <summary>Sets the stub of IRelationshipStateDTO.get_FollowedBy()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipStateDTO#Following">
            <summary>Sets the stub of IRelationshipStateDTO.get_Following()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipStateDTO#FollowingRequested">
            <summary>Sets the stub of IRelationshipStateDTO.get_FollowingRequested()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipStateDTO#TargetUserId">
            <summary>Sets the stub of IRelationshipStateDTO.get_TargetUserId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipStateDTO#TargetUserIdStr">
            <summary>Sets the stub of IRelationshipStateDTO.get_TargetUserIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipStateDTO#TargetUserName">
            <summary>Sets the stub of IRelationshipStateDTO.get_TargetUserName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIRelationshipStateDTO.tc::Tweetinvi#Core#Interfaces#DTO#IRelationshipStateDTO#TargetUserScreenName">
            <summary>Sets the stub of IRelationshipStateDTO.get_TargetUserScreenName()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.ISavedSearchDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.#ctor">
            <summary>Initializes a new instance of type StubISavedSearchDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.AttachBackingFieldToCreatedAt">
            <summary>Attaches delegates to emulate StubISavedSearchDTO.CreatedAt as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubISavedSearchDTO.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.AttachBackingFieldToIdStr">
            <summary>Attaches delegates to emulate StubISavedSearchDTO.IdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubISavedSearchDTO.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.AttachBackingFieldToQuery">
            <summary>Attaches delegates to emulate StubISavedSearchDTO.Query as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.CreatedAtGet">
            <summary>Sets the stub of ISavedSearchDTO.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.CreatedAtSetDateTime">
            <summary>Sets the stub of ISavedSearchDTO.set_CreatedAt(DateTime value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.IdGet">
            <summary>Sets the stub of ISavedSearchDTO.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.IdSetInt64">
            <summary>Sets the stub of ISavedSearchDTO.set_Id(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.IdStrGet">
            <summary>Sets the stub of ISavedSearchDTO.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.IdStrSetString">
            <summary>Sets the stub of ISavedSearchDTO.set_IdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.NameGet">
            <summary>Sets the stub of ISavedSearchDTO.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.NameSetString">
            <summary>Sets the stub of ISavedSearchDTO.set_Name(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.QueryGet">
            <summary>Sets the stub of ISavedSearchDTO.get_Query()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.QuerySetString">
            <summary>Sets the stub of ISavedSearchDTO.set_Query(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.tc::Tweetinvi#Core#Interfaces#DTO#ISavedSearchDTO#CreatedAt">
            <summary>Sets the stub of ISavedSearchDTO.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.tc::Tweetinvi#Core#Interfaces#DTO#ISavedSearchDTO#Id">
            <summary>Sets the stub of ISavedSearchDTO.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.tc::Tweetinvi#Core#Interfaces#DTO#ISavedSearchDTO#IdStr">
            <summary>Sets the stub of ISavedSearchDTO.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.tc::Tweetinvi#Core#Interfaces#DTO#ISavedSearchDTO#Name">
            <summary>Sets the stub of ISavedSearchDTO.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISavedSearchDTO.tc::Tweetinvi#Core#Interfaces#DTO#ISavedSearchDTO#Query">
            <summary>Sets the stub of ISavedSearchDTO.get_Query()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.ISearchMetadata</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.#ctor">
            <summary>Initializes a new instance of type StubISearchMetadata</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.CompletedInGet">
            <summary>Sets the stub of ISearchMetadata.get_CompletedIn()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.CountGet">
            <summary>Sets the stub of ISearchMetadata.get_Count()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.MaxIdGet">
            <summary>Sets the stub of ISearchMetadata.get_MaxId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.MaxIdStrGet">
            <summary>Sets the stub of ISearchMetadata.get_MaxIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.NextResultsGet">
            <summary>Sets the stub of ISearchMetadata.get_NextResults()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.QueryGet">
            <summary>Sets the stub of ISearchMetadata.get_Query()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.RefreshURLGet">
            <summary>Sets the stub of ISearchMetadata.get_RefreshURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.SinceIdGet">
            <summary>Sets the stub of ISearchMetadata.get_SinceId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.SinceIdStrGet">
            <summary>Sets the stub of ISearchMetadata.get_SinceIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.tc::Tweetinvi#Core#Interfaces#DTO#ISearchMetadata#CompletedIn">
            <summary>Sets the stub of ISearchMetadata.get_CompletedIn()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.tc::Tweetinvi#Core#Interfaces#DTO#ISearchMetadata#Count">
            <summary>Sets the stub of ISearchMetadata.get_Count()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.tc::Tweetinvi#Core#Interfaces#DTO#ISearchMetadata#MaxId">
            <summary>Sets the stub of ISearchMetadata.get_MaxId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.tc::Tweetinvi#Core#Interfaces#DTO#ISearchMetadata#MaxIdStr">
            <summary>Sets the stub of ISearchMetadata.get_MaxIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.tc::Tweetinvi#Core#Interfaces#DTO#ISearchMetadata#NextResults">
            <summary>Sets the stub of ISearchMetadata.get_NextResults()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.tc::Tweetinvi#Core#Interfaces#DTO#ISearchMetadata#Query">
            <summary>Sets the stub of ISearchMetadata.get_Query()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.tc::Tweetinvi#Core#Interfaces#DTO#ISearchMetadata#RefreshURL">
            <summary>Sets the stub of ISearchMetadata.get_RefreshURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.tc::Tweetinvi#Core#Interfaces#DTO#ISearchMetadata#SinceId">
            <summary>Sets the stub of ISearchMetadata.get_SinceId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchMetadata.tc::Tweetinvi#Core#Interfaces#DTO#ISearchMetadata#SinceIdStr">
            <summary>Sets the stub of ISearchMetadata.get_SinceIdStr()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchResultsDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.ISearchResultsDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchResultsDTO.#ctor">
            <summary>Initializes a new instance of type StubISearchResultsDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchResultsDTO.AttachBackingFieldToMatchingTweetDTOs">
            <summary>Attaches delegates to emulate StubISearchResultsDTO.MatchingTweetDTOs as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchResultsDTO.AttachBackingFieldToSearchMetadata">
            <summary>Attaches delegates to emulate StubISearchResultsDTO.SearchMetadata as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchResultsDTO.AttachBackingFieldToTweetDTOs">
            <summary>Attaches delegates to emulate StubISearchResultsDTO.TweetDTOs as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchResultsDTO.MatchingTweetDTOsGet">
            <summary>Sets the stub of ISearchResultsDTO.get_MatchingTweetDTOs()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchResultsDTO.MatchingTweetDTOsSetITweetWithSearchMetadataDTOArray">
            <summary>Sets the stub of ISearchResultsDTO.set_MatchingTweetDTOs(ITweetWithSearchMetadataDTO[] value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchResultsDTO.SearchMetadataGet">
            <summary>Sets the stub of ISearchResultsDTO.get_SearchMetadata()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchResultsDTO.SearchMetadataSetISearchMetadata">
            <summary>Sets the stub of ISearchResultsDTO.set_SearchMetadata(ISearchMetadata value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchResultsDTO.TweetDTOsGet">
            <summary>Sets the stub of ISearchResultsDTO.get_TweetDTOs()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchResultsDTO.TweetDTOsSetITweetWithSearchMetadataDTOArray">
            <summary>Sets the stub of ISearchResultsDTO.set_TweetDTOs(ITweetWithSearchMetadataDTO[] value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchResultsDTO.tc::Tweetinvi#Core#Interfaces#DTO#ISearchResultsDTO#MatchingTweetDTOs">
            <summary>Sets the stub of ISearchResultsDTO.get_MatchingTweetDTOs()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchResultsDTO.tc::Tweetinvi#Core#Interfaces#DTO#ISearchResultsDTO#SearchMetadata">
            <summary>Sets the stub of ISearchResultsDTO.get_SearchMetadata()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubISearchResultsDTO.tc::Tweetinvi#Core#Interfaces#DTO#ISearchResultsDTO#TweetDTOs">
            <summary>Sets the stub of ISearchResultsDTO.get_TweetDTOs()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.ITweetDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.#ctor">
            <summary>Initializes a new instance of type StubITweetDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToContributors">
            <summary>Attaches delegates to emulate StubITweetDTO.Contributors as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToContributorsIds">
            <summary>Attaches delegates to emulate StubITweetDTO.ContributorsIds as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToCoordinates">
            <summary>Attaches delegates to emulate StubITweetDTO.Coordinates as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToCreatedAt">
            <summary>Attaches delegates to emulate StubITweetDTO.CreatedAt as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToCreator">
            <summary>Attaches delegates to emulate StubITweetDTO.Creator as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToCurrentUserRetweetIdentifier">
            <summary>Attaches delegates to emulate StubITweetDTO.CurrentUserRetweetIdentifier as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToEntities">
            <summary>Attaches delegates to emulate StubITweetDTO.Entities as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToExtendedEntities">
            <summary>Attaches delegates to emulate StubITweetDTO.ExtendedEntities as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToFavouriteCount">
            <summary>Attaches delegates to emulate StubITweetDTO.FavouriteCount as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToFavourited">
            <summary>Attaches delegates to emulate StubITweetDTO.Favourited as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToFilterLevel">
            <summary>Attaches delegates to emulate StubITweetDTO.FilterLevel as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubITweetDTO.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToIdStr">
            <summary>Attaches delegates to emulate StubITweetDTO.IdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToInReplyToScreenName">
            <summary>Attaches delegates to emulate StubITweetDTO.InReplyToScreenName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToInReplyToStatusId">
            <summary>Attaches delegates to emulate StubITweetDTO.InReplyToStatusId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToInReplyToStatusIdStr">
            <summary>Attaches delegates to emulate StubITweetDTO.InReplyToStatusIdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToInReplyToUserId">
            <summary>Attaches delegates to emulate StubITweetDTO.InReplyToUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToInReplyToUserIdStr">
            <summary>Attaches delegates to emulate StubITweetDTO.InReplyToUserIdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToIsTweetDestroyed">
            <summary>Attaches delegates to emulate StubITweetDTO.IsTweetDestroyed as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToIsTweetPublished">
            <summary>Attaches delegates to emulate StubITweetDTO.IsTweetPublished as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToLanguage">
            <summary>Attaches delegates to emulate StubITweetDTO.Language as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToMediasToPublish">
            <summary>Attaches delegates to emulate StubITweetDTO.MediasToPublish as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToPlace">
            <summary>Attaches delegates to emulate StubITweetDTO.Place as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToPlaceId">
            <summary>Attaches delegates to emulate StubITweetDTO.PlaceId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToPossiblySensitive">
            <summary>Attaches delegates to emulate StubITweetDTO.PossiblySensitive as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToRetweetCount">
            <summary>Attaches delegates to emulate StubITweetDTO.RetweetCount as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToRetweeted">
            <summary>Attaches delegates to emulate StubITweetDTO.Retweeted as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToRetweetedTweetDTO">
            <summary>Attaches delegates to emulate StubITweetDTO.RetweetedTweetDTO as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToScopes">
            <summary>Attaches delegates to emulate StubITweetDTO.Scopes as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubITweetDTO.Source as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubITweetDTO.Text as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToTruncated">
            <summary>Attaches delegates to emulate StubITweetDTO.Truncated as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToWithheldCopyright">
            <summary>Attaches delegates to emulate StubITweetDTO.WithheldCopyright as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToWithheldInCountries">
            <summary>Attaches delegates to emulate StubITweetDTO.WithheldInCountries as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.AttachBackingFieldToWithheldScope">
            <summary>Attaches delegates to emulate StubITweetDTO.WithheldScope as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.ContributorsGet">
            <summary>Sets the stub of ITweetDTO.get_Contributors()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.ContributorsIdsGet">
            <summary>Sets the stub of ITweetDTO.get_ContributorsIds()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.ContributorsIdsSetInt32Array">
            <summary>Sets the stub of ITweetDTO.set_ContributorsIds(Int32[] value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.ContributorsSetIEnumerableOfInt64">
            <summary>Sets the stub of ITweetDTO.set_Contributors(IEnumerable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.CoordinatesGet">
            <summary>Sets the stub of ITweetDTO.get_Coordinates()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.CoordinatesSetICoordinates">
            <summary>Sets the stub of ITweetDTO.set_Coordinates(ICoordinates value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.CreatedAtGet">
            <summary>Sets the stub of ITweetDTO.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.CreatedAtSetDateTime">
            <summary>Sets the stub of ITweetDTO.set_CreatedAt(DateTime value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.CreatorGet">
            <summary>Sets the stub of ITweetDTO.get_Creator()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.CreatorSetIUserDTO">
            <summary>Sets the stub of ITweetDTO.set_Creator(IUserDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.CurrentUserRetweetIdentifierGet">
            <summary>Sets the stub of ITweetDTO.get_CurrentUserRetweetIdentifier()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.CurrentUserRetweetIdentifierSetITweetIdentifier">
            <summary>Sets the stub of ITweetDTO.set_CurrentUserRetweetIdentifier(ITweetIdentifier value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.EntitiesGet">
            <summary>Sets the stub of ITweetDTO.get_Entities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.EntitiesSetITweetEntities">
            <summary>Sets the stub of ITweetDTO.set_Entities(ITweetEntities value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.ExtendedEntitiesGet">
            <summary>Sets the stub of ITweetDTO.get_ExtendedEntities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.ExtendedEntitiesSetITweetEntities">
            <summary>Sets the stub of ITweetDTO.set_ExtendedEntities(ITweetEntities value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.FavouriteCountGet">
            <summary>Sets the stub of ITweetDTO.get_FavouriteCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.FavouriteCountSetInt32">
            <summary>Sets the stub of ITweetDTO.set_FavouriteCount(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.FavouritedGet">
            <summary>Sets the stub of ITweetDTO.get_Favourited()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.FavouritedSetBoolean">
            <summary>Sets the stub of ITweetDTO.set_Favourited(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.FilterLevelGet">
            <summary>Sets the stub of ITweetDTO.get_FilterLevel()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.FilterLevelSetString">
            <summary>Sets the stub of ITweetDTO.set_FilterLevel(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.IdGet">
            <summary>Sets the stub of ITweetDTO.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.IdSetInt64">
            <summary>Sets the stub of ITweetDTO.set_Id(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.IdStrGet">
            <summary>Sets the stub of ITweetDTO.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.IdStrSetString">
            <summary>Sets the stub of ITweetDTO.set_IdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.InReplyToScreenNameGet">
            <summary>Sets the stub of ITweetDTO.get_InReplyToScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.InReplyToScreenNameSetString">
            <summary>Sets the stub of ITweetDTO.set_InReplyToScreenName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.InReplyToStatusIdGet">
            <summary>Sets the stub of ITweetDTO.get_InReplyToStatusId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.InReplyToStatusIdSetNullableOfInt64">
            <summary>Sets the stub of ITweetDTO.set_InReplyToStatusId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.InReplyToStatusIdStrGet">
            <summary>Sets the stub of ITweetDTO.get_InReplyToStatusIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.InReplyToStatusIdStrSetString">
            <summary>Sets the stub of ITweetDTO.set_InReplyToStatusIdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.InReplyToUserIdGet">
            <summary>Sets the stub of ITweetDTO.get_InReplyToUserId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.InReplyToUserIdSetNullableOfInt64">
            <summary>Sets the stub of ITweetDTO.set_InReplyToUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.InReplyToUserIdStrGet">
            <summary>Sets the stub of ITweetDTO.get_InReplyToUserIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.InReplyToUserIdStrSetString">
            <summary>Sets the stub of ITweetDTO.set_InReplyToUserIdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.IsTweetDestroyedGet">
            <summary>Sets the stub of ITweetDTO.get_IsTweetDestroyed()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.IsTweetDestroyedSetBoolean">
            <summary>Sets the stub of ITweetDTO.set_IsTweetDestroyed(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.IsTweetPublishedGet">
            <summary>Sets the stub of ITweetDTO.get_IsTweetPublished()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.IsTweetPublishedSetBoolean">
            <summary>Sets the stub of ITweetDTO.set_IsTweetPublished(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.LanguageGet">
            <summary>Sets the stub of ITweetDTO.get_Language()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.LanguageSetLanguage">
            <summary>Sets the stub of ITweetDTO.set_Language(Language value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.MediasToPublishGet">
            <summary>Sets the stub of ITweetDTO.get_MediasToPublish()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.MediasToPublishSetListOfIMedia">
            <summary>Sets the stub of ITweetDTO.set_MediasToPublish(List`1&lt;IMedia&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.PlaceGet">
            <summary>Sets the stub of ITweetDTO.get_Place()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.PlaceIdGet">
            <summary>Sets the stub of ITweetDTO.get_PlaceId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.PlaceIdSetString">
            <summary>Sets the stub of ITweetDTO.set_PlaceId(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.PlaceSetIPlace">
            <summary>Sets the stub of ITweetDTO.set_Place(IPlace value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.PossiblySensitiveGet">
            <summary>Sets the stub of ITweetDTO.get_PossiblySensitive()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.PossiblySensitiveSetBoolean">
            <summary>Sets the stub of ITweetDTO.set_PossiblySensitive(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.RetweetCountGet">
            <summary>Sets the stub of ITweetDTO.get_RetweetCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.RetweetCountSetInt32">
            <summary>Sets the stub of ITweetDTO.set_RetweetCount(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.RetweetedGet">
            <summary>Sets the stub of ITweetDTO.get_Retweeted()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.RetweetedSetBoolean">
            <summary>Sets the stub of ITweetDTO.set_Retweeted(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.RetweetedTweetDTOGet">
            <summary>Sets the stub of ITweetDTO.get_RetweetedTweetDTO()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.RetweetedTweetDTOSetITweetDTO">
            <summary>Sets the stub of ITweetDTO.set_RetweetedTweetDTO(ITweetDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.ScopesGet">
            <summary>Sets the stub of ITweetDTO.get_Scopes()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.ScopesSetDictionaryOfStringObject">
            <summary>Sets the stub of ITweetDTO.set_Scopes(Dictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.SourceGet">
            <summary>Sets the stub of ITweetDTO.get_Source()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.SourceSetString">
            <summary>Sets the stub of ITweetDTO.set_Source(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.TextGet">
            <summary>Sets the stub of ITweetDTO.get_Text()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.TextSetString">
            <summary>Sets the stub of ITweetDTO.set_Text(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.TruncatedGet">
            <summary>Sets the stub of ITweetDTO.get_Truncated()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.TruncatedSetBoolean">
            <summary>Sets the stub of ITweetDTO.set_Truncated(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.WithheldCopyrightGet">
            <summary>Sets the stub of ITweetDTO.get_WithheldCopyright()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.WithheldCopyrightSetBoolean">
            <summary>Sets the stub of ITweetDTO.set_WithheldCopyright(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.WithheldInCountriesGet">
            <summary>Sets the stub of ITweetDTO.get_WithheldInCountries()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.WithheldInCountriesSetIEnumerableOfString">
            <summary>Sets the stub of ITweetDTO.set_WithheldInCountries(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.WithheldScopeGet">
            <summary>Sets the stub of ITweetDTO.get_WithheldScope()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.WithheldScopeSetString">
            <summary>Sets the stub of ITweetDTO.set_WithheldScope(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Contributors">
            <summary>Sets the stub of ITweetDTO.get_Contributors()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#ContributorsIds">
            <summary>Sets the stub of ITweetDTO.get_ContributorsIds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Coordinates">
            <summary>Sets the stub of ITweetDTO.get_Coordinates()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#CreatedAt">
            <summary>Sets the stub of ITweetDTO.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Creator">
            <summary>Sets the stub of ITweetDTO.get_Creator()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#CurrentUserRetweetIdentifier">
            <summary>Sets the stub of ITweetDTO.get_CurrentUserRetweetIdentifier()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Entities">
            <summary>Sets the stub of ITweetDTO.get_Entities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#ExtendedEntities">
            <summary>Sets the stub of ITweetDTO.get_ExtendedEntities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#FavouriteCount">
            <summary>Sets the stub of ITweetDTO.get_FavouriteCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Favourited">
            <summary>Sets the stub of ITweetDTO.get_Favourited()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#FilterLevel">
            <summary>Sets the stub of ITweetDTO.get_FilterLevel()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Id">
            <summary>Sets the stub of ITweetDTO.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#IdStr">
            <summary>Sets the stub of ITweetDTO.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#InReplyToScreenName">
            <summary>Sets the stub of ITweetDTO.get_InReplyToScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#InReplyToStatusId">
            <summary>Sets the stub of ITweetDTO.get_InReplyToStatusId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#InReplyToStatusIdStr">
            <summary>Sets the stub of ITweetDTO.get_InReplyToStatusIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#InReplyToUserId">
            <summary>Sets the stub of ITweetDTO.get_InReplyToUserId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#InReplyToUserIdStr">
            <summary>Sets the stub of ITweetDTO.get_InReplyToUserIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#IsTweetDestroyed">
            <summary>Sets the stub of ITweetDTO.get_IsTweetDestroyed()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#IsTweetPublished">
            <summary>Sets the stub of ITweetDTO.get_IsTweetPublished()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Language">
            <summary>Sets the stub of ITweetDTO.get_Language()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#MediasToPublish">
            <summary>Sets the stub of ITweetDTO.get_MediasToPublish()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Place">
            <summary>Sets the stub of ITweetDTO.get_Place()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#PlaceId">
            <summary>Sets the stub of ITweetDTO.get_PlaceId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#PossiblySensitive">
            <summary>Sets the stub of ITweetDTO.get_PossiblySensitive()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#RetweetCount">
            <summary>Sets the stub of ITweetDTO.get_RetweetCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Retweeted">
            <summary>Sets the stub of ITweetDTO.get_Retweeted()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#RetweetedTweetDTO">
            <summary>Sets the stub of ITweetDTO.get_RetweetedTweetDTO()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Scopes">
            <summary>Sets the stub of ITweetDTO.get_Scopes()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Source">
            <summary>Sets the stub of ITweetDTO.get_Source()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Text">
            <summary>Sets the stub of ITweetDTO.get_Text()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Truncated">
            <summary>Sets the stub of ITweetDTO.get_Truncated()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#WithheldCopyright">
            <summary>Sets the stub of ITweetDTO.get_WithheldCopyright()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#WithheldInCountries">
            <summary>Sets the stub of ITweetDTO.get_WithheldInCountries()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#WithheldScope">
            <summary>Sets the stub of ITweetDTO.get_WithheldScope()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDeletedInfo">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.ITweetDeletedInfo</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDeletedInfo.#ctor">
            <summary>Initializes a new instance of type StubITweetDeletedInfo</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDeletedInfo.IdGet">
            <summary>Sets the stub of ITweetDeletedInfo.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDeletedInfo.IdStrGet">
            <summary>Sets the stub of ITweetDeletedInfo.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDeletedInfo.UserIdGet">
            <summary>Sets the stub of ITweetDeletedInfo.get_UserId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDeletedInfo.UserIdStrGet">
            <summary>Sets the stub of ITweetDeletedInfo.get_UserIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDeletedInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDeletedInfo#Id">
            <summary>Sets the stub of ITweetDeletedInfo.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDeletedInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDeletedInfo#IdStr">
            <summary>Sets the stub of ITweetDeletedInfo.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDeletedInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDeletedInfo#UserId">
            <summary>Sets the stub of ITweetDeletedInfo.get_UserId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetDeletedInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDeletedInfo#UserIdStr">
            <summary>Sets the stub of ITweetDeletedInfo.get_UserIdStr()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetFromSearchMetadata">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.ITweetFromSearchMetadata</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetFromSearchMetadata.#ctor">
            <summary>Initializes a new instance of type StubITweetFromSearchMetadata</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetFromSearchMetadata.ISOLanguageCodeGet">
            <summary>Sets the stub of ITweetFromSearchMetadata.get_ISOLanguageCode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetFromSearchMetadata.ResultTypeGet">
            <summary>Sets the stub of ITweetFromSearchMetadata.get_ResultType()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetFromSearchMetadata.tc::Tweetinvi#Core#Interfaces#DTO#ITweetFromSearchMetadata#ISOLanguageCode">
            <summary>Sets the stub of ITweetFromSearchMetadata.get_ISOLanguageCode()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetFromSearchMetadata.tc::Tweetinvi#Core#Interfaces#DTO#ITweetFromSearchMetadata#ResultType">
            <summary>Sets the stub of ITweetFromSearchMetadata.get_ResultType()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.ITweetListDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.#ctor">
            <summary>Initializes a new instance of type StubITweetListDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.AttachBackingFieldToCreatedAt">
            <summary>Attaches delegates to emulate StubITweetListDTO.CreatedAt as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.AttachBackingFieldToCreator">
            <summary>Attaches delegates to emulate StubITweetListDTO.Creator as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubITweetListDTO.Description as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.AttachBackingFieldToFollowing">
            <summary>Attaches delegates to emulate StubITweetListDTO.Following as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.AttachBackingFieldToFullName">
            <summary>Attaches delegates to emulate StubITweetListDTO.FullName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubITweetListDTO.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.AttachBackingFieldToIdStr">
            <summary>Attaches delegates to emulate StubITweetListDTO.IdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.AttachBackingFieldToMemberCount">
            <summary>Attaches delegates to emulate StubITweetListDTO.MemberCount as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubITweetListDTO.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.AttachBackingFieldToPrivacyMode">
            <summary>Attaches delegates to emulate StubITweetListDTO.PrivacyMode as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.AttachBackingFieldToSlug">
            <summary>Attaches delegates to emulate StubITweetListDTO.Slug as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.AttachBackingFieldToSubscriberCount">
            <summary>Attaches delegates to emulate StubITweetListDTO.SubscriberCount as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.AttachBackingFieldToUri">
            <summary>Attaches delegates to emulate StubITweetListDTO.Uri as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.CreatedAtGet">
            <summary>Sets the stub of ITweetListDTO.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.CreatedAtSetDateTime">
            <summary>Sets the stub of ITweetListDTO.set_CreatedAt(DateTime value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.CreatorGet">
            <summary>Sets the stub of ITweetListDTO.get_Creator()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.CreatorSetIUserDTO">
            <summary>Sets the stub of ITweetListDTO.set_Creator(IUserDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.DescriptionGet">
            <summary>Sets the stub of ITweetListDTO.get_Description()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.DescriptionSetString">
            <summary>Sets the stub of ITweetListDTO.set_Description(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.FollowingGet">
            <summary>Sets the stub of ITweetListDTO.get_Following()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.FollowingSetBoolean">
            <summary>Sets the stub of ITweetListDTO.set_Following(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.FullNameGet">
            <summary>Sets the stub of ITweetListDTO.get_FullName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.FullNameSetString">
            <summary>Sets the stub of ITweetListDTO.set_FullName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.IdGet">
            <summary>Sets the stub of ITweetListDTO.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.IdSetInt64">
            <summary>Sets the stub of ITweetListDTO.set_Id(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.IdStrGet">
            <summary>Sets the stub of ITweetListDTO.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.IdStrSetString">
            <summary>Sets the stub of ITweetListDTO.set_IdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.MemberCountGet">
            <summary>Sets the stub of ITweetListDTO.get_MemberCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.MemberCountSetInt32">
            <summary>Sets the stub of ITweetListDTO.set_MemberCount(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.NameGet">
            <summary>Sets the stub of ITweetListDTO.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.NameSetString">
            <summary>Sets the stub of ITweetListDTO.set_Name(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.PrivacyModeGet">
            <summary>Sets the stub of ITweetListDTO.get_PrivacyMode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.PrivacyModeSetPrivacyMode">
            <summary>Sets the stub of ITweetListDTO.set_PrivacyMode(PrivacyMode value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.SlugGet">
            <summary>Sets the stub of ITweetListDTO.get_Slug()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.SlugSetString">
            <summary>Sets the stub of ITweetListDTO.set_Slug(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.SubscriberCountGet">
            <summary>Sets the stub of ITweetListDTO.get_SubscriberCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.SubscriberCountSetInt32">
            <summary>Sets the stub of ITweetListDTO.set_SubscriberCount(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.UriGet">
            <summary>Sets the stub of ITweetListDTO.get_Uri()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.UriSetString">
            <summary>Sets the stub of ITweetListDTO.set_Uri(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetListDTO#CreatedAt">
            <summary>Sets the stub of ITweetListDTO.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetListDTO#Creator">
            <summary>Sets the stub of ITweetListDTO.get_Creator()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetListDTO#Description">
            <summary>Sets the stub of ITweetListDTO.get_Description()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetListDTO#Following">
            <summary>Sets the stub of ITweetListDTO.get_Following()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetListDTO#FullName">
            <summary>Sets the stub of ITweetListDTO.get_FullName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetListDTO#Id">
            <summary>Sets the stub of ITweetListDTO.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetListDTO#IdStr">
            <summary>Sets the stub of ITweetListDTO.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetListDTO#MemberCount">
            <summary>Sets the stub of ITweetListDTO.get_MemberCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetListDTO#Name">
            <summary>Sets the stub of ITweetListDTO.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetListDTO#PrivacyMode">
            <summary>Sets the stub of ITweetListDTO.get_PrivacyMode()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetListDTO#Slug">
            <summary>Sets the stub of ITweetListDTO.get_Slug()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetListDTO#SubscriberCount">
            <summary>Sets the stub of ITweetListDTO.get_SubscriberCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetListDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetListDTO#Uri">
            <summary>Sets the stub of ITweetListDTO.get_Uri()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationDeletedInfo">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.ITweetLocationDeletedInfo</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationDeletedInfo.#ctor">
            <summary>Initializes a new instance of type StubITweetLocationDeletedInfo</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationDeletedInfo.UpToStatusIdGet">
            <summary>Sets the stub of ITweetLocationDeletedInfo.get_UpToStatusId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationDeletedInfo.UpToStatusIdStrGet">
            <summary>Sets the stub of ITweetLocationDeletedInfo.get_UpToStatusIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationDeletedInfo.UserIdGet">
            <summary>Sets the stub of ITweetLocationDeletedInfo.get_UserId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationDeletedInfo.UserIdStrGet">
            <summary>Sets the stub of ITweetLocationDeletedInfo.get_UserIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationDeletedInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetLocationDeletedInfo#UpToStatusId">
            <summary>Sets the stub of ITweetLocationDeletedInfo.get_UpToStatusId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationDeletedInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetLocationDeletedInfo#UpToStatusIdStr">
            <summary>Sets the stub of ITweetLocationDeletedInfo.get_UpToStatusIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationDeletedInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetLocationDeletedInfo#UserId">
            <summary>Sets the stub of ITweetLocationDeletedInfo.get_UserId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationDeletedInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetLocationDeletedInfo#UserIdStr">
            <summary>Sets the stub of ITweetLocationDeletedInfo.get_UserIdStr()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationRemovedInfo">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.ITweetLocationRemovedInfo</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationRemovedInfo.#ctor">
            <summary>Initializes a new instance of type StubITweetLocationRemovedInfo</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationRemovedInfo.UpToStatusIdGet">
            <summary>Sets the stub of ITweetLocationRemovedInfo.get_UpToStatusId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationRemovedInfo.UpToStatusIdStrGet">
            <summary>Sets the stub of ITweetLocationRemovedInfo.get_UpToStatusIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationRemovedInfo.UserIdGet">
            <summary>Sets the stub of ITweetLocationRemovedInfo.get_UserId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationRemovedInfo.UserIdStrGet">
            <summary>Sets the stub of ITweetLocationRemovedInfo.get_UserIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationRemovedInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetLocationRemovedInfo#UpToStatusId">
            <summary>Sets the stub of ITweetLocationRemovedInfo.get_UpToStatusId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationRemovedInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetLocationRemovedInfo#UpToStatusIdStr">
            <summary>Sets the stub of ITweetLocationRemovedInfo.get_UpToStatusIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationRemovedInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetLocationRemovedInfo#UserId">
            <summary>Sets the stub of ITweetLocationRemovedInfo.get_UserId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetLocationRemovedInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetLocationRemovedInfo#UserIdStr">
            <summary>Sets the stub of ITweetLocationRemovedInfo.get_UserIdStr()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.ITweetWithSearchMetadataDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.#ctor">
            <summary>Initializes a new instance of type StubITweetWithSearchMetadataDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToContributors">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.Contributors as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToContributorsIds">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.ContributorsIds as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToCoordinates">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.Coordinates as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToCreatedAt">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.CreatedAt as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToCreator">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.Creator as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToCurrentUserRetweetIdentifier">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.CurrentUserRetweetIdentifier as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToEntities">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.Entities as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToExtendedEntities">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.ExtendedEntities as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToFavouriteCount">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.FavouriteCount as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToFavourited">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.Favourited as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToFilterLevel">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.FilterLevel as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToIdStr">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.IdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToInReplyToScreenName">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.InReplyToScreenName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToInReplyToStatusId">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.InReplyToStatusId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToInReplyToStatusIdStr">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.InReplyToStatusIdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToInReplyToUserId">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.InReplyToUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToInReplyToUserIdStr">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.InReplyToUserIdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToIsTweetDestroyed">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.IsTweetDestroyed as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToIsTweetPublished">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.IsTweetPublished as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToLanguage">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.Language as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToMediasToPublish">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.MediasToPublish as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToPlace">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.Place as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToPlaceId">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.PlaceId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToPossiblySensitive">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.PossiblySensitive as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToRetweetCount">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.RetweetCount as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToRetweeted">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.Retweeted as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToRetweetedTweetDTO">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.RetweetedTweetDTO as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToScopes">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.Scopes as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.Source as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.Text as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToTruncated">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.Truncated as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToWithheldCopyright">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.WithheldCopyright as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToWithheldInCountries">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.WithheldInCountries as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.AttachBackingFieldToWithheldScope">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadataDTO.WithheldScope as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.ContributorsGet">
            <summary>Sets the stub of ITweetDTO.get_Contributors()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.ContributorsIdsGet">
            <summary>Sets the stub of ITweetDTO.get_ContributorsIds()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.ContributorsIdsSetInt32Array">
            <summary>Sets the stub of ITweetDTO.set_ContributorsIds(Int32[] value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.ContributorsSetIEnumerableOfInt64">
            <summary>Sets the stub of ITweetDTO.set_Contributors(IEnumerable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.CoordinatesGet">
            <summary>Sets the stub of ITweetDTO.get_Coordinates()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.CoordinatesSetICoordinates">
            <summary>Sets the stub of ITweetDTO.set_Coordinates(ICoordinates value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.CreatedAtGet">
            <summary>Sets the stub of ITweetDTO.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.CreatedAtSetDateTime">
            <summary>Sets the stub of ITweetDTO.set_CreatedAt(DateTime value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.CreatorGet">
            <summary>Sets the stub of ITweetDTO.get_Creator()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.CreatorSetIUserDTO">
            <summary>Sets the stub of ITweetDTO.set_Creator(IUserDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.CurrentUserRetweetIdentifierGet">
            <summary>Sets the stub of ITweetDTO.get_CurrentUserRetweetIdentifier()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.CurrentUserRetweetIdentifierSetITweetIdentifier">
            <summary>Sets the stub of ITweetDTO.set_CurrentUserRetweetIdentifier(ITweetIdentifier value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.EntitiesGet">
            <summary>Sets the stub of ITweetDTO.get_Entities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.EntitiesSetITweetEntities">
            <summary>Sets the stub of ITweetDTO.set_Entities(ITweetEntities value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.ExtendedEntitiesGet">
            <summary>Sets the stub of ITweetDTO.get_ExtendedEntities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.ExtendedEntitiesSetITweetEntities">
            <summary>Sets the stub of ITweetDTO.set_ExtendedEntities(ITweetEntities value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.FavouriteCountGet">
            <summary>Sets the stub of ITweetDTO.get_FavouriteCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.FavouriteCountSetInt32">
            <summary>Sets the stub of ITweetDTO.set_FavouriteCount(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.FavouritedGet">
            <summary>Sets the stub of ITweetDTO.get_Favourited()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.FavouritedSetBoolean">
            <summary>Sets the stub of ITweetDTO.set_Favourited(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.FilterLevelGet">
            <summary>Sets the stub of ITweetDTO.get_FilterLevel()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.FilterLevelSetString">
            <summary>Sets the stub of ITweetDTO.set_FilterLevel(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.IdGet">
            <summary>Sets the stub of ITweetDTO.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.IdSetInt64">
            <summary>Sets the stub of ITweetDTO.set_Id(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.IdStrGet">
            <summary>Sets the stub of ITweetDTO.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.IdStrSetString">
            <summary>Sets the stub of ITweetDTO.set_IdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.InReplyToScreenNameGet">
            <summary>Sets the stub of ITweetDTO.get_InReplyToScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.InReplyToScreenNameSetString">
            <summary>Sets the stub of ITweetDTO.set_InReplyToScreenName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.InReplyToStatusIdGet">
            <summary>Sets the stub of ITweetDTO.get_InReplyToStatusId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.InReplyToStatusIdSetNullableOfInt64">
            <summary>Sets the stub of ITweetDTO.set_InReplyToStatusId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.InReplyToStatusIdStrGet">
            <summary>Sets the stub of ITweetDTO.get_InReplyToStatusIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.InReplyToStatusIdStrSetString">
            <summary>Sets the stub of ITweetDTO.set_InReplyToStatusIdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.InReplyToUserIdGet">
            <summary>Sets the stub of ITweetDTO.get_InReplyToUserId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.InReplyToUserIdSetNullableOfInt64">
            <summary>Sets the stub of ITweetDTO.set_InReplyToUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.InReplyToUserIdStrGet">
            <summary>Sets the stub of ITweetDTO.get_InReplyToUserIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.InReplyToUserIdStrSetString">
            <summary>Sets the stub of ITweetDTO.set_InReplyToUserIdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.IsTweetDestroyedGet">
            <summary>Sets the stub of ITweetDTO.get_IsTweetDestroyed()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.IsTweetDestroyedSetBoolean">
            <summary>Sets the stub of ITweetDTO.set_IsTweetDestroyed(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.IsTweetPublishedGet">
            <summary>Sets the stub of ITweetDTO.get_IsTweetPublished()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.IsTweetPublishedSetBoolean">
            <summary>Sets the stub of ITweetDTO.set_IsTweetPublished(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.LanguageGet">
            <summary>Sets the stub of ITweetDTO.get_Language()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.LanguageSetLanguage">
            <summary>Sets the stub of ITweetDTO.set_Language(Language value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.MediasToPublishGet">
            <summary>Sets the stub of ITweetDTO.get_MediasToPublish()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.MediasToPublishSetListOfIMedia">
            <summary>Sets the stub of ITweetDTO.set_MediasToPublish(List`1&lt;IMedia&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.PlaceGet">
            <summary>Sets the stub of ITweetDTO.get_Place()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.PlaceIdGet">
            <summary>Sets the stub of ITweetDTO.get_PlaceId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.PlaceIdSetString">
            <summary>Sets the stub of ITweetDTO.set_PlaceId(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.PlaceSetIPlace">
            <summary>Sets the stub of ITweetDTO.set_Place(IPlace value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.PossiblySensitiveGet">
            <summary>Sets the stub of ITweetDTO.get_PossiblySensitive()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.PossiblySensitiveSetBoolean">
            <summary>Sets the stub of ITweetDTO.set_PossiblySensitive(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.RetweetCountGet">
            <summary>Sets the stub of ITweetDTO.get_RetweetCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.RetweetCountSetInt32">
            <summary>Sets the stub of ITweetDTO.set_RetweetCount(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.RetweetedGet">
            <summary>Sets the stub of ITweetDTO.get_Retweeted()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.RetweetedSetBoolean">
            <summary>Sets the stub of ITweetDTO.set_Retweeted(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.RetweetedTweetDTOGet">
            <summary>Sets the stub of ITweetDTO.get_RetweetedTweetDTO()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.RetweetedTweetDTOSetITweetDTO">
            <summary>Sets the stub of ITweetDTO.set_RetweetedTweetDTO(ITweetDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.ScopesGet">
            <summary>Sets the stub of ITweetDTO.get_Scopes()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.ScopesSetDictionaryOfStringObject">
            <summary>Sets the stub of ITweetDTO.set_Scopes(Dictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.SourceGet">
            <summary>Sets the stub of ITweetDTO.get_Source()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.SourceSetString">
            <summary>Sets the stub of ITweetDTO.set_Source(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.TextGet">
            <summary>Sets the stub of ITweetDTO.get_Text()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.TextSetString">
            <summary>Sets the stub of ITweetDTO.set_Text(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.TruncatedGet">
            <summary>Sets the stub of ITweetDTO.get_Truncated()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.TruncatedSetBoolean">
            <summary>Sets the stub of ITweetDTO.set_Truncated(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.TweetFromSearchMetadataGet">
            <summary>Sets the stub of ITweetWithSearchMetadataDTO.get_TweetFromSearchMetadata()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.WithheldCopyrightGet">
            <summary>Sets the stub of ITweetDTO.get_WithheldCopyright()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.WithheldCopyrightSetBoolean">
            <summary>Sets the stub of ITweetDTO.set_WithheldCopyright(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.WithheldInCountriesGet">
            <summary>Sets the stub of ITweetDTO.get_WithheldInCountries()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.WithheldInCountriesSetIEnumerableOfString">
            <summary>Sets the stub of ITweetDTO.set_WithheldInCountries(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.WithheldScopeGet">
            <summary>Sets the stub of ITweetDTO.get_WithheldScope()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.WithheldScopeSetString">
            <summary>Sets the stub of ITweetDTO.set_WithheldScope(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Contributors">
            <summary>Sets the stub of ITweetDTO.get_Contributors()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#ContributorsIds">
            <summary>Sets the stub of ITweetDTO.get_ContributorsIds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Coordinates">
            <summary>Sets the stub of ITweetDTO.get_Coordinates()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#CreatedAt">
            <summary>Sets the stub of ITweetDTO.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Creator">
            <summary>Sets the stub of ITweetDTO.get_Creator()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#CurrentUserRetweetIdentifier">
            <summary>Sets the stub of ITweetDTO.get_CurrentUserRetweetIdentifier()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Entities">
            <summary>Sets the stub of ITweetDTO.get_Entities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#ExtendedEntities">
            <summary>Sets the stub of ITweetDTO.get_ExtendedEntities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#FavouriteCount">
            <summary>Sets the stub of ITweetDTO.get_FavouriteCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Favourited">
            <summary>Sets the stub of ITweetDTO.get_Favourited()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#FilterLevel">
            <summary>Sets the stub of ITweetDTO.get_FilterLevel()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Id">
            <summary>Sets the stub of ITweetDTO.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#IdStr">
            <summary>Sets the stub of ITweetDTO.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#InReplyToScreenName">
            <summary>Sets the stub of ITweetDTO.get_InReplyToScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#InReplyToStatusId">
            <summary>Sets the stub of ITweetDTO.get_InReplyToStatusId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#InReplyToStatusIdStr">
            <summary>Sets the stub of ITweetDTO.get_InReplyToStatusIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#InReplyToUserId">
            <summary>Sets the stub of ITweetDTO.get_InReplyToUserId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#InReplyToUserIdStr">
            <summary>Sets the stub of ITweetDTO.get_InReplyToUserIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#IsTweetDestroyed">
            <summary>Sets the stub of ITweetDTO.get_IsTweetDestroyed()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#IsTweetPublished">
            <summary>Sets the stub of ITweetDTO.get_IsTweetPublished()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Language">
            <summary>Sets the stub of ITweetDTO.get_Language()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#MediasToPublish">
            <summary>Sets the stub of ITweetDTO.get_MediasToPublish()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Place">
            <summary>Sets the stub of ITweetDTO.get_Place()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#PlaceId">
            <summary>Sets the stub of ITweetDTO.get_PlaceId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#PossiblySensitive">
            <summary>Sets the stub of ITweetDTO.get_PossiblySensitive()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#RetweetCount">
            <summary>Sets the stub of ITweetDTO.get_RetweetCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Retweeted">
            <summary>Sets the stub of ITweetDTO.get_Retweeted()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#RetweetedTweetDTO">
            <summary>Sets the stub of ITweetDTO.get_RetweetedTweetDTO()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Scopes">
            <summary>Sets the stub of ITweetDTO.get_Scopes()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Source">
            <summary>Sets the stub of ITweetDTO.get_Source()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Text">
            <summary>Sets the stub of ITweetDTO.get_Text()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#Truncated">
            <summary>Sets the stub of ITweetDTO.get_Truncated()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetWithSearchMetadataDTO#TweetFromSearchMetadata">
            <summary>Sets the stub of ITweetWithSearchMetadataDTO.get_TweetFromSearchMetadata()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#WithheldCopyright">
            <summary>Sets the stub of ITweetDTO.get_WithheldCopyright()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#WithheldInCountries">
            <summary>Sets the stub of ITweetDTO.get_WithheldInCountries()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWithSearchMetadataDTO.tc::Tweetinvi#Core#Interfaces#DTO#ITweetDTO#WithheldScope">
            <summary>Sets the stub of ITweetDTO.get_WithheldScope()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWitheldInfo">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.ITweetWitheldInfo</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWitheldInfo.#ctor">
            <summary>Initializes a new instance of type StubITweetWitheldInfo</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWitheldInfo.IdGet">
            <summary>Sets the stub of ITweetWitheldInfo.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWitheldInfo.UserIdGet">
            <summary>Sets the stub of ITweetWitheldInfo.get_UserId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWitheldInfo.WitheldInCountriesGet">
            <summary>Sets the stub of ITweetWitheldInfo.get_WitheldInCountries()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWitheldInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetWitheldInfo#Id">
            <summary>Sets the stub of ITweetWitheldInfo.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWitheldInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetWitheldInfo#UserId">
            <summary>Sets the stub of ITweetWitheldInfo.get_UserId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubITweetWitheldInfo.tc::Tweetinvi#Core#Interfaces#DTO#ITweetWitheldInfo#WitheldInCountries">
            <summary>Sets the stub of ITweetWitheldInfo.get_WitheldInCountries()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.IUserDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.#ctor">
            <summary>Initializes a new instance of type StubIUserDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToContributorsEnabled">
            <summary>Attaches delegates to emulate StubIUserDTO.ContributorsEnabled as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToCreatedAt">
            <summary>Attaches delegates to emulate StubIUserDTO.CreatedAt as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToDefaultProfile">
            <summary>Attaches delegates to emulate StubIUserDTO.DefaultProfile as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToDefaultProfileImage">
            <summary>Attaches delegates to emulate StubIUserDTO.DefaultProfileImage as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubIUserDTO.Description as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToEntities">
            <summary>Attaches delegates to emulate StubIUserDTO.Entities as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToFavouritesCount">
            <summary>Attaches delegates to emulate StubIUserDTO.FavouritesCount as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToFollowRequestSent">
            <summary>Attaches delegates to emulate StubIUserDTO.FollowRequestSent as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToFollowersCount">
            <summary>Attaches delegates to emulate StubIUserDTO.FollowersCount as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToFollowing">
            <summary>Attaches delegates to emulate StubIUserDTO.Following as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToFriendsCount">
            <summary>Attaches delegates to emulate StubIUserDTO.FriendsCount as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToGeoEnabled">
            <summary>Attaches delegates to emulate StubIUserDTO.GeoEnabled as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubIUserDTO.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToIdStr">
            <summary>Attaches delegates to emulate StubIUserDTO.IdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToIsTranslator">
            <summary>Attaches delegates to emulate StubIUserDTO.IsTranslator as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToLanguage">
            <summary>Attaches delegates to emulate StubIUserDTO.Language as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToListedCount">
            <summary>Attaches delegates to emulate StubIUserDTO.ListedCount as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToLocation">
            <summary>Attaches delegates to emulate StubIUserDTO.Location as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIUserDTO.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToNotifications">
            <summary>Attaches delegates to emulate StubIUserDTO.Notifications as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToProfileBackgroundColor">
            <summary>Attaches delegates to emulate StubIUserDTO.ProfileBackgroundColor as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToProfileBackgroundImageUrl">
            <summary>Attaches delegates to emulate StubIUserDTO.ProfileBackgroundImageUrl as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToProfileBackgroundImageUrlHttps">
            <summary>Attaches delegates to emulate StubIUserDTO.ProfileBackgroundImageUrlHttps as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToProfileBackgroundTile">
            <summary>Attaches delegates to emulate StubIUserDTO.ProfileBackgroundTile as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToProfileBannerURL">
            <summary>Attaches delegates to emulate StubIUserDTO.ProfileBannerURL as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToProfileImageUrl">
            <summary>Attaches delegates to emulate StubIUserDTO.ProfileImageUrl as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToProfileImageUrlHttps">
            <summary>Attaches delegates to emulate StubIUserDTO.ProfileImageUrlHttps as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToProfileLinkColor">
            <summary>Attaches delegates to emulate StubIUserDTO.ProfileLinkColor as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToProfileSidebarBorderColor">
            <summary>Attaches delegates to emulate StubIUserDTO.ProfileSidebarBorderColor as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToProfileSidebarFillColor">
            <summary>Attaches delegates to emulate StubIUserDTO.ProfileSidebarFillColor as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToProfileTextColor">
            <summary>Attaches delegates to emulate StubIUserDTO.ProfileTextColor as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToProfileUseBackgroundImage">
            <summary>Attaches delegates to emulate StubIUserDTO.ProfileUseBackgroundImage as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToProtected">
            <summary>Attaches delegates to emulate StubIUserDTO.Protected as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToScreenName">
            <summary>Attaches delegates to emulate StubIUserDTO.ScreenName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToShowAllInlineMedia">
            <summary>Attaches delegates to emulate StubIUserDTO.ShowAllInlineMedia as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToStatus">
            <summary>Attaches delegates to emulate StubIUserDTO.Status as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToStatusesCount">
            <summary>Attaches delegates to emulate StubIUserDTO.StatusesCount as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToTimeZone">
            <summary>Attaches delegates to emulate StubIUserDTO.TimeZone as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToUrl">
            <summary>Attaches delegates to emulate StubIUserDTO.Url as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToUtcOffset">
            <summary>Attaches delegates to emulate StubIUserDTO.UtcOffset as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToVerified">
            <summary>Attaches delegates to emulate StubIUserDTO.Verified as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToWithheldInCountries">
            <summary>Attaches delegates to emulate StubIUserDTO.WithheldInCountries as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.AttachBackingFieldToWithheldScope">
            <summary>Attaches delegates to emulate StubIUserDTO.WithheldScope as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ContributorsEnabledGet">
            <summary>Sets the stub of IUserDTO.get_ContributorsEnabled()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ContributorsEnabledSetBoolean">
            <summary>Sets the stub of IUserDTO.set_ContributorsEnabled(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.CreatedAtGet">
            <summary>Sets the stub of IUserDTO.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.CreatedAtSetDateTime">
            <summary>Sets the stub of IUserDTO.set_CreatedAt(DateTime value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.DefaultProfileGet">
            <summary>Sets the stub of IUserDTO.get_DefaultProfile()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.DefaultProfileImageGet">
            <summary>Sets the stub of IUserDTO.get_DefaultProfileImage()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.DefaultProfileImageSetBoolean">
            <summary>Sets the stub of IUserDTO.set_DefaultProfileImage(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.DefaultProfileSetBoolean">
            <summary>Sets the stub of IUserDTO.set_DefaultProfile(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.DescriptionGet">
            <summary>Sets the stub of IUserDTO.get_Description()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.DescriptionSetString">
            <summary>Sets the stub of IUserDTO.set_Description(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.EntitiesGet">
            <summary>Sets the stub of IUserDTO.get_Entities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.EntitiesSetIUserEntities">
            <summary>Sets the stub of IUserDTO.set_Entities(IUserEntities value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.FavouritesCountGet">
            <summary>Sets the stub of IUserDTO.get_FavouritesCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.FavouritesCountSetNullableOfInt32">
            <summary>Sets the stub of IUserDTO.set_FavouritesCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.FollowRequestSentGet">
            <summary>Sets the stub of IUserDTO.get_FollowRequestSent()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.FollowRequestSentSetBoolean">
            <summary>Sets the stub of IUserDTO.set_FollowRequestSent(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.FollowersCountGet">
            <summary>Sets the stub of IUserDTO.get_FollowersCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.FollowersCountSetInt32">
            <summary>Sets the stub of IUserDTO.set_FollowersCount(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.FollowingGet">
            <summary>Sets the stub of IUserDTO.get_Following()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.FollowingSetBoolean">
            <summary>Sets the stub of IUserDTO.set_Following(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.FriendsCountGet">
            <summary>Sets the stub of IUserDTO.get_FriendsCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.FriendsCountSetInt32">
            <summary>Sets the stub of IUserDTO.set_FriendsCount(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.GeoEnabledGet">
            <summary>Sets the stub of IUserDTO.get_GeoEnabled()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.GeoEnabledSetBoolean">
            <summary>Sets the stub of IUserDTO.set_GeoEnabled(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.IdGet">
            <summary>Sets the stub of IUserIdentifier.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.IdSetInt64">
            <summary>Sets the stub of IUserIdentifier.set_Id(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.IdStrGet">
            <summary>Sets the stub of IUserIdentifier.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.IdStrSetString">
            <summary>Sets the stub of IUserIdentifier.set_IdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.IsTranslatorGet">
            <summary>Sets the stub of IUserDTO.get_IsTranslator()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.IsTranslatorSetBoolean">
            <summary>Sets the stub of IUserDTO.set_IsTranslator(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.LanguageGet">
            <summary>Sets the stub of IUserDTO.get_Language()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.LanguageSetLanguage">
            <summary>Sets the stub of IUserDTO.set_Language(Language value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ListedCountGet">
            <summary>Sets the stub of IUserDTO.get_ListedCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ListedCountSetNullableOfInt32">
            <summary>Sets the stub of IUserDTO.set_ListedCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.LocationGet">
            <summary>Sets the stub of IUserDTO.get_Location()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.LocationSetString">
            <summary>Sets the stub of IUserDTO.set_Location(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.NameGet">
            <summary>Sets the stub of IUserDTO.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.NameSetString">
            <summary>Sets the stub of IUserDTO.set_Name(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.NotificationsGet">
            <summary>Sets the stub of IUserDTO.get_Notifications()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.NotificationsSetBoolean">
            <summary>Sets the stub of IUserDTO.set_Notifications(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileBackgroundColorGet">
            <summary>Sets the stub of IUserDTO.get_ProfileBackgroundColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileBackgroundColorSetString">
            <summary>Sets the stub of IUserDTO.set_ProfileBackgroundColor(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileBackgroundImageUrlGet">
            <summary>Sets the stub of IUserDTO.get_ProfileBackgroundImageUrl()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileBackgroundImageUrlHttpsGet">
            <summary>Sets the stub of IUserDTO.get_ProfileBackgroundImageUrlHttps()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileBackgroundImageUrlHttpsSetString">
            <summary>Sets the stub of IUserDTO.set_ProfileBackgroundImageUrlHttps(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileBackgroundImageUrlSetString">
            <summary>Sets the stub of IUserDTO.set_ProfileBackgroundImageUrl(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileBackgroundTileGet">
            <summary>Sets the stub of IUserDTO.get_ProfileBackgroundTile()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileBackgroundTileSetBoolean">
            <summary>Sets the stub of IUserDTO.set_ProfileBackgroundTile(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileBannerURLGet">
            <summary>Sets the stub of IUserDTO.get_ProfileBannerURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileBannerURLSetString">
            <summary>Sets the stub of IUserDTO.set_ProfileBannerURL(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileImageUrlGet">
            <summary>Sets the stub of IUserDTO.get_ProfileImageUrl()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileImageUrlHttpsGet">
            <summary>Sets the stub of IUserDTO.get_ProfileImageUrlHttps()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileImageUrlHttpsSetString">
            <summary>Sets the stub of IUserDTO.set_ProfileImageUrlHttps(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileImageUrlSetString">
            <summary>Sets the stub of IUserDTO.set_ProfileImageUrl(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileLinkColorGet">
            <summary>Sets the stub of IUserDTO.get_ProfileLinkColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileLinkColorSetString">
            <summary>Sets the stub of IUserDTO.set_ProfileLinkColor(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileSidebarBorderColorGet">
            <summary>Sets the stub of IUserDTO.get_ProfileSidebarBorderColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileSidebarBorderColorSetString">
            <summary>Sets the stub of IUserDTO.set_ProfileSidebarBorderColor(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileSidebarFillColorGet">
            <summary>Sets the stub of IUserDTO.get_ProfileSidebarFillColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileSidebarFillColorSetString">
            <summary>Sets the stub of IUserDTO.set_ProfileSidebarFillColor(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileTextColorGet">
            <summary>Sets the stub of IUserDTO.get_ProfileTextColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileTextColorSetString">
            <summary>Sets the stub of IUserDTO.set_ProfileTextColor(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileUseBackgroundImageGet">
            <summary>Sets the stub of IUserDTO.get_ProfileUseBackgroundImage()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProfileUseBackgroundImageSetBoolean">
            <summary>Sets the stub of IUserDTO.set_ProfileUseBackgroundImage(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProtectedGet">
            <summary>Sets the stub of IUserDTO.get_Protected()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ProtectedSetBoolean">
            <summary>Sets the stub of IUserDTO.set_Protected(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ScreenNameGet">
            <summary>Sets the stub of IUserIdentifier.get_ScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ScreenNameSetString">
            <summary>Sets the stub of IUserIdentifier.set_ScreenName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ShowAllInlineMediaGet">
            <summary>Sets the stub of IUserDTO.get_ShowAllInlineMedia()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.ShowAllInlineMediaSetBoolean">
            <summary>Sets the stub of IUserDTO.set_ShowAllInlineMedia(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.StatusGet">
            <summary>Sets the stub of IUserDTO.get_Status()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.StatusSetITweetDTO">
            <summary>Sets the stub of IUserDTO.set_Status(ITweetDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.StatusesCountGet">
            <summary>Sets the stub of IUserDTO.get_StatusesCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.StatusesCountSetInt32">
            <summary>Sets the stub of IUserDTO.set_StatusesCount(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.TimeZoneGet">
            <summary>Sets the stub of IUserDTO.get_TimeZone()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.TimeZoneSetString">
            <summary>Sets the stub of IUserDTO.set_TimeZone(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.UrlGet">
            <summary>Sets the stub of IUserDTO.get_Url()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.UrlSetString">
            <summary>Sets the stub of IUserDTO.set_Url(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.UtcOffsetGet">
            <summary>Sets the stub of IUserDTO.get_UtcOffset()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.UtcOffsetSetNullableOfInt32">
            <summary>Sets the stub of IUserDTO.set_UtcOffset(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.VerifiedGet">
            <summary>Sets the stub of IUserDTO.get_Verified()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.VerifiedSetBoolean">
            <summary>Sets the stub of IUserDTO.set_Verified(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.WithheldInCountriesGet">
            <summary>Sets the stub of IUserDTO.get_WithheldInCountries()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.WithheldInCountriesSetIEnumerableOfString">
            <summary>Sets the stub of IUserDTO.set_WithheldInCountries(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.WithheldScopeGet">
            <summary>Sets the stub of IUserDTO.get_WithheldScope()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.WithheldScopeSetString">
            <summary>Sets the stub of IUserDTO.set_WithheldScope(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ContributorsEnabled">
            <summary>Sets the stub of IUserDTO.get_ContributorsEnabled()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#CreatedAt">
            <summary>Sets the stub of IUserDTO.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#DefaultProfile">
            <summary>Sets the stub of IUserDTO.get_DefaultProfile()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#DefaultProfileImage">
            <summary>Sets the stub of IUserDTO.get_DefaultProfileImage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#Description">
            <summary>Sets the stub of IUserDTO.get_Description()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#Entities">
            <summary>Sets the stub of IUserDTO.get_Entities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#FavouritesCount">
            <summary>Sets the stub of IUserDTO.get_FavouritesCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#FollowRequestSent">
            <summary>Sets the stub of IUserDTO.get_FollowRequestSent()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#FollowersCount">
            <summary>Sets the stub of IUserDTO.get_FollowersCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#Following">
            <summary>Sets the stub of IUserDTO.get_Following()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#FriendsCount">
            <summary>Sets the stub of IUserDTO.get_FriendsCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#GeoEnabled">
            <summary>Sets the stub of IUserDTO.get_GeoEnabled()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#Models#IUserIdentifier#Id">
            <summary>Sets the stub of IUserIdentifier.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#Models#IUserIdentifier#IdStr">
            <summary>Sets the stub of IUserIdentifier.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#IsTranslator">
            <summary>Sets the stub of IUserDTO.get_IsTranslator()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#Language">
            <summary>Sets the stub of IUserDTO.get_Language()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ListedCount">
            <summary>Sets the stub of IUserDTO.get_ListedCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#Location">
            <summary>Sets the stub of IUserDTO.get_Location()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#Name">
            <summary>Sets the stub of IUserDTO.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#Notifications">
            <summary>Sets the stub of IUserDTO.get_Notifications()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ProfileBackgroundColor">
            <summary>Sets the stub of IUserDTO.get_ProfileBackgroundColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ProfileBackgroundImageUrl">
            <summary>Sets the stub of IUserDTO.get_ProfileBackgroundImageUrl()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ProfileBackgroundImageUrlHttps">
            <summary>Sets the stub of IUserDTO.get_ProfileBackgroundImageUrlHttps()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ProfileBackgroundTile">
            <summary>Sets the stub of IUserDTO.get_ProfileBackgroundTile()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ProfileBannerURL">
            <summary>Sets the stub of IUserDTO.get_ProfileBannerURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ProfileImageUrl">
            <summary>Sets the stub of IUserDTO.get_ProfileImageUrl()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ProfileImageUrlHttps">
            <summary>Sets the stub of IUserDTO.get_ProfileImageUrlHttps()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ProfileLinkColor">
            <summary>Sets the stub of IUserDTO.get_ProfileLinkColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ProfileSidebarBorderColor">
            <summary>Sets the stub of IUserDTO.get_ProfileSidebarBorderColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ProfileSidebarFillColor">
            <summary>Sets the stub of IUserDTO.get_ProfileSidebarFillColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ProfileTextColor">
            <summary>Sets the stub of IUserDTO.get_ProfileTextColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ProfileUseBackgroundImage">
            <summary>Sets the stub of IUserDTO.get_ProfileUseBackgroundImage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#Protected">
            <summary>Sets the stub of IUserDTO.get_Protected()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#Models#IUserIdentifier#ScreenName">
            <summary>Sets the stub of IUserIdentifier.get_ScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#ShowAllInlineMedia">
            <summary>Sets the stub of IUserDTO.get_ShowAllInlineMedia()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#Status">
            <summary>Sets the stub of IUserDTO.get_Status()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#StatusesCount">
            <summary>Sets the stub of IUserDTO.get_StatusesCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#TimeZone">
            <summary>Sets the stub of IUserDTO.get_TimeZone()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#Url">
            <summary>Sets the stub of IUserDTO.get_Url()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#UtcOffset">
            <summary>Sets the stub of IUserDTO.get_UtcOffset()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#Verified">
            <summary>Sets the stub of IUserDTO.get_Verified()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#WithheldInCountries">
            <summary>Sets the stub of IUserDTO.get_WithheldInCountries()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserDTO.tc::Tweetinvi#Core#Interfaces#DTO#IUserDTO#WithheldScope">
            <summary>Sets the stub of IUserDTO.get_WithheldScope()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserWitheldInfo">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.IUserWitheldInfo</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserWitheldInfo.#ctor">
            <summary>Initializes a new instance of type StubIUserWitheldInfo</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserWitheldInfo.IdGet">
            <summary>Sets the stub of IUserWitheldInfo.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserWitheldInfo.WitheldInCountriesGet">
            <summary>Sets the stub of IUserWitheldInfo.get_WitheldInCountries()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserWitheldInfo.tc::Tweetinvi#Core#Interfaces#DTO#IUserWitheldInfo#Id">
            <summary>Sets the stub of IUserWitheldInfo.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.Fakes.StubIUserWitheldInfo.tc::Tweetinvi#Core#Interfaces#DTO#IUserWitheldInfo#WitheldInCountries">
            <summary>Sets the stub of IUserWitheldInfo.get_WitheldInCountries()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.QueryDTO.IBaseCursorQueryDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.#ctor">
            <summary>Initializes a new instance of type StubIBaseCursorQueryDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.AttachBackingFieldToNextCursor">
            <summary>Attaches delegates to emulate StubIBaseCursorQueryDTO.NextCursor as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.AttachBackingFieldToNextCursorStr">
            <summary>Attaches delegates to emulate StubIBaseCursorQueryDTO.NextCursorStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.AttachBackingFieldToPreviousCursor">
            <summary>Attaches delegates to emulate StubIBaseCursorQueryDTO.PreviousCursor as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.AttachBackingFieldToPreviousCursorStr">
            <summary>Attaches delegates to emulate StubIBaseCursorQueryDTO.PreviousCursorStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.AttachBackingFieldToRawJson">
            <summary>Attaches delegates to emulate StubIBaseCursorQueryDTO.RawJson as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.GetNumberOfObjectRetrieved">
            <summary>Sets the stub of IBaseCursorQueryDTO.GetNumberOfObjectRetrieved()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.NextCursorGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.NextCursorSetInt64">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_NextCursor(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.NextCursorStrGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursorStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.NextCursorStrSetString">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_NextCursorStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.PreviousCursorGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.PreviousCursorSetInt64">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_PreviousCursor(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.PreviousCursorStrGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursorStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.PreviousCursorStrSetString">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_PreviousCursorStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.RawJsonGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_RawJson()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.RawJsonSetString">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_RawJson(String value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#GetNumberOfObjectRetrieved">
            <summary>Sets the stub of IBaseCursorQueryDTO.GetNumberOfObjectRetrieved()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#NextCursor">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#NextCursorStr">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursorStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#PreviousCursor">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#PreviousCursorStr">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursorStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#RawJson">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_RawJson()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.QueryDTO.IBaseCursorQueryDTO`1</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.#ctor">
            <summary>Initializes a new instance of type StubIBaseCursorQueryDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.AttachBackingFieldToNextCursor">
            <summary>Attaches delegates to emulate StubIBaseCursorQueryDTO.NextCursor as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.AttachBackingFieldToNextCursorStr">
            <summary>Attaches delegates to emulate StubIBaseCursorQueryDTO.NextCursorStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.AttachBackingFieldToPreviousCursor">
            <summary>Attaches delegates to emulate StubIBaseCursorQueryDTO.PreviousCursor as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.AttachBackingFieldToPreviousCursorStr">
            <summary>Attaches delegates to emulate StubIBaseCursorQueryDTO.PreviousCursorStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.AttachBackingFieldToRawJson">
            <summary>Attaches delegates to emulate StubIBaseCursorQueryDTO.RawJson as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.AttachBackingFieldToResults">
            <summary>Attaches delegates to emulate StubIBaseCursorQueryDTO.Results as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.GetNumberOfObjectRetrieved">
            <summary>Sets the stub of IBaseCursorQueryDTO.GetNumberOfObjectRetrieved()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.NextCursorGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.NextCursorSetInt64">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_NextCursor(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.NextCursorStrGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursorStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.NextCursorStrSetString">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_NextCursorStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.PreviousCursorGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.PreviousCursorSetInt64">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_PreviousCursor(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.PreviousCursorStrGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursorStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.PreviousCursorStrSetString">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_PreviousCursorStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.RawJsonGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_RawJson()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.RawJsonSetString">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_RawJson(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.ResultsGet">
            <summary>Sets the stub of IBaseCursorQueryDTO`1.get_Results()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.ResultsSetIEnumerableOfT0">
            <summary>Sets the stub of IBaseCursorQueryDTO`1.set_Results(IEnumerable`1&lt;!0&gt; value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#GetNumberOfObjectRetrieved">
            <summary>Sets the stub of IBaseCursorQueryDTO.GetNumberOfObjectRetrieved()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#NextCursor">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#NextCursorStr">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursorStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#PreviousCursor">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#PreviousCursorStr">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursorStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#RawJson">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_RawJson()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIBaseCursorQueryDTO`1.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO{T}#Results">
            <summary>Sets the stub of IBaseCursorQueryDTO`1.get_Results()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubICursorQueryHelper">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.QueryDTO.ICursorQueryHelper</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubICursorQueryHelper.#ctor">
            <summary>Initializes a new instance of type StubICursorQueryHelper</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubICursorQueryHelper.GetResultsFromCursorQueryOf1IEnumerableOfIBaseCursorQueryDTOOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.QueryDTO.IBaseCursorQueryDTO{``0}},System.Int32,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetResultsFromCursorQuery(IEnumerable`1&lt;IBaseCursorQueryDTO`1&lt;!!0&gt;&gt; cursorQueryResult, Int32 maxNumberOfResults)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubICursorQueryHelper.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#ICursorQueryHelper#GetResultsFromCursorQuery``1(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.QueryDTO.IBaseCursorQueryDTO{``0}},System.Int32)">
            <summary>Sets the stub of ICursorQueryHelper.GetResultsFromCursorQuery(IEnumerable`1&lt;IBaseCursorQueryDTO`1&lt;!!0&gt;&gt; cursorQueryResult, Int32 maxNumberOfResults)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.QueryDTO.IIdsCursorQueryResultDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.#ctor">
            <summary>Initializes a new instance of type StubIIdsCursorQueryResultDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.AttachBackingFieldToIds">
            <summary>Attaches delegates to emulate StubIIdsCursorQueryResultDTO.Ids as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.AttachBackingFieldToNextCursor">
            <summary>Attaches delegates to emulate StubIIdsCursorQueryResultDTO.NextCursor as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.AttachBackingFieldToNextCursorStr">
            <summary>Attaches delegates to emulate StubIIdsCursorQueryResultDTO.NextCursorStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.AttachBackingFieldToPreviousCursor">
            <summary>Attaches delegates to emulate StubIIdsCursorQueryResultDTO.PreviousCursor as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.AttachBackingFieldToPreviousCursorStr">
            <summary>Attaches delegates to emulate StubIIdsCursorQueryResultDTO.PreviousCursorStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.AttachBackingFieldToRawJson">
            <summary>Attaches delegates to emulate StubIIdsCursorQueryResultDTO.RawJson as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.AttachBackingFieldToResults">
            <summary>Attaches delegates to emulate StubIIdsCursorQueryResultDTO.Results as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.GetNumberOfObjectRetrieved">
            <summary>Sets the stub of IBaseCursorQueryDTO.GetNumberOfObjectRetrieved()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.IdsGet">
            <summary>Sets the stub of IIdsCursorQueryResultDTO.get_Ids()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.IdsSetInt64Array">
            <summary>Sets the stub of IIdsCursorQueryResultDTO.set_Ids(Int64[] value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.NextCursorGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.NextCursorSetInt64">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_NextCursor(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.NextCursorStrGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursorStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.NextCursorStrSetString">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_NextCursorStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.PreviousCursorGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.PreviousCursorSetInt64">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_PreviousCursor(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.PreviousCursorStrGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursorStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.PreviousCursorStrSetString">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_PreviousCursorStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.RawJsonGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_RawJson()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.RawJsonSetString">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_RawJson(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.ResultsGet">
            <summary>Sets the stub of IBaseCursorQueryDTO`1.get_Results()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.ResultsSetIEnumerableOfInt64">
            <summary>Sets the stub of IBaseCursorQueryDTO`1.set_Results(IEnumerable`1&lt;!0&gt; value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#GetNumberOfObjectRetrieved">
            <summary>Sets the stub of IBaseCursorQueryDTO.GetNumberOfObjectRetrieved()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IIdsCursorQueryResultDTO#Ids">
            <summary>Sets the stub of IIdsCursorQueryResultDTO.get_Ids()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#NextCursor">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#NextCursorStr">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursorStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#PreviousCursor">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#PreviousCursorStr">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursorStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#RawJson">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_RawJson()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIIdsCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO{System#Int64}#Results">
            <summary>Sets the stub of IBaseCursorQueryDTO`1.get_Results()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO">
            <summary>Stub type of Tweetinvi.Core.Interfaces.DTO.QueryDTO.IUserCursorQueryResultDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.#ctor">
            <summary>Initializes a new instance of type StubIUserCursorQueryResultDTO</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.AttachBackingFieldToNextCursor">
            <summary>Attaches delegates to emulate StubIUserCursorQueryResultDTO.NextCursor as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.AttachBackingFieldToNextCursorStr">
            <summary>Attaches delegates to emulate StubIUserCursorQueryResultDTO.NextCursorStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.AttachBackingFieldToPreviousCursor">
            <summary>Attaches delegates to emulate StubIUserCursorQueryResultDTO.PreviousCursor as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.AttachBackingFieldToPreviousCursorStr">
            <summary>Attaches delegates to emulate StubIUserCursorQueryResultDTO.PreviousCursorStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.AttachBackingFieldToRawJson">
            <summary>Attaches delegates to emulate StubIUserCursorQueryResultDTO.RawJson as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.AttachBackingFieldToResults">
            <summary>Attaches delegates to emulate StubIUserCursorQueryResultDTO.Results as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.AttachBackingFieldToUsers">
            <summary>Attaches delegates to emulate StubIUserCursorQueryResultDTO.Users as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.GetNumberOfObjectRetrieved">
            <summary>Sets the stub of IBaseCursorQueryDTO.GetNumberOfObjectRetrieved()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.NextCursorGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.NextCursorSetInt64">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_NextCursor(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.NextCursorStrGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursorStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.NextCursorStrSetString">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_NextCursorStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.PreviousCursorGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.PreviousCursorSetInt64">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_PreviousCursor(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.PreviousCursorStrGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursorStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.PreviousCursorStrSetString">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_PreviousCursorStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.RawJsonGet">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_RawJson()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.RawJsonSetString">
            <summary>Sets the stub of IBaseCursorQueryDTO.set_RawJson(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.ResultsGet">
            <summary>Sets the stub of IBaseCursorQueryDTO`1.get_Results()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.ResultsSetIEnumerableOfIUserDTO">
            <summary>Sets the stub of IBaseCursorQueryDTO`1.set_Results(IEnumerable`1&lt;!0&gt; value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#GetNumberOfObjectRetrieved">
            <summary>Sets the stub of IBaseCursorQueryDTO.GetNumberOfObjectRetrieved()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.UsersGet">
            <summary>Sets the stub of IUserCursorQueryResultDTO.get_Users()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.UsersSetIUserDTOArray">
            <summary>Sets the stub of IUserCursorQueryResultDTO.set_Users(IUserDTO[] value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#NextCursor">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#NextCursorStr">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_NextCursorStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#PreviousCursor">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#PreviousCursorStr">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_PreviousCursorStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO#RawJson">
            <summary>Sets the stub of IBaseCursorQueryDTO.get_RawJson()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IBaseCursorQueryDTO{Tweetinvi#Core#Interfaces#DTO#IUserDTO}#Results">
            <summary>Sets the stub of IBaseCursorQueryDTO`1.get_Results()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.DTO.QueryDTO.Fakes.StubIUserCursorQueryResultDTO.tc::Tweetinvi#Core#Interfaces#DTO#QueryDTO#IUserCursorQueryResultDTO#Users">
            <summary>Sets the stub of IUserCursorQueryResultDTO.get_Users()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Exceptions.IExceptionHandler</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.#ctor">
            <summary>Initializes a new instance of type StubIExceptionHandler</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.AddTwitterExceptionITwitterException">
            <summary>Sets the stub of IExceptionHandler.AddTwitterException(ITwitterException twitterException)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.AddWebExceptionWebExceptionString">
            <summary>Sets the stub of IExceptionHandler.AddWebException(WebException webException, String url)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.AttachBackingFieldToLogExceptions">
            <summary>Attaches delegates to emulate StubIExceptionHandler.LogExceptions as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.AttachBackingFieldToSwallowWebExceptions">
            <summary>Attaches delegates to emulate StubIExceptionHandler.SwallowWebExceptions as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.ClearLoggedExceptions">
            <summary>Sets the stub of IExceptionHandler.ClearLoggedExceptions()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.ExceptionInfosGet">
            <summary>Sets the stub of IExceptionHandler.get_ExceptionInfos()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.GenerateTwitterExceptionWebExceptionString">
            <summary>Sets the stub of IExceptionHandler.GenerateTwitterException(WebException webException, String url)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.LastExceptionInfosGet">
            <summary>Sets the stub of IExceptionHandler.get_LastExceptionInfos()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.LogExceptionsGet">
            <summary>Sets the stub of IExceptionHandler.get_LogExceptions()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.LogExceptionsSetBoolean">
            <summary>Sets the stub of IExceptionHandler.set_LogExceptions(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.SwallowWebExceptionsGet">
            <summary>Sets the stub of IExceptionHandler.get_SwallowWebExceptions()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.SwallowWebExceptionsSetBoolean">
            <summary>Sets the stub of IExceptionHandler.set_SwallowWebExceptions(Boolean value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.tc::Tweetinvi#Core#Interfaces#Exceptions#IExceptionHandler#AddTwitterException(Tweetinvi.Core.Exceptions.ITwitterException)">
            <summary>Sets the stub of IExceptionHandler.AddTwitterException(ITwitterException twitterException)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.tc::Tweetinvi#Core#Interfaces#Exceptions#IExceptionHandler#AddWebException(System.Net.WebException,System.String)">
            <summary>Sets the stub of IExceptionHandler.AddWebException(WebException webException, String url)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.tc::Tweetinvi#Core#Interfaces#Exceptions#IExceptionHandler#ClearLoggedExceptions">
            <summary>Sets the stub of IExceptionHandler.ClearLoggedExceptions()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.tc::Tweetinvi#Core#Interfaces#Exceptions#IExceptionHandler#GenerateTwitterException(System.Net.WebException,System.String)">
            <summary>Sets the stub of IExceptionHandler.GenerateTwitterException(WebException webException, String url)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.tc::Tweetinvi#Core#Interfaces#Exceptions#IExceptionHandler#ExceptionInfos">
            <summary>Sets the stub of IExceptionHandler.get_ExceptionInfos()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.tc::Tweetinvi#Core#Interfaces#Exceptions#IExceptionHandler#LastExceptionInfos">
            <summary>Sets the stub of IExceptionHandler.get_LastExceptionInfos()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.tc::Tweetinvi#Core#Interfaces#Exceptions#IExceptionHandler#LogExceptions">
            <summary>Sets the stub of IExceptionHandler.get_LogExceptions()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Exceptions.Fakes.StubIExceptionHandler.tc::Tweetinvi#Core#Interfaces#Exceptions#IExceptionHandler#SwallowWebExceptions">
            <summary>Sets the stub of IExceptionHandler.get_SwallowWebExceptions()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Factories.Fakes.StubICredentialsFactory">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Factories.ICredentialsFactory</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubICredentialsFactory.#ctor">
            <summary>Initializes a new instance of type StubICredentialsFactory</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubICredentialsFactory.CreateOAuthCredentialsStringStringStringString">
            <summary>Sets the stub of ICredentialsFactory.CreateOAuthCredentials(String userAccessToken, String userAccessSecret, String consumerKey, String consumerSecret)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubICredentialsFactory.tc::Tweetinvi#Core#Interfaces#Factories#ICredentialsFactory#CreateOAuthCredentials(System.String,System.String,System.String,System.String)">
            <summary>Sets the stub of ICredentialsFactory.CreateOAuthCredentials(String userAccessToken, String userAccessSecret, String consumerKey, String consumerSecret)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIFriendshipFactory">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Factories.IFriendshipFactory</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIFriendshipFactory.#ctor">
            <summary>Initializes a new instance of type StubIFriendshipFactory</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIFriendshipFactory.GenerateFriendshipAuthorizationsBooleanBoolean">
            <summary>Sets the stub of IFriendshipFactory.GenerateFriendshipAuthorizations(Boolean retweetsEnabled, Boolean deviceNotificationEnabled)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIFriendshipFactory.GenerateRelationshipFromRelationshipDTOIRelationshipDTO">
            <summary>Sets the stub of IFriendshipFactory.GenerateRelationshipFromRelationshipDTO(IRelationshipDTO relationshipDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIFriendshipFactory.GenerateRelationshipsFromRelationshipsDTOIEnumerableOfIRelationshipDTO">
            <summary>Sets the stub of IFriendshipFactory.GenerateRelationshipsFromRelationshipsDTO(IEnumerable`1&lt;IRelationshipDTO&gt; relationshipDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIFriendshipFactory.tc::Tweetinvi#Core#Interfaces#Factories#IFriendshipFactory#GenerateFriendshipAuthorizations(System.Boolean,System.Boolean)">
            <summary>Sets the stub of IFriendshipFactory.GenerateFriendshipAuthorizations(Boolean retweetsEnabled, Boolean deviceNotificationEnabled)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIFriendshipFactory.tc::Tweetinvi#Core#Interfaces#Factories#IFriendshipFactory#GenerateRelationshipFromRelationshipDTO(Tweetinvi.Core.Interfaces.DTO.IRelationshipDTO)">
            <summary>Sets the stub of IFriendshipFactory.GenerateRelationshipFromRelationshipDTO(IRelationshipDTO relationshipDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIFriendshipFactory.tc::Tweetinvi#Core#Interfaces#Factories#IFriendshipFactory#GenerateRelationshipsFromRelationshipsDTO(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.IRelationshipDTO})">
            <summary>Sets the stub of IFriendshipFactory.GenerateRelationshipsFromRelationshipsDTO(IEnumerable`1&lt;IRelationshipDTO&gt; relationshipDTO)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIGeoFactory">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Factories.IGeoFactory</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIGeoFactory.#ctor">
            <summary>Initializes a new instance of type StubIGeoFactory</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIGeoFactory.GenerateCoordinatesDoubleDouble">
            <summary>Sets the stub of IGeoFactory.GenerateCoordinates(Double longitude, Double latitude)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIGeoFactory.GenerateLocationDoubleDoubleDoubleDouble">
            <summary>Sets the stub of IGeoFactory.GenerateLocation(Double longitude1, Double latitude1, Double longitude2, Double latitude2)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIGeoFactory.GenerateLocationICoordinatesICoordinates">
            <summary>Sets the stub of IGeoFactory.GenerateLocation(ICoordinates coordinates1, ICoordinates coordinates2)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIGeoFactory.tc::Tweetinvi#Core#Interfaces#Factories#IGeoFactory#GenerateCoordinates(System.Double,System.Double)">
            <summary>Sets the stub of IGeoFactory.GenerateCoordinates(Double longitude, Double latitude)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIGeoFactory.tc::Tweetinvi#Core#Interfaces#Factories#IGeoFactory#GenerateLocation(Tweetinvi.Core.Interfaces.Models.ICoordinates,Tweetinvi.Core.Interfaces.Models.ICoordinates)">
            <summary>Sets the stub of IGeoFactory.GenerateLocation(ICoordinates coordinates1, ICoordinates coordinates2)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIGeoFactory.tc::Tweetinvi#Core#Interfaces#Factories#IGeoFactory#GenerateLocation(System.Double,System.Double,System.Double,System.Double)">
            <summary>Sets the stub of IGeoFactory.GenerateLocation(Double longitude1, Double latitude1, Double longitude2, Double latitude2)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIMessageFactory">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Factories.IMessageFactory</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIMessageFactory.#ctor">
            <summary>Initializes a new instance of type StubIMessageFactory</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIMessageFactory.CreateMessageStringIUser">
            <summary>Sets the stub of IMessageFactory.CreateMessage(String text, IUser recipient)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIMessageFactory.GenerateMessageFromJsonString">
            <summary>Sets the stub of IMessageFactory.GenerateMessageFromJson(String jsonMessage)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIMessageFactory.GenerateMessageFromMessageDTOIMessageDTO">
            <summary>Sets the stub of IMessageFactory.GenerateMessageFromMessageDTO(IMessageDTO messageDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIMessageFactory.GenerateMessagesFromMessagesDTOIEnumerableOfIMessageDTO">
            <summary>Sets the stub of IMessageFactory.GenerateMessagesFromMessagesDTO(IEnumerable`1&lt;IMessageDTO&gt; messagesDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIMessageFactory.GetExistingMessageInt64">
            <summary>Sets the stub of IMessageFactory.GetExistingMessage(Int64 messageId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIMessageFactory.tc::Tweetinvi#Core#Interfaces#Factories#IMessageFactory#CreateMessage(System.String,Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IMessageFactory.CreateMessage(String text, IUser recipient)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIMessageFactory.tc::Tweetinvi#Core#Interfaces#Factories#IMessageFactory#GenerateMessageFromJson(System.String)">
            <summary>Sets the stub of IMessageFactory.GenerateMessageFromJson(String jsonMessage)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIMessageFactory.tc::Tweetinvi#Core#Interfaces#Factories#IMessageFactory#GenerateMessageFromMessageDTO(Tweetinvi.Core.Interfaces.DTO.IMessageDTO)">
            <summary>Sets the stub of IMessageFactory.GenerateMessageFromMessageDTO(IMessageDTO messageDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIMessageFactory.tc::Tweetinvi#Core#Interfaces#Factories#IMessageFactory#GenerateMessagesFromMessagesDTO(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.IMessageDTO})">
            <summary>Sets the stub of IMessageFactory.GenerateMessagesFromMessagesDTO(IEnumerable`1&lt;IMessageDTO&gt; messagesDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIMessageFactory.tc::Tweetinvi#Core#Interfaces#Factories#IMessageFactory#GetExistingMessage(System.Int64)">
            <summary>Sets the stub of IMessageFactory.GetExistingMessage(Int64 messageId)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Factories.Fakes.StubISavedSearchFactory">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Factories.ISavedSearchFactory</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubISavedSearchFactory.#ctor">
            <summary>Initializes a new instance of type StubISavedSearchFactory</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubISavedSearchFactory.CreateSavedSearchString">
            <summary>Sets the stub of ISavedSearchFactory.CreateSavedSearch(String searchQuery)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubISavedSearchFactory.GenerateSavedSearchFromDTOISavedSearchDTO">
            <summary>Sets the stub of ISavedSearchFactory.GenerateSavedSearchFromDTO(ISavedSearchDTO savedSearchDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubISavedSearchFactory.GenerateSavedSearchesFromDTOsIEnumerableOfISavedSearchDTO">
            <summary>Sets the stub of ISavedSearchFactory.GenerateSavedSearchesFromDTOs(IEnumerable`1&lt;ISavedSearchDTO&gt; savedSearchDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubISavedSearchFactory.GetSavedSearchInt64">
            <summary>Sets the stub of ISavedSearchFactory.GetSavedSearch(Int64 searchId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubISavedSearchFactory.tc::Tweetinvi#Core#Interfaces#Factories#ISavedSearchFactory#CreateSavedSearch(System.String)">
            <summary>Sets the stub of ISavedSearchFactory.CreateSavedSearch(String searchQuery)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubISavedSearchFactory.tc::Tweetinvi#Core#Interfaces#Factories#ISavedSearchFactory#GenerateSavedSearchFromDTO(Tweetinvi.Core.Interfaces.DTO.ISavedSearchDTO)">
            <summary>Sets the stub of ISavedSearchFactory.GenerateSavedSearchFromDTO(ISavedSearchDTO savedSearchDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubISavedSearchFactory.tc::Tweetinvi#Core#Interfaces#Factories#ISavedSearchFactory#GenerateSavedSearchesFromDTOs(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.ISavedSearchDTO})">
            <summary>Sets the stub of ISavedSearchFactory.GenerateSavedSearchesFromDTOs(IEnumerable`1&lt;ISavedSearchDTO&gt; savedSearchDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubISavedSearchFactory.tc::Tweetinvi#Core#Interfaces#Factories#ISavedSearchFactory#GetSavedSearch(System.Int64)">
            <summary>Sets the stub of ISavedSearchFactory.GetSavedSearch(Int64 searchId)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Factories.Fakes.StubISearchResultFactory">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Factories.ISearchResultFactory</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubISearchResultFactory.#ctor">
            <summary>Initializes a new instance of type StubISearchResultFactory</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubISearchResultFactory.CreateISearchResultsDTOArray">
            <summary>Sets the stub of ISearchResultFactory.Create(ISearchResultsDTO[] searchResultsDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubISearchResultFactory.tc::Tweetinvi#Core#Interfaces#Factories#ISearchResultFactory#Create(Tweetinvi.Core.Interfaces.DTO.ISearchResultsDTO[])">
            <summary>Sets the stub of ISearchResultFactory.Create(ISearchResultsDTO[] searchResultsDTO)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Factories.ITweetFactory</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.#ctor">
            <summary>Initializes a new instance of type StubITweetFactory</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.CreateTweetString">
            <summary>Sets the stub of ITweetFactory.CreateTweet(String text)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.GenerateMentionFromDTOITweetDTO">
            <summary>Sets the stub of ITweetFactory.GenerateMentionFromDTO(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.GenerateMentionsFromDTOIEnumerableOfITweetDTO">
            <summary>Sets the stub of ITweetFactory.GenerateMentionsFromDTO(IEnumerable`1&lt;ITweetDTO&gt; tweetsDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.GenerateOEmbedTweetFromDTOIOEmbedTweetDTO">
            <summary>Sets the stub of ITweetFactory.GenerateOEmbedTweetFromDTO(IOEmbedTweetDTO oEmbedTweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.GenerateTweetFromDTOITweetDTO">
            <summary>Sets the stub of ITweetFactory.GenerateTweetFromDTO(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.GenerateTweetFromJsonString">
            <summary>Sets the stub of ITweetFactory.GenerateTweetFromJson(String jsonTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.GenerateTweetWithSearchMetadataFromDTOITweetWithSearchMetadataDTO">
            <summary>Sets the stub of ITweetFactory.GenerateTweetWithSearchMetadataFromDTO(ITweetWithSearchMetadataDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.GenerateTweetsFromDTOIEnumerableOfITweetDTO">
            <summary>Sets the stub of ITweetFactory.GenerateTweetsFromDTO(IEnumerable`1&lt;ITweetDTO&gt; tweetsDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.GenerateTweetsWithSearchMetadataFromDTOsIEnumerableOfITweetWithSearchMetadataDTO">
            <summary>Sets the stub of ITweetFactory.GenerateTweetsWithSearchMetadataFromDTOs(IEnumerable`1&lt;ITweetWithSearchMetadataDTO&gt; tweetsDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.GetTweetInt64">
            <summary>Sets the stub of ITweetFactory.GetTweet(Int64 tweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.GetTweetsIEnumerableOfInt64">
            <summary>Sets the stub of ITweetFactory.GetTweets(IEnumerable`1&lt;Int64&gt; tweetIds)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetFactory#CreateTweet(System.String)">
            <summary>Sets the stub of ITweetFactory.CreateTweet(String text)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetFactory#GenerateMentionFromDTO(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetFactory.GenerateMentionFromDTO(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetFactory#GenerateMentionsFromDTO(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.ITweetDTO})">
            <summary>Sets the stub of ITweetFactory.GenerateMentionsFromDTO(IEnumerable`1&lt;ITweetDTO&gt; tweetsDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetFactory#GenerateOEmbedTweetFromDTO(Tweetinvi.Core.Interfaces.DTO.IOEmbedTweetDTO)">
            <summary>Sets the stub of ITweetFactory.GenerateOEmbedTweetFromDTO(IOEmbedTweetDTO oEmbedTweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetFactory#GenerateTweetFromDTO(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetFactory.GenerateTweetFromDTO(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetFactory#GenerateTweetFromJson(System.String)">
            <summary>Sets the stub of ITweetFactory.GenerateTweetFromJson(String jsonTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetFactory#GenerateTweetWithSearchMetadataFromDTO(Tweetinvi.Core.Interfaces.DTO.ITweetWithSearchMetadataDTO)">
            <summary>Sets the stub of ITweetFactory.GenerateTweetWithSearchMetadataFromDTO(ITweetWithSearchMetadataDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetFactory#GenerateTweetsFromDTO(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.ITweetDTO})">
            <summary>Sets the stub of ITweetFactory.GenerateTweetsFromDTO(IEnumerable`1&lt;ITweetDTO&gt; tweetsDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetFactory#GenerateTweetsWithSearchMetadataFromDTOs(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.ITweetWithSearchMetadataDTO})">
            <summary>Sets the stub of ITweetFactory.GenerateTweetsWithSearchMetadataFromDTOs(IEnumerable`1&lt;ITweetWithSearchMetadataDTO&gt; tweetsDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetFactory#GetTweet(System.Int64)">
            <summary>Sets the stub of ITweetFactory.GetTweet(Int64 tweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetFactory#GetTweets(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>Sets the stub of ITweetFactory.GetTweets(IEnumerable`1&lt;Int64&gt; tweetIds)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Factories.ITweetListFactory</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.#ctor">
            <summary>Initializes a new instance of type StubITweetListFactory</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.CreateListStringPrivacyModeString">
            <summary>Sets the stub of ITweetListFactory.CreateList(String name, PrivacyMode privacyMode, String description)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.GenerateTweetListFromDTOITweetListDTO">
            <summary>Sets the stub of ITweetListFactory.GenerateTweetListFromDTO(ITweetListDTO tweetListDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.GenerateTweetListFromJsonString">
            <summary>Sets the stub of ITweetListFactory.GenerateTweetListFromJson(String jsonList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.GenerateTweetListsFromDTOIEnumerableOfITweetListDTO">
            <summary>Sets the stub of ITweetListFactory.GenerateTweetListsFromDTO(IEnumerable`1&lt;ITweetListDTO&gt; tweetListsDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.GetExistingTweetListITweetList">
            <summary>Sets the stub of ITweetListFactory.GetExistingTweetList(ITweetList list)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.GetExistingTweetListITweetListDTO">
            <summary>Sets the stub of ITweetListFactory.GetExistingTweetList(ITweetListDTO listDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.GetExistingTweetListInt64">
            <summary>Sets the stub of ITweetListFactory.GetExistingTweetList(Int64 listId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.GetExistingTweetListStringIUser">
            <summary>Sets the stub of ITweetListFactory.GetExistingTweetList(String slug, IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.GetExistingTweetListStringIUserIdentifier">
            <summary>Sets the stub of ITweetListFactory.GetExistingTweetList(String slug, IUserIdentifier userDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.GetExistingTweetListStringInt64">
            <summary>Sets the stub of ITweetListFactory.GetExistingTweetList(String slug, Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.GetExistingTweetListStringString">
            <summary>Sets the stub of ITweetListFactory.GetExistingTweetList(String slug, String userScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetListFactory#CreateList(System.String,Tweetinvi.Core.Enum.PrivacyMode,System.String)">
            <summary>Sets the stub of ITweetListFactory.CreateList(String name, PrivacyMode privacyMode, String description)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetListFactory#GenerateTweetListFromDTO(Tweetinvi.Core.Interfaces.DTO.ITweetListDTO)">
            <summary>Sets the stub of ITweetListFactory.GenerateTweetListFromDTO(ITweetListDTO tweetListDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetListFactory#GenerateTweetListFromJson(System.String)">
            <summary>Sets the stub of ITweetListFactory.GenerateTweetListFromJson(String jsonList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetListFactory#GenerateTweetListsFromDTO(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.ITweetListDTO})">
            <summary>Sets the stub of ITweetListFactory.GenerateTweetListsFromDTO(IEnumerable`1&lt;ITweetListDTO&gt; tweetListsDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetListFactory#GetExistingTweetList(Tweetinvi.Core.Interfaces.ITweetList)">
            <summary>Sets the stub of ITweetListFactory.GetExistingTweetList(ITweetList list)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetListFactory#GetExistingTweetList(Tweetinvi.Core.Interfaces.DTO.ITweetListDTO)">
            <summary>Sets the stub of ITweetListFactory.GetExistingTweetList(ITweetListDTO listDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetListFactory#GetExistingTweetList(System.Int64)">
            <summary>Sets the stub of ITweetListFactory.GetExistingTweetList(Int64 listId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetListFactory#GetExistingTweetList(System.String,System.Int64)">
            <summary>Sets the stub of ITweetListFactory.GetExistingTweetList(String slug, Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetListFactory#GetExistingTweetList(System.String,Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of ITweetListFactory.GetExistingTweetList(String slug, IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetListFactory#GetExistingTweetList(System.String,Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of ITweetListFactory.GetExistingTweetList(String slug, IUserIdentifier userDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubITweetListFactory.tc::Tweetinvi#Core#Interfaces#Factories#ITweetListFactory#GetExistingTweetList(System.String,System.String)">
            <summary>Sets the stub of ITweetListFactory.GetExistingTweetList(String slug, String userScreenName)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Factories.IUserFactory</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.#ctor">
            <summary>Initializes a new instance of type StubIUserFactory</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.GenerateLoggedUserFromDTOIUserDTO">
            <summary>Sets the stub of IUserFactory.GenerateLoggedUserFromDTO(IUserDTO userDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.GenerateUserFromDTOIUserDTO">
            <summary>Sets the stub of IUserFactory.GenerateUserFromDTO(IUserDTO userDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.GenerateUserFromJsonString">
            <summary>Sets the stub of IUserFactory.GenerateUserFromJson(String jsonUser)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.GenerateUserIdentifierFromIdInt64">
            <summary>Sets the stub of IUserFactory.GenerateUserIdentifierFromId(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.GenerateUserIdentifierFromScreenNameString">
            <summary>Sets the stub of IUserFactory.GenerateUserIdentifierFromScreenName(String userScreenName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.GenerateUsersFromDTOIEnumerableOfIUserDTO">
            <summary>Sets the stub of IUserFactory.GenerateUsersFromDTO(IEnumerable`1&lt;IUserDTO&gt; usersDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.GetLoggedUser">
            <summary>Sets the stub of IUserFactory.GetLoggedUser()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.GetLoggedUserIOAuthCredentials">
            <summary>Sets the stub of IUserFactory.GetLoggedUser(IOAuthCredentials credentials)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.GetUserFromIdInt64">
            <summary>Sets the stub of IUserFactory.GetUserFromId(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.GetUserFromScreenNameString">
            <summary>Sets the stub of IUserFactory.GetUserFromScreenName(String userName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.GetUserIdentifierFromUserIUser">
            <summary>Sets the stub of IUserFactory.GetUserIdentifierFromUser(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.GetUsersFromIdsIEnumerableOfInt64">
            <summary>Sets the stub of IUserFactory.GetUsersFromIds(IEnumerable`1&lt;Int64&gt; userIds)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.GetUsersFromScreenNamesIEnumerableOfString">
            <summary>Sets the stub of IUserFactory.GetUsersFromScreenNames(IEnumerable`1&lt;String&gt; userNames)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserFactory#GenerateLoggedUserFromDTO(Tweetinvi.Core.Interfaces.DTO.IUserDTO)">
            <summary>Sets the stub of IUserFactory.GenerateLoggedUserFromDTO(IUserDTO userDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserFactory#GenerateUserFromDTO(Tweetinvi.Core.Interfaces.DTO.IUserDTO)">
            <summary>Sets the stub of IUserFactory.GenerateUserFromDTO(IUserDTO userDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserFactory#GenerateUserFromJson(System.String)">
            <summary>Sets the stub of IUserFactory.GenerateUserFromJson(String jsonUser)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserFactory#GenerateUserIdentifierFromId(System.Int64)">
            <summary>Sets the stub of IUserFactory.GenerateUserIdentifierFromId(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserFactory#GenerateUserIdentifierFromScreenName(System.String)">
            <summary>Sets the stub of IUserFactory.GenerateUserIdentifierFromScreenName(String userScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserFactory#GenerateUsersFromDTO(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.IUserDTO})">
            <summary>Sets the stub of IUserFactory.GenerateUsersFromDTO(IEnumerable`1&lt;IUserDTO&gt; usersDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserFactory#GetLoggedUser">
            <summary>Sets the stub of IUserFactory.GetLoggedUser()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserFactory#GetLoggedUser(Tweetinvi.Core.Interfaces.oAuth.IOAuthCredentials)">
            <summary>Sets the stub of IUserFactory.GetLoggedUser(IOAuthCredentials credentials)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserFactory#GetUserFromId(System.Int64)">
            <summary>Sets the stub of IUserFactory.GetUserFromId(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserFactory#GetUserFromScreenName(System.String)">
            <summary>Sets the stub of IUserFactory.GetUserFromScreenName(String userName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserFactory#GetUserIdentifierFromUser(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IUserFactory.GetUserIdentifierFromUser(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserFactory#GetUsersFromIds(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>Sets the stub of IUserFactory.GetUsersFromIds(IEnumerable`1&lt;Int64&gt; userIds)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserFactory#GetUsersFromScreenNames(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Sets the stub of IUserFactory.GetUsersFromScreenNames(IEnumerable`1&lt;String&gt; userNames)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserIdentifierFactory">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Factories.IUserIdentifierFactory</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserIdentifierFactory.#ctor">
            <summary>Initializes a new instance of type StubIUserIdentifierFactory</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserIdentifierFactory.CreateInt64">
            <summary>Sets the stub of IUserIdentifierFactory.Create(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserIdentifierFactory.CreateString">
            <summary>Sets the stub of IUserIdentifierFactory.Create(String userScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserIdentifierFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserIdentifierFactory#Create(System.Int64)">
            <summary>Sets the stub of IUserIdentifierFactory.Create(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Factories.Fakes.StubIUserIdentifierFactory.tc::Tweetinvi#Core#Interfaces#Factories#IUserIdentifierFactory#Create(System.String)">
            <summary>Sets the stub of IUserIdentifierFactory.Create(String userScreenName)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser">
            <summary>Stub type of Tweetinvi.Core.Interfaces.ILoggedUser</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.#ctor">
            <summary>Initializes a new instance of type StubILoggedUser</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AccountSettingsGet">
            <summary>Sets the stub of ILoggedUser.get_AccountSettings()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AccountSettingsSetIAccountSettings">
            <summary>Sets the stub of ILoggedUser.set_AccountSettings(IAccountSettings value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToAccountSettings">
            <summary>Attaches delegates to emulate StubILoggedUser.AccountSettings as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToContributees">
            <summary>Attaches delegates to emulate StubILoggedUser.Contributees as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToContributors">
            <summary>Attaches delegates to emulate StubILoggedUser.Contributors as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToFollowerIds">
            <summary>Attaches delegates to emulate StubILoggedUser.FollowerIds as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToFollowers">
            <summary>Attaches delegates to emulate StubILoggedUser.Followers as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToFriendIds">
            <summary>Attaches delegates to emulate StubILoggedUser.FriendIds as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToFriends">
            <summary>Attaches delegates to emulate StubILoggedUser.Friends as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToFriendsRetweets">
            <summary>Attaches delegates to emulate StubILoggedUser.FriendsRetweets as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToLatestHomeTimeline">
            <summary>Attaches delegates to emulate StubILoggedUser.LatestHomeTimeline as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToLatestMentionsTimeline">
            <summary>Attaches delegates to emulate StubILoggedUser.LatestMentionsTimeline as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToRetweets">
            <summary>Attaches delegates to emulate StubILoggedUser.Retweets as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToSuggestedUserList">
            <summary>Attaches delegates to emulate StubILoggedUser.SuggestedUserList as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToTimeline">
            <summary>Attaches delegates to emulate StubILoggedUser.Timeline as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToTweetsRetweetedByFollowers">
            <summary>Attaches delegates to emulate StubILoggedUser.TweetsRetweetedByFollowers as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.AttachBackingFieldToUserDTO">
            <summary>Attaches delegates to emulate StubILoggedUser.UserDTO as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.BlockAsync">
            <summary>Sets the stub of IUserAsync.BlockAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.BlockUser">
            <summary>Sets the stub of IUser.BlockUser()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.BlockUserIUser">
            <summary>Sets the stub of ILoggedUser.BlockUser(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.BlockUserIUserIdentifier">
            <summary>Sets the stub of ILoggedUser.BlockUser(IUserIdentifier userIdentifier)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.BlockUserInt64">
            <summary>Sets the stub of ILoggedUser.BlockUser(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.BlockUserString">
            <summary>Sets the stub of ILoggedUser.BlockUser(String userName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ContributeesGet">
            <summary>Sets the stub of IUser.get_Contributees()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ContributeesSetListOfIUser">
            <summary>Sets the stub of IUser.set_Contributees(List`1&lt;IUser&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ContributorsEnabledGet">
            <summary>Sets the stub of IUser.get_ContributorsEnabled()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ContributorsGet">
            <summary>Sets the stub of IUser.get_Contributors()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ContributorsSetListOfIUser">
            <summary>Sets the stub of IUser.set_Contributors(List`1&lt;IUser&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.CreatedAtGet">
            <summary>Sets the stub of IUser.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.CredentialsGet">
            <summary>Sets the stub of ILoggedUser.get_Credentials()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.DefaultProfileGet">
            <summary>Sets the stub of IUser.get_DefaultProfile()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.DefaultProfileImageGet">
            <summary>Sets the stub of IUser.get_DefaultProfileImage()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.DescriptionGet">
            <summary>Sets the stub of IUser.get_Description()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.EntitiesGet">
            <summary>Sets the stub of IUser.get_Entities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.EqualsIUser">
            <summary>Sets the stub of IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FavouritesCountGet">
            <summary>Sets the stub of IUser.get_FavouritesCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FollowRequestSentGet">
            <summary>Sets the stub of IUser.get_FollowRequestSent()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FollowUserAsyncIUser">
            <summary>Sets the stub of ILoggedUserAsync.FollowUserAsync(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FollowUserIUser">
            <summary>Sets the stub of ILoggedUser.FollowUser(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FollowUserInt64">
            <summary>Sets the stub of ILoggedUser.FollowUser(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FollowerIdsGet">
            <summary>Sets the stub of IUser.get_FollowerIds()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FollowerIdsSetListOfInt64">
            <summary>Sets the stub of IUser.set_FollowerIds(List`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FollowersCountGet">
            <summary>Sets the stub of IUser.get_FollowersCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FollowersGet">
            <summary>Sets the stub of IUser.get_Followers()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FollowersSetListOfIUser">
            <summary>Sets the stub of IUser.set_Followers(List`1&lt;IUser&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FollowingGet">
            <summary>Sets the stub of IUser.get_Following()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FriendIdsGet">
            <summary>Sets the stub of IUser.get_FriendIds()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FriendIdsSetListOfInt64">
            <summary>Sets the stub of IUser.set_FriendIds(List`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FriendsCountGet">
            <summary>Sets the stub of IUser.get_FriendsCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FriendsGet">
            <summary>Sets the stub of IUser.get_Friends()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FriendsRetweetsGet">
            <summary>Sets the stub of IUser.get_FriendsRetweets()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FriendsRetweetsSetListOfITweet">
            <summary>Sets the stub of IUser.set_FriendsRetweets(List`1&lt;ITweet&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.FriendsSetListOfIUser">
            <summary>Sets the stub of IUser.set_Friends(List`1&lt;IUser&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GeoEnabledGet">
            <summary>Sets the stub of IUser.get_GeoEnabled()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetAccountSettings">
            <summary>Sets the stub of ILoggedUser.GetAccountSettings()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetAccountSettingsAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetAccountSettingsAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetBlockedUserIds">
            <summary>Sets the stub of ILoggedUser.GetBlockedUserIds()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetBlockedUsers">
            <summary>Sets the stub of ILoggedUser.GetBlockedUsers()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetBlockedUsersAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetBlockedUsersAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetBlockedUsersIdsAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetBlockedUsersIdsAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetContributeesAsyncBoolean">
            <summary>Sets the stub of IUserAsync.GetContributeesAsync(Boolean createContributeeList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetContributeesBoolean">
            <summary>Sets the stub of IUser.GetContributees(Boolean createContributeeList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetContributorsAsyncBoolean">
            <summary>Sets the stub of IUserAsync.GetContributorsAsync(Boolean createContributorList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetContributorsBoolean">
            <summary>Sets the stub of IUser.GetContributors(Boolean createContributorList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetFavoritesAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFavoritesAsync(Int32 maximumTweets)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetFavoritesInt32">
            <summary>Sets the stub of IUser.GetFavorites(Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetFollowerIdsAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFollowerIdsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetFollowerIdsInt32">
            <summary>Sets the stub of IUser.GetFollowerIds(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetFollowersAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFollowersAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetFollowersInt32">
            <summary>Sets the stub of IUser.GetFollowers(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetFriendIdsAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFriendIdsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetFriendIdsInt32">
            <summary>Sets the stub of IUser.GetFriendIds(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetFriendsAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFriendsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetFriendsInt32">
            <summary>Sets the stub of IUser.GetFriends(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetHomeTimelineAsyncITimelineRequestParameters">
            <summary>Sets the stub of ILoggedUserAsync.GetHomeTimelineAsync(ITimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetHomeTimelineAsyncInt32">
            <summary>Sets the stub of ILoggedUserAsync.GetHomeTimelineAsync(Int32 count)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetHomeTimelineITimelineRequestParameters">
            <summary>Sets the stub of ILoggedUser.GetHomeTimeline(ITimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetHomeTimelineInt32">
            <summary>Sets the stub of ILoggedUser.GetHomeTimeline(Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetLatestMessagesReceivedAsyncInt32">
            <summary>Sets the stub of ILoggedUserAsync.GetLatestMessagesReceivedAsync(Int32 count)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetLatestMessagesReceivedInt32">
            <summary>Sets the stub of ILoggedUser.GetLatestMessagesReceived(Int32 count)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetLatestMessagesSentAsyncInt32">
            <summary>Sets the stub of ILoggedUserAsync.GetLatestMessagesSentAsync(Int32 maximumMessages)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetLatestMessagesSentInt32">
            <summary>Sets the stub of ILoggedUser.GetLatestMessagesSent(Int32 maximumMessages)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetMentionsTimelineAsyncInt32">
            <summary>Sets the stub of ILoggedUserAsync.GetMentionsTimelineAsync(Int32 count)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetMentionsTimelineInt32">
            <summary>Sets the stub of ILoggedUser.GetMentionsTimeline(Int32 maximumNumberOfMentions)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetProfileImageStreamAsyncImageSize">
            <summary>Sets the stub of IUserAsync.GetProfileImageStreamAsync(ImageSize imageSize)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetProfileImageStreamImageSize">
            <summary>Sets the stub of IUser.GetProfileImageStream(ImageSize imageSize)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetRelationshipStatesAssociatedWithAsyncIEnumerableOfIUser">
            <summary>Sets the stub of ILoggedUserAsync.GetRelationshipStatesAssociatedWithAsync(IEnumerable`1&lt;IUser&gt; users)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetRelationshipStatesAssociatedWithIEnumerableOfIUser">
            <summary>Sets the stub of ILoggedUser.GetRelationshipStatesAssociatedWith(IEnumerable`1&lt;IUser&gt; users)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetRelationshipStatesWithAsyncIEnumerableOfIUser">
            <summary>Sets the stub of ILoggedUserAsync.GetRelationshipStatesWithAsync(IEnumerable`1&lt;IUser&gt; users)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetRelationshipStatesWithIEnumerableOfIUser">
            <summary>Sets the stub of ILoggedUser.GetRelationshipStatesWith(IEnumerable`1&lt;IUser&gt; users)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetRelationshipWithAsyncIUser">
            <summary>Sets the stub of IUserAsync.GetRelationshipWithAsync(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetRelationshipWithIUser">
            <summary>Sets the stub of IUser.GetRelationshipWith(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetSavedSearches">
            <summary>Sets the stub of ILoggedUser.GetSavedSearches()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetSavedSearchesAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetSavedSearchesAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetSuggestedUserListAsyncBoolean">
            <summary>Sets the stub of ILoggedUserAsync.GetSuggestedUserListAsync(Boolean createSuggestedUserList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetSuggestedUserListBoolean">
            <summary>Sets the stub of ILoggedUser.GetSuggestedUserList(Boolean createSuggestedUserList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetUserTimelineAsyncIUserTimelineRequestParameters">
            <summary>Sets the stub of IUserAsync.GetUserTimelineAsync(IUserTimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetUserTimelineAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetUserTimelineAsync(Int32 maximumTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetUserTimelineIUserTimelineRequestParameters">
            <summary>Sets the stub of IUser.GetUserTimeline(IUserTimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetUserTimelineInt32">
            <summary>Sets the stub of IUser.GetUserTimeline(Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetUsersRequestingFriendship">
            <summary>Sets the stub of ILoggedUser.GetUsersRequestingFriendship()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetUsersRequestingFriendshipAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetUsersRequestingFriendshipAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetUsersYouRequestedToFollow">
            <summary>Sets the stub of ILoggedUser.GetUsersYouRequestedToFollow()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.GetUsersYouRequestedToFollowAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetUsersYouRequestedToFollowAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.IdGet">
            <summary>Sets the stub of IUser.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.IdStrGet">
            <summary>Sets the stub of IUser.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.IsTranslatorGet">
            <summary>Sets the stub of IUser.get_IsTranslator()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.LanguageGet">
            <summary>Sets the stub of IUser.get_Language()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.LatestDirectMessagesReceivedGet">
            <summary>Sets the stub of ILoggedUser.get_LatestDirectMessagesReceived()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.LatestDirectMessagesSentGet">
            <summary>Sets the stub of ILoggedUser.get_LatestDirectMessagesSent()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.LatestHomeTimelineGet">
            <summary>Sets the stub of ILoggedUser.get_LatestHomeTimeline()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.LatestHomeTimelineSetIEnumerableOfITweet">
            <summary>Sets the stub of ILoggedUser.set_LatestHomeTimeline(IEnumerable`1&lt;ITweet&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.LatestMentionsTimelineGet">
            <summary>Sets the stub of ILoggedUser.get_LatestMentionsTimeline()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.LatestMentionsTimelineSetIEnumerableOfIMention">
            <summary>Sets the stub of ILoggedUser.set_LatestMentionsTimeline(IEnumerable`1&lt;IMention&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ListedCountGet">
            <summary>Sets the stub of IUser.get_ListedCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.LocationGet">
            <summary>Sets the stub of IUser.get_Location()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.NameGet">
            <summary>Sets the stub of IUser.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.NotificationsGet">
            <summary>Sets the stub of IUser.get_Notifications()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ProfileBackgroundColorGet">
            <summary>Sets the stub of IUser.get_ProfileBackgroundColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ProfileBackgroundImageUrlGet">
            <summary>Sets the stub of IUser.get_ProfileBackgroundImageUrl()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ProfileBackgroundImageUrlHttpsGet">
            <summary>Sets the stub of IUser.get_ProfileBackgroundImageUrlHttps()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ProfileBackgroundTitleGet">
            <summary>Sets the stub of IUser.get_ProfileBackgroundTitle()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ProfileBannerURLGet">
            <summary>Sets the stub of IUser.get_ProfileBannerURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ProfileImageFullSizeUrlGet">
            <summary>Sets the stub of IUser.get_ProfileImageFullSizeUrl()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ProfileImageUrlGet">
            <summary>Sets the stub of IUser.get_ProfileImageUrl()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ProfileImageUrlHttpsGet">
            <summary>Sets the stub of IUser.get_ProfileImageUrlHttps()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ProfileLinkColorGet">
            <summary>Sets the stub of IUser.get_ProfileLinkColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ProfileSidebarBorderColorGet">
            <summary>Sets the stub of IUser.get_ProfileSidebarBorderColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ProfileSidebarFillColorGet">
            <summary>Sets the stub of IUser.get_ProfileSidebarFillColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ProfileTextColorGet">
            <summary>Sets the stub of IUser.get_ProfileTextColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ProfileUseBackgroundImageGet">
            <summary>Sets the stub of IUser.get_ProfileUseBackgroundImage()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ProtectedGet">
            <summary>Sets the stub of IUser.get_Protected()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.PublishMessageAsyncIMessage">
            <summary>Sets the stub of ILoggedUserAsync.PublishMessageAsync(IMessage message)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.PublishMessageIMessage">
            <summary>Sets the stub of ILoggedUser.PublishMessage(IMessage message)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.PublishTweetITweet">
            <summary>Sets the stub of ILoggedUser.PublishTweet(ITweet tweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.PublishTweetString">
            <summary>Sets the stub of ILoggedUser.PublishTweet(String text)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.RetweetsGet">
            <summary>Sets the stub of IUser.get_Retweets()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.RetweetsSetListOfITweet">
            <summary>Sets the stub of IUser.set_Retweets(List`1&lt;ITweet&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ScreenNameGet">
            <summary>Sets the stub of IUser.get_ScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.SetCredentialsIOAuthCredentials">
            <summary>Sets the stub of ILoggedUser.SetCredentials(IOAuthCredentials credentials)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.ShowAllInlineMediaGet">
            <summary>Sets the stub of IUser.get_ShowAllInlineMedia()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.StatusGet">
            <summary>Sets the stub of IUser.get_Status()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.StatusesCountGet">
            <summary>Sets the stub of IUser.get_StatusesCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.SuggestedUserListGet">
            <summary>Sets the stub of ILoggedUser.get_SuggestedUserList()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.SuggestedUserListSetIEnumerableOfISuggestedUserList">
            <summary>Sets the stub of ILoggedUser.set_SuggestedUserList(IEnumerable`1&lt;ISuggestedUserList&gt; value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.global::System#IEquatable{Tweetinvi#Core#Interfaces#IUser}#Equals(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.TimeZoneGet">
            <summary>Sets the stub of IUser.get_TimeZone()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.TimelineGet">
            <summary>Sets the stub of IUser.get_Timeline()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.TimelineSetListOfITweet">
            <summary>Sets the stub of IUser.set_Timeline(List`1&lt;ITweet&gt; value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#FollowUserAsync(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of ILoggedUserAsync.FollowUserAsync(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetAccountSettingsAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetAccountSettingsAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetBlockedUsersAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetBlockedUsersAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetBlockedUsersIdsAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetBlockedUsersIdsAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetHomeTimelineAsync(Tweetinvi.Core.Interfaces.Models.Parameters.ITimelineRequestParameters)">
            <summary>Sets the stub of ILoggedUserAsync.GetHomeTimelineAsync(ITimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetHomeTimelineAsync(System.Int32)">
            <summary>Sets the stub of ILoggedUserAsync.GetHomeTimelineAsync(Int32 count)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetLatestMessagesReceivedAsync(System.Int32)">
            <summary>Sets the stub of ILoggedUserAsync.GetLatestMessagesReceivedAsync(Int32 count)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetLatestMessagesSentAsync(System.Int32)">
            <summary>Sets the stub of ILoggedUserAsync.GetLatestMessagesSentAsync(Int32 maximumMessages)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetMentionsTimelineAsync(System.Int32)">
            <summary>Sets the stub of ILoggedUserAsync.GetMentionsTimelineAsync(Int32 count)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetRelationshipStatesAssociatedWithAsync(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.IUser})">
            <summary>Sets the stub of ILoggedUserAsync.GetRelationshipStatesAssociatedWithAsync(IEnumerable`1&lt;IUser&gt; users)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetRelationshipStatesWithAsync(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.IUser})">
            <summary>Sets the stub of ILoggedUserAsync.GetRelationshipStatesWithAsync(IEnumerable`1&lt;IUser&gt; users)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetSavedSearchesAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetSavedSearchesAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetSuggestedUserListAsync(System.Boolean)">
            <summary>Sets the stub of ILoggedUserAsync.GetSuggestedUserListAsync(Boolean createSuggestedUserList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetUsersRequestingFriendshipAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetUsersRequestingFriendshipAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#GetUsersYouRequestedToFollowAsync">
            <summary>Sets the stub of ILoggedUserAsync.GetUsersYouRequestedToFollowAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#PublishMessageAsync(Tweetinvi.Core.Interfaces.IMessage)">
            <summary>Sets the stub of ILoggedUserAsync.PublishMessageAsync(IMessage message)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#UnFollowUserAsync(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of ILoggedUserAsync.UnFollowUserAsync(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#ILoggedUserAsync#UpdateRelationshipAuthorizationsWithAsync(Tweetinvi.Core.Interfaces.IUser,System.Boolean,System.Boolean)">
            <summary>Sets the stub of ILoggedUserAsync.UpdateRelationshipAuthorizationsWithAsync(IUser user, Boolean retweetsEnabled, Boolean deviceNotificationsEnabled)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#BlockAsync">
            <summary>Sets the stub of IUserAsync.BlockAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetContributeesAsync(System.Boolean)">
            <summary>Sets the stub of IUserAsync.GetContributeesAsync(Boolean createContributeeList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetContributorsAsync(System.Boolean)">
            <summary>Sets the stub of IUserAsync.GetContributorsAsync(Boolean createContributorList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFavoritesAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFavoritesAsync(Int32 maximumTweets)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFollowerIdsAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFollowerIdsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFollowersAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFollowersAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFriendIdsAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFriendIdsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFriendsAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFriendsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetProfileImageStreamAsync(Tweetinvi.Core.Enum.ImageSize)">
            <summary>Sets the stub of IUserAsync.GetProfileImageStreamAsync(ImageSize imageSize)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetRelationshipWithAsync(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IUserAsync.GetRelationshipWithAsync(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetUserTimelineAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetUserTimelineAsync(Int32 maximumTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetUserTimelineAsync(Tweetinvi.Core.Interfaces.Models.Parameters.IUserTimelineRequestParameters)">
            <summary>Sets the stub of IUserAsync.GetUserTimelineAsync(IUserTimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#UnBlockAsync">
            <summary>Sets the stub of IUserAsync.UnBlockAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#BlockUser(System.Int64)">
            <summary>Sets the stub of ILoggedUser.BlockUser(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#BlockUser(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of ILoggedUser.BlockUser(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#BlockUser(Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of ILoggedUser.BlockUser(IUserIdentifier userIdentifier)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#BlockUser(System.String)">
            <summary>Sets the stub of ILoggedUser.BlockUser(String userName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#FollowUser(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of ILoggedUser.FollowUser(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#FollowUser(System.Int64)">
            <summary>Sets the stub of ILoggedUser.FollowUser(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#GetAccountSettings">
            <summary>Sets the stub of ILoggedUser.GetAccountSettings()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#GetBlockedUserIds">
            <summary>Sets the stub of ILoggedUser.GetBlockedUserIds()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#GetBlockedUsers">
            <summary>Sets the stub of ILoggedUser.GetBlockedUsers()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#GetHomeTimeline(System.Int32)">
            <summary>Sets the stub of ILoggedUser.GetHomeTimeline(Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#GetHomeTimeline(Tweetinvi.Core.Interfaces.Models.Parameters.ITimelineRequestParameters)">
            <summary>Sets the stub of ILoggedUser.GetHomeTimeline(ITimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#GetLatestMessagesReceived(System.Int32)">
            <summary>Sets the stub of ILoggedUser.GetLatestMessagesReceived(Int32 count)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#GetLatestMessagesSent(System.Int32)">
            <summary>Sets the stub of ILoggedUser.GetLatestMessagesSent(Int32 maximumMessages)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#GetMentionsTimeline(System.Int32)">
            <summary>Sets the stub of ILoggedUser.GetMentionsTimeline(Int32 maximumNumberOfMentions)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#GetRelationshipStatesAssociatedWith(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.IUser})">
            <summary>Sets the stub of ILoggedUser.GetRelationshipStatesAssociatedWith(IEnumerable`1&lt;IUser&gt; users)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#GetRelationshipStatesWith(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.IUser})">
            <summary>Sets the stub of ILoggedUser.GetRelationshipStatesWith(IEnumerable`1&lt;IUser&gt; users)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#GetSavedSearches">
            <summary>Sets the stub of ILoggedUser.GetSavedSearches()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#GetSuggestedUserList(System.Boolean)">
            <summary>Sets the stub of ILoggedUser.GetSuggestedUserList(Boolean createSuggestedUserList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#GetUsersRequestingFriendship">
            <summary>Sets the stub of ILoggedUser.GetUsersRequestingFriendship()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#GetUsersYouRequestedToFollow">
            <summary>Sets the stub of ILoggedUser.GetUsersYouRequestedToFollow()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#PublishMessage(Tweetinvi.Core.Interfaces.IMessage)">
            <summary>Sets the stub of ILoggedUser.PublishMessage(IMessage message)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#PublishTweet(System.String)">
            <summary>Sets the stub of ILoggedUser.PublishTweet(String text)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#PublishTweet(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ILoggedUser.PublishTweet(ITweet tweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#SetCredentials(Tweetinvi.Core.Interfaces.oAuth.IOAuthCredentials)">
            <summary>Sets the stub of ILoggedUser.SetCredentials(IOAuthCredentials credentials)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#UnBlockUser(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of ILoggedUser.UnBlockUser(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#UnBlockUser(Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of ILoggedUser.UnBlockUser(IUserIdentifier userIdentifier)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#UnBlockUser(System.String)">
            <summary>Sets the stub of ILoggedUser.UnBlockUser(String userName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#UnBlockUser(System.Int64)">
            <summary>Sets the stub of ILoggedUser.UnBlockUser(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#UnFollowUser(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of ILoggedUser.UnFollowUser(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#UnFollowUser(System.Int64)">
            <summary>Sets the stub of ILoggedUser.UnFollowUser(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#UpdateRelationshipAuthorizationsWith(Tweetinvi.Core.Interfaces.IUser,System.Boolean,System.Boolean)">
            <summary>Sets the stub of ILoggedUser.UpdateRelationshipAuthorizationsWith(IUser user, Boolean retweetsEnabled, Boolean deviceNotificationsEnabled)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#BlockUser">
            <summary>Sets the stub of IUser.BlockUser()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#GetContributees(System.Boolean)">
            <summary>Sets the stub of IUser.GetContributees(Boolean createContributeeList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#GetContributors(System.Boolean)">
            <summary>Sets the stub of IUser.GetContributors(Boolean createContributorList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#GetFavorites(System.Int32)">
            <summary>Sets the stub of IUser.GetFavorites(Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#GetFollowerIds(System.Int32)">
            <summary>Sets the stub of IUser.GetFollowerIds(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#GetFollowers(System.Int32)">
            <summary>Sets the stub of IUser.GetFollowers(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#GetFriendIds(System.Int32)">
            <summary>Sets the stub of IUser.GetFriendIds(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#GetFriends(System.Int32)">
            <summary>Sets the stub of IUser.GetFriends(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#GetProfileImageStream(Tweetinvi.Core.Enum.ImageSize)">
            <summary>Sets the stub of IUser.GetProfileImageStream(ImageSize imageSize)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#GetRelationshipWith(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IUser.GetRelationshipWith(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#GetUserTimeline(System.Int32)">
            <summary>Sets the stub of IUser.GetUserTimeline(Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#GetUserTimeline(Tweetinvi.Core.Interfaces.Models.Parameters.IUserTimelineRequestParameters)">
            <summary>Sets the stub of IUser.GetUserTimeline(IUserTimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#UnBlockUser">
            <summary>Sets the stub of IUser.UnBlockUser()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.TweetsRetweetedByFollowersGet">
            <summary>Sets the stub of IUser.get_TweetsRetweetedByFollowers()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.TweetsRetweetedByFollowersSetListOfITweet">
            <summary>Sets the stub of IUser.set_TweetsRetweetedByFollowers(List`1&lt;ITweet&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UnBlockAsync">
            <summary>Sets the stub of IUserAsync.UnBlockAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UnBlockUser">
            <summary>Sets the stub of IUser.UnBlockUser()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UnBlockUserIUser">
            <summary>Sets the stub of ILoggedUser.UnBlockUser(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UnBlockUserIUserIdentifier">
            <summary>Sets the stub of ILoggedUser.UnBlockUser(IUserIdentifier userIdentifier)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UnBlockUserInt64">
            <summary>Sets the stub of ILoggedUser.UnBlockUser(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UnBlockUserString">
            <summary>Sets the stub of ILoggedUser.UnBlockUser(String userName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UnFollowUserAsyncIUser">
            <summary>Sets the stub of ILoggedUserAsync.UnFollowUserAsync(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UnFollowUserIUser">
            <summary>Sets the stub of ILoggedUser.UnFollowUser(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UnFollowUserInt64">
            <summary>Sets the stub of ILoggedUser.UnFollowUser(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UpdateRelationshipAuthorizationsWithAsyncIUserBooleanBoolean">
            <summary>Sets the stub of ILoggedUserAsync.UpdateRelationshipAuthorizationsWithAsync(IUser user, Boolean retweetsEnabled, Boolean deviceNotificationsEnabled)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UpdateRelationshipAuthorizationsWithIUserBooleanBoolean">
            <summary>Sets the stub of ILoggedUser.UpdateRelationshipAuthorizationsWith(IUser user, Boolean retweetsEnabled, Boolean deviceNotificationsEnabled)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UrlGet">
            <summary>Sets the stub of IUser.get_Url()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UserDTOGet">
            <summary>Sets the stub of IUser.get_UserDTO()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UserDTOSetIUserDTO">
            <summary>Sets the stub of IUser.set_UserDTO(IUserDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UserIdentifierGet">
            <summary>Sets the stub of IUser.get_UserIdentifier()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.UtcOffsetGet">
            <summary>Sets the stub of IUser.get_UtcOffset()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.VerifiedGet">
            <summary>Sets the stub of IUser.get_Verified()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.WithheldInCountriesGet">
            <summary>Sets the stub of IUser.get_WithheldInCountries()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.WithheldScopeGet">
            <summary>Sets the stub of IUser.get_WithheldScope()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#AccountSettings">
            <summary>Sets the stub of ILoggedUser.get_AccountSettings()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Contributees">
            <summary>Sets the stub of IUser.get_Contributees()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Contributors">
            <summary>Sets the stub of IUser.get_Contributors()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ContributorsEnabled">
            <summary>Sets the stub of IUser.get_ContributorsEnabled()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#CreatedAt">
            <summary>Sets the stub of IUser.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#Credentials">
            <summary>Sets the stub of ILoggedUser.get_Credentials()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#DefaultProfile">
            <summary>Sets the stub of IUser.get_DefaultProfile()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#DefaultProfileImage">
            <summary>Sets the stub of IUser.get_DefaultProfileImage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Description">
            <summary>Sets the stub of IUser.get_Description()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Entities">
            <summary>Sets the stub of IUser.get_Entities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#FavouritesCount">
            <summary>Sets the stub of IUser.get_FavouritesCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#FollowRequestSent">
            <summary>Sets the stub of IUser.get_FollowRequestSent()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#FollowerIds">
            <summary>Sets the stub of IUser.get_FollowerIds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Followers">
            <summary>Sets the stub of IUser.get_Followers()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#FollowersCount">
            <summary>Sets the stub of IUser.get_FollowersCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Following">
            <summary>Sets the stub of IUser.get_Following()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#FriendIds">
            <summary>Sets the stub of IUser.get_FriendIds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Friends">
            <summary>Sets the stub of IUser.get_Friends()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#FriendsCount">
            <summary>Sets the stub of IUser.get_FriendsCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#FriendsRetweets">
            <summary>Sets the stub of IUser.get_FriendsRetweets()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#GeoEnabled">
            <summary>Sets the stub of IUser.get_GeoEnabled()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Id">
            <summary>Sets the stub of IUser.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#IdStr">
            <summary>Sets the stub of IUser.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#IsTranslator">
            <summary>Sets the stub of IUser.get_IsTranslator()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Language">
            <summary>Sets the stub of IUser.get_Language()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#LatestDirectMessagesReceived">
            <summary>Sets the stub of ILoggedUser.get_LatestDirectMessagesReceived()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#LatestDirectMessagesSent">
            <summary>Sets the stub of ILoggedUser.get_LatestDirectMessagesSent()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#LatestHomeTimeline">
            <summary>Sets the stub of ILoggedUser.get_LatestHomeTimeline()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#LatestMentionsTimeline">
            <summary>Sets the stub of ILoggedUser.get_LatestMentionsTimeline()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ListedCount">
            <summary>Sets the stub of IUser.get_ListedCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Location">
            <summary>Sets the stub of IUser.get_Location()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Name">
            <summary>Sets the stub of IUser.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Notifications">
            <summary>Sets the stub of IUser.get_Notifications()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileBackgroundColor">
            <summary>Sets the stub of IUser.get_ProfileBackgroundColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileBackgroundImageUrl">
            <summary>Sets the stub of IUser.get_ProfileBackgroundImageUrl()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileBackgroundImageUrlHttps">
            <summary>Sets the stub of IUser.get_ProfileBackgroundImageUrlHttps()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileBackgroundTitle">
            <summary>Sets the stub of IUser.get_ProfileBackgroundTitle()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileBannerURL">
            <summary>Sets the stub of IUser.get_ProfileBannerURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileImageFullSizeUrl">
            <summary>Sets the stub of IUser.get_ProfileImageFullSizeUrl()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileImageUrl">
            <summary>Sets the stub of IUser.get_ProfileImageUrl()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileImageUrlHttps">
            <summary>Sets the stub of IUser.get_ProfileImageUrlHttps()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileLinkColor">
            <summary>Sets the stub of IUser.get_ProfileLinkColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileSidebarBorderColor">
            <summary>Sets the stub of IUser.get_ProfileSidebarBorderColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileSidebarFillColor">
            <summary>Sets the stub of IUser.get_ProfileSidebarFillColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileTextColor">
            <summary>Sets the stub of IUser.get_ProfileTextColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileUseBackgroundImage">
            <summary>Sets the stub of IUser.get_ProfileUseBackgroundImage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Protected">
            <summary>Sets the stub of IUser.get_Protected()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Retweets">
            <summary>Sets the stub of IUser.get_Retweets()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ScreenName">
            <summary>Sets the stub of IUser.get_ScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#ShowAllInlineMedia">
            <summary>Sets the stub of IUser.get_ShowAllInlineMedia()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Status">
            <summary>Sets the stub of IUser.get_Status()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#StatusesCount">
            <summary>Sets the stub of IUser.get_StatusesCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#ILoggedUser#SuggestedUserList">
            <summary>Sets the stub of ILoggedUser.get_SuggestedUserList()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#TimeZone">
            <summary>Sets the stub of IUser.get_TimeZone()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Timeline">
            <summary>Sets the stub of IUser.get_Timeline()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#TweetsRetweetedByFollowers">
            <summary>Sets the stub of IUser.get_TweetsRetweetedByFollowers()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Url">
            <summary>Sets the stub of IUser.get_Url()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#UserDTO">
            <summary>Sets the stub of IUser.get_UserDTO()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#UserIdentifier">
            <summary>Sets the stub of IUser.get_UserIdentifier()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#UtcOffset">
            <summary>Sets the stub of IUser.get_UtcOffset()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#Verified">
            <summary>Sets the stub of IUser.get_Verified()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#WithheldInCountries">
            <summary>Sets the stub of IUser.get_WithheldInCountries()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubILoggedUser.tc::Tweetinvi#Core#Interfaces#IUser#WithheldScope">
            <summary>Sets the stub of IUser.get_WithheldScope()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Fakes.StubIMention">
            <summary>Stub type of Tweetinvi.Core.Interfaces.IMention</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.#ctor">
            <summary>Initializes a new instance of type StubIMention</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.AddMediaByteArray">
            <summary>Sets the stub of ITweet.AddMedia(Byte[] data)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.AnnotationsGet">
            <summary>Sets the stub of IMention.get_Annotations()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.AnnotationsSetString">
            <summary>Sets the stub of IMention.set_Annotations(String value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.AttachBackingFieldToAnnotations">
            <summary>Attaches delegates to emulate StubIMention.Annotations as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.AttachBackingFieldToCoordinates">
            <summary>Attaches delegates to emulate StubIMention.Coordinates as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.AttachBackingFieldToInReplyToScreenName">
            <summary>Attaches delegates to emulate StubIMention.InReplyToScreenName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.AttachBackingFieldToInReplyToStatusId">
            <summary>Attaches delegates to emulate StubIMention.InReplyToStatusId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.AttachBackingFieldToInReplyToStatusIdStr">
            <summary>Attaches delegates to emulate StubIMention.InReplyToStatusIdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.AttachBackingFieldToInReplyToUserId">
            <summary>Attaches delegates to emulate StubIMention.InReplyToUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.AttachBackingFieldToInReplyToUserIdStr">
            <summary>Attaches delegates to emulate StubIMention.InReplyToUserIdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.AttachBackingFieldToRetweets">
            <summary>Attaches delegates to emulate StubIMention.Retweets as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubIMention.Source as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubIMention.Text as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.AttachBackingFieldToTweetDTO">
            <summary>Attaches delegates to emulate StubIMention.TweetDTO as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.ContributorsGet">
            <summary>Sets the stub of ITweet.get_Contributors()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.ContributorsIdsGet">
            <summary>Sets the stub of ITweet.get_ContributorsIds()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.CoordinatesGet">
            <summary>Sets the stub of ITweet.get_Coordinates()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.CoordinatesSetICoordinates">
            <summary>Sets the stub of ITweet.set_Coordinates(ICoordinates value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.CreatedAtGet">
            <summary>Sets the stub of ITweet.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.CreatorGet">
            <summary>Sets the stub of ITweet.get_Creator()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.CurrentUserRetweetIdentifierGet">
            <summary>Sets the stub of ITweet.get_CurrentUserRetweetIdentifier()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.Destroy">
            <summary>Sets the stub of ITweet.Destroy()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.DestroyAsync">
            <summary>Sets the stub of ITweetAsync.DestroyAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.EntitiesGet">
            <summary>Sets the stub of ITweet.get_Entities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.EqualsITweet">
            <summary>Sets the stub of IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.ExtendedEntitiesGet">
            <summary>Sets the stub of ITweet.get_ExtendedEntities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.Favourite">
            <summary>Sets the stub of ITweet.Favourite()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.FavouriteAsync">
            <summary>Sets the stub of ITweetAsync.FavouriteAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.FavouriteCountGet">
            <summary>Sets the stub of ITweet.get_FavouriteCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.FavouritedGet">
            <summary>Sets the stub of ITweet.get_Favourited()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.FilterLevelGet">
            <summary>Sets the stub of ITweet.get_FilterLevel()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.GenerateOEmbedTweet">
            <summary>Sets the stub of ITweet.GenerateOEmbedTweet()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.GenerateOEmbedTweetAsync">
            <summary>Sets the stub of ITweetAsync.GenerateOEmbedTweetAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.GetRetweets">
            <summary>Sets the stub of ITweet.GetRetweets()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.GetRetweetsAsync">
            <summary>Sets the stub of ITweetAsync.GetRetweetsAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.HashtagsGet">
            <summary>Sets the stub of ITweet.get_Hashtags()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.IdGet">
            <summary>Sets the stub of ITweetIdentifier.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.IdStrGet">
            <summary>Sets the stub of ITweetIdentifier.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.InReplyToScreenNameGet">
            <summary>Sets the stub of ITweet.get_InReplyToScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.InReplyToScreenNameSetString">
            <summary>Sets the stub of ITweet.set_InReplyToScreenName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.InReplyToStatusIdGet">
            <summary>Sets the stub of ITweet.get_InReplyToStatusId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.InReplyToStatusIdSetNullableOfInt64">
            <summary>Sets the stub of ITweet.set_InReplyToStatusId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.InReplyToStatusIdStrGet">
            <summary>Sets the stub of ITweet.get_InReplyToStatusIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.InReplyToStatusIdStrSetString">
            <summary>Sets the stub of ITweet.set_InReplyToStatusIdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.InReplyToUserIdGet">
            <summary>Sets the stub of ITweet.get_InReplyToUserId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.InReplyToUserIdSetNullableOfInt64">
            <summary>Sets the stub of ITweet.set_InReplyToUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.InReplyToUserIdStrGet">
            <summary>Sets the stub of ITweet.get_InReplyToUserIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.InReplyToUserIdStrSetString">
            <summary>Sets the stub of ITweet.set_InReplyToUserIdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.IsRetweetGet">
            <summary>Sets the stub of ITweet.get_IsRetweet()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.IsTweetDestroyedGet">
            <summary>Sets the stub of ITweet.get_IsTweetDestroyed()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.IsTweetPublishedGet">
            <summary>Sets the stub of ITweet.get_IsTweetPublished()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.LanguageGet">
            <summary>Sets the stub of ITweet.get_Language()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.LengthGet">
            <summary>Sets the stub of ITweet.get_Length()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.MediaGet">
            <summary>Sets the stub of ITweet.get_Media()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PlaceGet">
            <summary>Sets the stub of ITweet.get_Place()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PossiblySensitiveGet">
            <summary>Sets the stub of ITweet.get_PossiblySensitive()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.Publish">
            <summary>Sets the stub of ITweet.Publish()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishAsync">
            <summary>Sets the stub of ITweetAsync.PublishAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishInReplyToAsyncITweet">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishInReplyToAsyncInt64">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(Int64 replyToTweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishInReplyToITweet">
            <summary>Sets the stub of ITweet.PublishInReplyTo(ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishInReplyToInt64">
            <summary>Sets the stub of ITweet.PublishInReplyTo(Int64 replyToTweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishReplyAsyncString">
            <summary>Sets the stub of ITweetAsync.PublishReplyAsync(String text)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishReplyITweet">
            <summary>Sets the stub of ITweet.PublishReply(ITweet replyTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishReplyString">
            <summary>Sets the stub of ITweet.PublishReply(String text)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishRetweet">
            <summary>Sets the stub of ITweet.PublishRetweet()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishRetweetAsync">
            <summary>Sets the stub of ITweetAsync.PublishRetweetAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishWithGeoAsyncDoubleDouble">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(Double longitude, Double latitude)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishWithGeoAsyncICoordinates">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(ICoordinates coordinates)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishWithGeoDoubleDouble">
            <summary>Sets the stub of ITweet.PublishWithGeo(Double longitude, Double latitude)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishWithGeoICoordinates">
            <summary>Sets the stub of ITweet.PublishWithGeo(ICoordinates coordinates)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishWithGeoInReplyToAsyncDoubleDoubleITweet">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishWithGeoInReplyToAsyncDoubleDoubleInt64">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, Int64 replyToTweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishWithGeoInReplyToDoubleDoubleITweet">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(Double longitude, Double latitude, ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishWithGeoInReplyToDoubleDoubleInt64">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(Double longitude, Double latitude, Int64 replyToTweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.PublishWithGeoInReplyToICoordinatesITweet">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(ICoordinates coordinates, ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.RetweetCountGet">
            <summary>Sets the stub of ITweet.get_RetweetCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.RetweetedGet">
            <summary>Sets the stub of ITweet.get_Retweeted()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.RetweetedTweetGet">
            <summary>Sets the stub of ITweet.get_RetweetedTweet()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.RetweetsGet">
            <summary>Sets the stub of ITweet.get_Retweets()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.RetweetsSetListOfITweet">
            <summary>Sets the stub of ITweet.set_Retweets(List`1&lt;ITweet&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.ScopesGet">
            <summary>Sets the stub of ITweet.get_Scopes()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.SourceGet">
            <summary>Sets the stub of ITweet.get_Source()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.SourceSetString">
            <summary>Sets the stub of ITweet.set_Source(String value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.global::System#IEquatable{Tweetinvi#Core#Interfaces#ITweet}#Equals(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.TextGet">
            <summary>Sets the stub of ITweet.get_Text()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.TextSetString">
            <summary>Sets the stub of ITweet.set_Text(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.TruncatedGet">
            <summary>Sets the stub of ITweet.get_Truncated()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.TweetDTOGet">
            <summary>Sets the stub of ITweet.get_TweetDTO()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.TweetDTOSetITweetDTO">
            <summary>Sets the stub of ITweet.set_TweetDTO(ITweetDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.TweetLocalCreationDateGet">
            <summary>Sets the stub of ITweet.get_TweetLocalCreationDate()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.TweetRemainingCharacters">
            <summary>Sets the stub of ITweet.TweetRemainingCharacters()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#DestroyAsync">
            <summary>Sets the stub of ITweetAsync.DestroyAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#FavouriteAsync">
            <summary>Sets the stub of ITweetAsync.FavouriteAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#GenerateOEmbedTweetAsync">
            <summary>Sets the stub of ITweetAsync.GenerateOEmbedTweetAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#GetRetweetsAsync">
            <summary>Sets the stub of ITweetAsync.GetRetweetsAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishAsync">
            <summary>Sets the stub of ITweetAsync.PublishAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishInReplyToAsync(System.Int64)">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishInReplyToAsync(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishReplyAsync(System.String)">
            <summary>Sets the stub of ITweetAsync.PublishReplyAsync(String text)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishRetweetAsync">
            <summary>Sets the stub of ITweetAsync.PublishRetweetAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoAsync(Tweetinvi.Core.Interfaces.Models.ICoordinates)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(ICoordinates coordinates)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoAsync(System.Double,System.Double)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(Double longitude, Double latitude)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoInReplyToAsync(System.Double,System.Double,Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoInReplyToAsync(System.Double,System.Double,System.Int64)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#UnFavouriteAsync">
            <summary>Sets the stub of ITweetAsync.UnFavouriteAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#AddMedia(System.Byte[])">
            <summary>Sets the stub of ITweet.AddMedia(Byte[] data)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Destroy">
            <summary>Sets the stub of ITweet.Destroy()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Favourite">
            <summary>Sets the stub of ITweet.Favourite()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#GenerateOEmbedTweet">
            <summary>Sets the stub of ITweet.GenerateOEmbedTweet()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#GetRetweets">
            <summary>Sets the stub of ITweet.GetRetweets()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Publish">
            <summary>Sets the stub of ITweet.Publish()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#PublishInReplyTo(System.Int64)">
            <summary>Sets the stub of ITweet.PublishInReplyTo(Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#PublishInReplyTo(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweet.PublishInReplyTo(ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#PublishReply(System.String)">
            <summary>Sets the stub of ITweet.PublishReply(String text)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#PublishReply(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweet.PublishReply(ITweet replyTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#PublishRetweet">
            <summary>Sets the stub of ITweet.PublishRetweet()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeo(Tweetinvi.Core.Interfaces.Models.ICoordinates)">
            <summary>Sets the stub of ITweet.PublishWithGeo(ICoordinates coordinates)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeo(System.Double,System.Double)">
            <summary>Sets the stub of ITweet.PublishWithGeo(Double longitude, Double latitude)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeoInReplyTo(Tweetinvi.Core.Interfaces.Models.ICoordinates,Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(ICoordinates coordinates, ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeoInReplyTo(System.Double,System.Double,Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(Double longitude, Double latitude, ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeoInReplyTo(System.Double,System.Double,System.Int64)">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(Double longitude, Double latitude, Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#TweetRemainingCharacters">
            <summary>Sets the stub of ITweet.TweetRemainingCharacters()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#UnFavourite">
            <summary>Sets the stub of ITweet.UnFavourite()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.UnFavourite">
            <summary>Sets the stub of ITweet.UnFavourite()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.UnFavouriteAsync">
            <summary>Sets the stub of ITweetAsync.UnFavouriteAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.UrlsGet">
            <summary>Sets the stub of ITweet.get_Urls()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.UserMentionsGet">
            <summary>Sets the stub of ITweet.get_UserMentions()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.WithheldCopyrightGet">
            <summary>Sets the stub of ITweet.get_WithheldCopyright()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.WithheldInCountriesGet">
            <summary>Sets the stub of ITweet.get_WithheldInCountries()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMention.WithheldScopeGet">
            <summary>Sets the stub of ITweet.get_WithheldScope()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#IMention#Annotations">
            <summary>Sets the stub of IMention.get_Annotations()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Contributors">
            <summary>Sets the stub of ITweet.get_Contributors()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#ContributorsIds">
            <summary>Sets the stub of ITweet.get_ContributorsIds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Coordinates">
            <summary>Sets the stub of ITweet.get_Coordinates()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#CreatedAt">
            <summary>Sets the stub of ITweet.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Creator">
            <summary>Sets the stub of ITweet.get_Creator()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#CurrentUserRetweetIdentifier">
            <summary>Sets the stub of ITweet.get_CurrentUserRetweetIdentifier()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Entities">
            <summary>Sets the stub of ITweet.get_Entities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#ExtendedEntities">
            <summary>Sets the stub of ITweet.get_ExtendedEntities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#FavouriteCount">
            <summary>Sets the stub of ITweet.get_FavouriteCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Favourited">
            <summary>Sets the stub of ITweet.get_Favourited()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#FilterLevel">
            <summary>Sets the stub of ITweet.get_FilterLevel()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Hashtags">
            <summary>Sets the stub of ITweet.get_Hashtags()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Models#ITweetIdentifier#Id">
            <summary>Sets the stub of ITweetIdentifier.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#Models#ITweetIdentifier#IdStr">
            <summary>Sets the stub of ITweetIdentifier.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToScreenName">
            <summary>Sets the stub of ITweet.get_InReplyToScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToStatusId">
            <summary>Sets the stub of ITweet.get_InReplyToStatusId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToStatusIdStr">
            <summary>Sets the stub of ITweet.get_InReplyToStatusIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToUserId">
            <summary>Sets the stub of ITweet.get_InReplyToUserId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToUserIdStr">
            <summary>Sets the stub of ITweet.get_InReplyToUserIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#IsRetweet">
            <summary>Sets the stub of ITweet.get_IsRetweet()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#IsTweetDestroyed">
            <summary>Sets the stub of ITweet.get_IsTweetDestroyed()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#IsTweetPublished">
            <summary>Sets the stub of ITweet.get_IsTweetPublished()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Language">
            <summary>Sets the stub of ITweet.get_Language()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Length">
            <summary>Sets the stub of ITweet.get_Length()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Media">
            <summary>Sets the stub of ITweet.get_Media()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Place">
            <summary>Sets the stub of ITweet.get_Place()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#PossiblySensitive">
            <summary>Sets the stub of ITweet.get_PossiblySensitive()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#RetweetCount">
            <summary>Sets the stub of ITweet.get_RetweetCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Retweeted">
            <summary>Sets the stub of ITweet.get_Retweeted()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#RetweetedTweet">
            <summary>Sets the stub of ITweet.get_RetweetedTweet()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Retweets">
            <summary>Sets the stub of ITweet.get_Retweets()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Scopes">
            <summary>Sets the stub of ITweet.get_Scopes()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Source">
            <summary>Sets the stub of ITweet.get_Source()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Text">
            <summary>Sets the stub of ITweet.get_Text()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Truncated">
            <summary>Sets the stub of ITweet.get_Truncated()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#TweetDTO">
            <summary>Sets the stub of ITweet.get_TweetDTO()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#TweetLocalCreationDate">
            <summary>Sets the stub of ITweet.get_TweetLocalCreationDate()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#Urls">
            <summary>Sets the stub of ITweet.get_Urls()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#UserMentions">
            <summary>Sets the stub of ITweet.get_UserMentions()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#WithheldCopyright">
            <summary>Sets the stub of ITweet.get_WithheldCopyright()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#WithheldInCountries">
            <summary>Sets the stub of ITweet.get_WithheldInCountries()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMention.tc::Tweetinvi#Core#Interfaces#ITweet#WithheldScope">
            <summary>Sets the stub of ITweet.get_WithheldScope()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Fakes.StubIMessage">
            <summary>Stub type of Tweetinvi.Core.Interfaces.IMessage</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.#ctor">
            <summary>Initializes a new instance of type StubIMessage</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.AttachBackingFieldToMessageDTO">
            <summary>Attaches delegates to emulate StubIMessage.MessageDTO as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.CreatedAtGet">
            <summary>Sets the stub of IMessage.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.Destroy">
            <summary>Sets the stub of IMessage.Destroy()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.DestroyAsync">
            <summary>Sets the stub of IMessageAsync.DestroyAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.EqualsIMessage">
            <summary>Sets the stub of IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.IdGet">
            <summary>Sets the stub of IMessage.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.IsMessageDestroyedGet">
            <summary>Sets the stub of IMessage.get_IsMessageDestroyed()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.IsMessagePublishedGet">
            <summary>Sets the stub of IMessage.get_IsMessagePublished()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.MessageDTOGet">
            <summary>Sets the stub of IMessage.get_MessageDTO()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.MessageDTOSetIMessageDTO">
            <summary>Sets the stub of IMessage.set_MessageDTO(IMessageDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.Publish">
            <summary>Sets the stub of IMessage.Publish()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.PublishAsync">
            <summary>Sets the stub of IMessageAsync.PublishAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.PublishToAsyncIUser">
            <summary>Sets the stub of IMessageAsync.PublishToAsync(IUser recipient)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.PublishToIUser">
            <summary>Sets the stub of IMessage.PublishTo(IUser recipient)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.ReceiverGet">
            <summary>Sets the stub of IMessage.get_Receiver()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.ReceiverIdGet">
            <summary>Sets the stub of IMessage.get_ReceiverId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.ReceiverScreenNameGet">
            <summary>Sets the stub of IMessage.get_ReceiverScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.SenderGet">
            <summary>Sets the stub of IMessage.get_Sender()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.SenderIdGet">
            <summary>Sets the stub of IMessage.get_SenderId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.SenderScreenNameGet">
            <summary>Sets the stub of IMessage.get_SenderScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.SetRecipientIUser">
            <summary>Sets the stub of IMessage.SetRecipient(IUser recipient)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.global::System#IEquatable{Tweetinvi#Core#Interfaces#IMessage}#Equals(Tweetinvi.Core.Interfaces.IMessage)">
            <summary>Sets the stub of IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.TextGet">
            <summary>Sets the stub of IMessage.get_Text()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#Async#IMessageAsync#DestroyAsync">
            <summary>Sets the stub of IMessageAsync.DestroyAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#Async#IMessageAsync#PublishAsync">
            <summary>Sets the stub of IMessageAsync.PublishAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#Async#IMessageAsync#PublishToAsync(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IMessageAsync.PublishToAsync(IUser recipient)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#Destroy">
            <summary>Sets the stub of IMessage.Destroy()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#Publish">
            <summary>Sets the stub of IMessage.Publish()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#PublishTo(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IMessage.PublishTo(IUser recipient)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#SetRecipient(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IMessage.SetRecipient(IUser recipient)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#CreatedAt">
            <summary>Sets the stub of IMessage.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#Id">
            <summary>Sets the stub of IMessage.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#IsMessageDestroyed">
            <summary>Sets the stub of IMessage.get_IsMessageDestroyed()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#IsMessagePublished">
            <summary>Sets the stub of IMessage.get_IsMessagePublished()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#MessageDTO">
            <summary>Sets the stub of IMessage.get_MessageDTO()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#Receiver">
            <summary>Sets the stub of IMessage.get_Receiver()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#ReceiverId">
            <summary>Sets the stub of IMessage.get_ReceiverId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#ReceiverScreenName">
            <summary>Sets the stub of IMessage.get_ReceiverScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#Sender">
            <summary>Sets the stub of IMessage.get_Sender()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#SenderId">
            <summary>Sets the stub of IMessage.get_SenderId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#SenderScreenName">
            <summary>Sets the stub of IMessage.get_SenderScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIMessage.tc::Tweetinvi#Core#Interfaces#IMessage#Text">
            <summary>Sets the stub of IMessage.get_Text()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship">
            <summary>Stub type of Tweetinvi.Core.Interfaces.IRelationship</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.#ctor">
            <summary>Initializes a new instance of type StubIRelationship</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.AllRepliesGet">
            <summary>Sets the stub of IRelationship.get_AllReplies()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.BlockingGet">
            <summary>Sets the stub of IRelationship.get_Blocking()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.CanSendDirectMessageGet">
            <summary>Sets the stub of IRelationship.get_CanSendDirectMessage()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.FollowedByGet">
            <summary>Sets the stub of IRelationship.get_FollowedBy()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.FollowingGet">
            <summary>Sets the stub of IRelationship.get_Following()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.MarkedSpamGet">
            <summary>Sets the stub of IRelationship.get_MarkedSpam()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.NotificationsEnabledGet">
            <summary>Sets the stub of IRelationship.get_NotificationsEnabled()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.SourceIdGet">
            <summary>Sets the stub of IRelationship.get_SourceId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.SourceIdStrGet">
            <summary>Sets the stub of IRelationship.get_SourceIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.SourceScreenNameGet">
            <summary>Sets the stub of IRelationship.get_SourceScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.TargetIdGet">
            <summary>Sets the stub of IRelationship.get_TargetId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.TargetIdStrGet">
            <summary>Sets the stub of IRelationship.get_TargetIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.TargetScreenNameGet">
            <summary>Sets the stub of IRelationship.get_TargetScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.WantRetweetsGet">
            <summary>Sets the stub of IRelationship.get_WantRetweets()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.tc::Tweetinvi#Core#Interfaces#IRelationship#AllReplies">
            <summary>Sets the stub of IRelationship.get_AllReplies()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.tc::Tweetinvi#Core#Interfaces#IRelationship#Blocking">
            <summary>Sets the stub of IRelationship.get_Blocking()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.tc::Tweetinvi#Core#Interfaces#IRelationship#CanSendDirectMessage">
            <summary>Sets the stub of IRelationship.get_CanSendDirectMessage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.tc::Tweetinvi#Core#Interfaces#IRelationship#FollowedBy">
            <summary>Sets the stub of IRelationship.get_FollowedBy()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.tc::Tweetinvi#Core#Interfaces#IRelationship#Following">
            <summary>Sets the stub of IRelationship.get_Following()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.tc::Tweetinvi#Core#Interfaces#IRelationship#MarkedSpam">
            <summary>Sets the stub of IRelationship.get_MarkedSpam()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.tc::Tweetinvi#Core#Interfaces#IRelationship#NotificationsEnabled">
            <summary>Sets the stub of IRelationship.get_NotificationsEnabled()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.tc::Tweetinvi#Core#Interfaces#IRelationship#SourceId">
            <summary>Sets the stub of IRelationship.get_SourceId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.tc::Tweetinvi#Core#Interfaces#IRelationship#SourceIdStr">
            <summary>Sets the stub of IRelationship.get_SourceIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.tc::Tweetinvi#Core#Interfaces#IRelationship#SourceScreenName">
            <summary>Sets the stub of IRelationship.get_SourceScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.tc::Tweetinvi#Core#Interfaces#IRelationship#TargetId">
            <summary>Sets the stub of IRelationship.get_TargetId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.tc::Tweetinvi#Core#Interfaces#IRelationship#TargetIdStr">
            <summary>Sets the stub of IRelationship.get_TargetIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.tc::Tweetinvi#Core#Interfaces#IRelationship#TargetScreenName">
            <summary>Sets the stub of IRelationship.get_TargetScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIRelationship.tc::Tweetinvi#Core#Interfaces#IRelationship#WantRetweets">
            <summary>Sets the stub of IRelationship.get_WantRetweets()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Fakes.StubISearchQueryResult">
            <summary>Stub type of Tweetinvi.Core.Interfaces.ISearchQueryResult</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubISearchQueryResult.#ctor">
            <summary>Initializes a new instance of type StubISearchQueryResult</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubISearchQueryResult.AllTweetsFromQueryGet">
            <summary>Sets the stub of ISearchQueryResult.get_AllTweetsFromQuery()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubISearchQueryResult.FilteredTweetsGet">
            <summary>Sets the stub of ISearchQueryResult.get_FilteredTweets()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubISearchQueryResult.SearchMetadataGet">
            <summary>Sets the stub of ISearchQueryResult.get_SearchMetadata()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubISearchQueryResult.tc::Tweetinvi#Core#Interfaces#ISearchQueryResult#AllTweetsFromQuery">
            <summary>Sets the stub of ISearchQueryResult.get_AllTweetsFromQuery()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubISearchQueryResult.tc::Tweetinvi#Core#Interfaces#ISearchQueryResult#FilteredTweets">
            <summary>Sets the stub of ISearchQueryResult.get_FilteredTweets()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubISearchQueryResult.tc::Tweetinvi#Core#Interfaces#ISearchQueryResult#SearchMetadata">
            <summary>Sets the stub of ISearchQueryResult.get_SearchMetadata()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Fakes.StubISearchResult">
            <summary>Stub type of Tweetinvi.Core.Interfaces.ISearchResult</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubISearchResult.#ctor">
            <summary>Initializes a new instance of type StubISearchResult</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubISearchResult.NumberOfQueriesUsedToCompleteTheSearchGet">
            <summary>Sets the stub of ISearchResult.get_NumberOfQueriesUsedToCompleteTheSearch()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubISearchResult.SearchQueryResultsGet">
            <summary>Sets the stub of ISearchResult.get_SearchQueryResults()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubISearchResult.TweetsGet">
            <summary>Sets the stub of ISearchResult.get_Tweets()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubISearchResult.tc::Tweetinvi#Core#Interfaces#ISearchResult#NumberOfQueriesUsedToCompleteTheSearch">
            <summary>Sets the stub of ISearchResult.get_NumberOfQueriesUsedToCompleteTheSearch()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubISearchResult.tc::Tweetinvi#Core#Interfaces#ISearchResult#SearchQueryResults">
            <summary>Sets the stub of ISearchResult.get_SearchQueryResults()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubISearchResult.tc::Tweetinvi#Core#Interfaces#ISearchResult#Tweets">
            <summary>Sets the stub of ISearchResult.get_Tweets()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Fakes.StubITweet">
            <summary>Stub type of Tweetinvi.Core.Interfaces.ITweet</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.#ctor">
            <summary>Initializes a new instance of type StubITweet</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.AddMediaByteArray">
            <summary>Sets the stub of ITweet.AddMedia(Byte[] data)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.AttachBackingFieldToCoordinates">
            <summary>Attaches delegates to emulate StubITweet.Coordinates as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.AttachBackingFieldToInReplyToScreenName">
            <summary>Attaches delegates to emulate StubITweet.InReplyToScreenName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.AttachBackingFieldToInReplyToStatusId">
            <summary>Attaches delegates to emulate StubITweet.InReplyToStatusId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.AttachBackingFieldToInReplyToStatusIdStr">
            <summary>Attaches delegates to emulate StubITweet.InReplyToStatusIdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.AttachBackingFieldToInReplyToUserId">
            <summary>Attaches delegates to emulate StubITweet.InReplyToUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.AttachBackingFieldToInReplyToUserIdStr">
            <summary>Attaches delegates to emulate StubITweet.InReplyToUserIdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.AttachBackingFieldToRetweets">
            <summary>Attaches delegates to emulate StubITweet.Retweets as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubITweet.Source as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubITweet.Text as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.AttachBackingFieldToTweetDTO">
            <summary>Attaches delegates to emulate StubITweet.TweetDTO as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.ContributorsGet">
            <summary>Sets the stub of ITweet.get_Contributors()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.ContributorsIdsGet">
            <summary>Sets the stub of ITweet.get_ContributorsIds()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.CoordinatesGet">
            <summary>Sets the stub of ITweet.get_Coordinates()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.CoordinatesSetICoordinates">
            <summary>Sets the stub of ITweet.set_Coordinates(ICoordinates value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.CreatedAtGet">
            <summary>Sets the stub of ITweet.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.CreatorGet">
            <summary>Sets the stub of ITweet.get_Creator()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.CurrentUserRetweetIdentifierGet">
            <summary>Sets the stub of ITweet.get_CurrentUserRetweetIdentifier()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.Destroy">
            <summary>Sets the stub of ITweet.Destroy()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.DestroyAsync">
            <summary>Sets the stub of ITweetAsync.DestroyAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.EntitiesGet">
            <summary>Sets the stub of ITweet.get_Entities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.EqualsITweet">
            <summary>Sets the stub of IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.ExtendedEntitiesGet">
            <summary>Sets the stub of ITweet.get_ExtendedEntities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.Favourite">
            <summary>Sets the stub of ITweet.Favourite()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.FavouriteAsync">
            <summary>Sets the stub of ITweetAsync.FavouriteAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.FavouriteCountGet">
            <summary>Sets the stub of ITweet.get_FavouriteCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.FavouritedGet">
            <summary>Sets the stub of ITweet.get_Favourited()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.FilterLevelGet">
            <summary>Sets the stub of ITweet.get_FilterLevel()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.GenerateOEmbedTweet">
            <summary>Sets the stub of ITweet.GenerateOEmbedTweet()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.GenerateOEmbedTweetAsync">
            <summary>Sets the stub of ITweetAsync.GenerateOEmbedTweetAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.GetRetweets">
            <summary>Sets the stub of ITweet.GetRetweets()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.GetRetweetsAsync">
            <summary>Sets the stub of ITweetAsync.GetRetweetsAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.HashtagsGet">
            <summary>Sets the stub of ITweet.get_Hashtags()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.IdGet">
            <summary>Sets the stub of ITweetIdentifier.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.IdStrGet">
            <summary>Sets the stub of ITweetIdentifier.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.InReplyToScreenNameGet">
            <summary>Sets the stub of ITweet.get_InReplyToScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.InReplyToScreenNameSetString">
            <summary>Sets the stub of ITweet.set_InReplyToScreenName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.InReplyToStatusIdGet">
            <summary>Sets the stub of ITweet.get_InReplyToStatusId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.InReplyToStatusIdSetNullableOfInt64">
            <summary>Sets the stub of ITweet.set_InReplyToStatusId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.InReplyToStatusIdStrGet">
            <summary>Sets the stub of ITweet.get_InReplyToStatusIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.InReplyToStatusIdStrSetString">
            <summary>Sets the stub of ITweet.set_InReplyToStatusIdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.InReplyToUserIdGet">
            <summary>Sets the stub of ITweet.get_InReplyToUserId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.InReplyToUserIdSetNullableOfInt64">
            <summary>Sets the stub of ITweet.set_InReplyToUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.InReplyToUserIdStrGet">
            <summary>Sets the stub of ITweet.get_InReplyToUserIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.InReplyToUserIdStrSetString">
            <summary>Sets the stub of ITweet.set_InReplyToUserIdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.IsRetweetGet">
            <summary>Sets the stub of ITweet.get_IsRetweet()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.IsTweetDestroyedGet">
            <summary>Sets the stub of ITweet.get_IsTweetDestroyed()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.IsTweetPublishedGet">
            <summary>Sets the stub of ITweet.get_IsTweetPublished()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.LanguageGet">
            <summary>Sets the stub of ITweet.get_Language()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.LengthGet">
            <summary>Sets the stub of ITweet.get_Length()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.MediaGet">
            <summary>Sets the stub of ITweet.get_Media()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PlaceGet">
            <summary>Sets the stub of ITweet.get_Place()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PossiblySensitiveGet">
            <summary>Sets the stub of ITweet.get_PossiblySensitive()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.Publish">
            <summary>Sets the stub of ITweet.Publish()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishAsync">
            <summary>Sets the stub of ITweetAsync.PublishAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishInReplyToAsyncITweet">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishInReplyToAsyncInt64">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(Int64 replyToTweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishInReplyToITweet">
            <summary>Sets the stub of ITweet.PublishInReplyTo(ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishInReplyToInt64">
            <summary>Sets the stub of ITweet.PublishInReplyTo(Int64 replyToTweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishReplyAsyncString">
            <summary>Sets the stub of ITweetAsync.PublishReplyAsync(String text)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishReplyITweet">
            <summary>Sets the stub of ITweet.PublishReply(ITweet replyTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishReplyString">
            <summary>Sets the stub of ITweet.PublishReply(String text)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishRetweet">
            <summary>Sets the stub of ITweet.PublishRetweet()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishRetweetAsync">
            <summary>Sets the stub of ITweetAsync.PublishRetweetAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishWithGeoAsyncDoubleDouble">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(Double longitude, Double latitude)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishWithGeoAsyncICoordinates">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(ICoordinates coordinates)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishWithGeoDoubleDouble">
            <summary>Sets the stub of ITweet.PublishWithGeo(Double longitude, Double latitude)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishWithGeoICoordinates">
            <summary>Sets the stub of ITweet.PublishWithGeo(ICoordinates coordinates)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishWithGeoInReplyToAsyncDoubleDoubleITweet">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishWithGeoInReplyToAsyncDoubleDoubleInt64">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, Int64 replyToTweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishWithGeoInReplyToDoubleDoubleITweet">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(Double longitude, Double latitude, ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishWithGeoInReplyToDoubleDoubleInt64">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(Double longitude, Double latitude, Int64 replyToTweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.PublishWithGeoInReplyToICoordinatesITweet">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(ICoordinates coordinates, ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.RetweetCountGet">
            <summary>Sets the stub of ITweet.get_RetweetCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.RetweetedGet">
            <summary>Sets the stub of ITweet.get_Retweeted()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.RetweetedTweetGet">
            <summary>Sets the stub of ITweet.get_RetweetedTweet()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.RetweetsGet">
            <summary>Sets the stub of ITweet.get_Retweets()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.RetweetsSetListOfITweet">
            <summary>Sets the stub of ITweet.set_Retweets(List`1&lt;ITweet&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.ScopesGet">
            <summary>Sets the stub of ITweet.get_Scopes()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.SourceGet">
            <summary>Sets the stub of ITweet.get_Source()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.SourceSetString">
            <summary>Sets the stub of ITweet.set_Source(String value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.global::System#IEquatable{Tweetinvi#Core#Interfaces#ITweet}#Equals(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.TextGet">
            <summary>Sets the stub of ITweet.get_Text()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.TextSetString">
            <summary>Sets the stub of ITweet.set_Text(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.TruncatedGet">
            <summary>Sets the stub of ITweet.get_Truncated()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.TweetDTOGet">
            <summary>Sets the stub of ITweet.get_TweetDTO()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.TweetDTOSetITweetDTO">
            <summary>Sets the stub of ITweet.set_TweetDTO(ITweetDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.TweetLocalCreationDateGet">
            <summary>Sets the stub of ITweet.get_TweetLocalCreationDate()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.TweetRemainingCharacters">
            <summary>Sets the stub of ITweet.TweetRemainingCharacters()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#DestroyAsync">
            <summary>Sets the stub of ITweetAsync.DestroyAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#FavouriteAsync">
            <summary>Sets the stub of ITweetAsync.FavouriteAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#GenerateOEmbedTweetAsync">
            <summary>Sets the stub of ITweetAsync.GenerateOEmbedTweetAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#GetRetweetsAsync">
            <summary>Sets the stub of ITweetAsync.GetRetweetsAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishAsync">
            <summary>Sets the stub of ITweetAsync.PublishAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishInReplyToAsync(System.Int64)">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishInReplyToAsync(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishReplyAsync(System.String)">
            <summary>Sets the stub of ITweetAsync.PublishReplyAsync(String text)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishRetweetAsync">
            <summary>Sets the stub of ITweetAsync.PublishRetweetAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoAsync(Tweetinvi.Core.Interfaces.Models.ICoordinates)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(ICoordinates coordinates)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoAsync(System.Double,System.Double)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(Double longitude, Double latitude)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoInReplyToAsync(System.Double,System.Double,Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoInReplyToAsync(System.Double,System.Double,System.Int64)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#UnFavouriteAsync">
            <summary>Sets the stub of ITweetAsync.UnFavouriteAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#AddMedia(System.Byte[])">
            <summary>Sets the stub of ITweet.AddMedia(Byte[] data)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Destroy">
            <summary>Sets the stub of ITweet.Destroy()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Favourite">
            <summary>Sets the stub of ITweet.Favourite()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#GenerateOEmbedTweet">
            <summary>Sets the stub of ITweet.GenerateOEmbedTweet()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#GetRetweets">
            <summary>Sets the stub of ITweet.GetRetweets()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Publish">
            <summary>Sets the stub of ITweet.Publish()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#PublishInReplyTo(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweet.PublishInReplyTo(ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#PublishInReplyTo(System.Int64)">
            <summary>Sets the stub of ITweet.PublishInReplyTo(Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#PublishReply(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweet.PublishReply(ITweet replyTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#PublishReply(System.String)">
            <summary>Sets the stub of ITweet.PublishReply(String text)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#PublishRetweet">
            <summary>Sets the stub of ITweet.PublishRetweet()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeo(Tweetinvi.Core.Interfaces.Models.ICoordinates)">
            <summary>Sets the stub of ITweet.PublishWithGeo(ICoordinates coordinates)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeo(System.Double,System.Double)">
            <summary>Sets the stub of ITweet.PublishWithGeo(Double longitude, Double latitude)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeoInReplyTo(Tweetinvi.Core.Interfaces.Models.ICoordinates,Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(ICoordinates coordinates, ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeoInReplyTo(System.Double,System.Double,Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(Double longitude, Double latitude, ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeoInReplyTo(System.Double,System.Double,System.Int64)">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(Double longitude, Double latitude, Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#TweetRemainingCharacters">
            <summary>Sets the stub of ITweet.TweetRemainingCharacters()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#UnFavourite">
            <summary>Sets the stub of ITweet.UnFavourite()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.UnFavourite">
            <summary>Sets the stub of ITweet.UnFavourite()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.UnFavouriteAsync">
            <summary>Sets the stub of ITweetAsync.UnFavouriteAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.UrlsGet">
            <summary>Sets the stub of ITweet.get_Urls()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.UserMentionsGet">
            <summary>Sets the stub of ITweet.get_UserMentions()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.WithheldCopyrightGet">
            <summary>Sets the stub of ITweet.get_WithheldCopyright()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.WithheldInCountriesGet">
            <summary>Sets the stub of ITweet.get_WithheldInCountries()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweet.WithheldScopeGet">
            <summary>Sets the stub of ITweet.get_WithheldScope()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Contributors">
            <summary>Sets the stub of ITweet.get_Contributors()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#ContributorsIds">
            <summary>Sets the stub of ITweet.get_ContributorsIds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Coordinates">
            <summary>Sets the stub of ITweet.get_Coordinates()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#CreatedAt">
            <summary>Sets the stub of ITweet.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Creator">
            <summary>Sets the stub of ITweet.get_Creator()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#CurrentUserRetweetIdentifier">
            <summary>Sets the stub of ITweet.get_CurrentUserRetweetIdentifier()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Entities">
            <summary>Sets the stub of ITweet.get_Entities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#ExtendedEntities">
            <summary>Sets the stub of ITweet.get_ExtendedEntities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#FavouriteCount">
            <summary>Sets the stub of ITweet.get_FavouriteCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Favourited">
            <summary>Sets the stub of ITweet.get_Favourited()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#FilterLevel">
            <summary>Sets the stub of ITweet.get_FilterLevel()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Hashtags">
            <summary>Sets the stub of ITweet.get_Hashtags()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Models#ITweetIdentifier#Id">
            <summary>Sets the stub of ITweetIdentifier.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#Models#ITweetIdentifier#IdStr">
            <summary>Sets the stub of ITweetIdentifier.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToScreenName">
            <summary>Sets the stub of ITweet.get_InReplyToScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToStatusId">
            <summary>Sets the stub of ITweet.get_InReplyToStatusId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToStatusIdStr">
            <summary>Sets the stub of ITweet.get_InReplyToStatusIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToUserId">
            <summary>Sets the stub of ITweet.get_InReplyToUserId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToUserIdStr">
            <summary>Sets the stub of ITweet.get_InReplyToUserIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#IsRetweet">
            <summary>Sets the stub of ITweet.get_IsRetweet()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#IsTweetDestroyed">
            <summary>Sets the stub of ITweet.get_IsTweetDestroyed()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#IsTweetPublished">
            <summary>Sets the stub of ITweet.get_IsTweetPublished()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Language">
            <summary>Sets the stub of ITweet.get_Language()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Length">
            <summary>Sets the stub of ITweet.get_Length()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Media">
            <summary>Sets the stub of ITweet.get_Media()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Place">
            <summary>Sets the stub of ITweet.get_Place()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#PossiblySensitive">
            <summary>Sets the stub of ITweet.get_PossiblySensitive()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#RetweetCount">
            <summary>Sets the stub of ITweet.get_RetweetCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Retweeted">
            <summary>Sets the stub of ITweet.get_Retweeted()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#RetweetedTweet">
            <summary>Sets the stub of ITweet.get_RetweetedTweet()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Retweets">
            <summary>Sets the stub of ITweet.get_Retweets()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Scopes">
            <summary>Sets the stub of ITweet.get_Scopes()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Source">
            <summary>Sets the stub of ITweet.get_Source()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Text">
            <summary>Sets the stub of ITweet.get_Text()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Truncated">
            <summary>Sets the stub of ITweet.get_Truncated()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#TweetDTO">
            <summary>Sets the stub of ITweet.get_TweetDTO()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#TweetLocalCreationDate">
            <summary>Sets the stub of ITweet.get_TweetLocalCreationDate()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#Urls">
            <summary>Sets the stub of ITweet.get_Urls()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#UserMentions">
            <summary>Sets the stub of ITweet.get_UserMentions()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#WithheldCopyright">
            <summary>Sets the stub of ITweet.get_WithheldCopyright()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#WithheldInCountries">
            <summary>Sets the stub of ITweet.get_WithheldInCountries()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweet.tc::Tweetinvi#Core#Interfaces#ITweet#WithheldScope">
            <summary>Sets the stub of ITweet.get_WithheldScope()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Fakes.StubITweetList">
            <summary>Stub type of Tweetinvi.Core.Interfaces.ITweetList</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.#ctor">
            <summary>Initializes a new instance of type StubITweetList</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.AttachBackingFieldToTweetListDTO">
            <summary>Attaches delegates to emulate StubITweetList.TweetListDTO as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.CreatedAtGet">
            <summary>Sets the stub of ITweetList.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.CreatorGet">
            <summary>Sets the stub of ITweetList.get_Creator()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.DescriptionGet">
            <summary>Sets the stub of ITweetList.get_Description()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.Destroy">
            <summary>Sets the stub of ITweetList.Destroy()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.DestroyAsync">
            <summary>Sets the stub of ITweetListAsync.DestroyAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.FollowingGet">
            <summary>Sets the stub of ITweetList.get_Following()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.FullNameGet">
            <summary>Sets the stub of ITweetList.get_FullName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.GetMembersAsyncInt32">
            <summary>Sets the stub of ITweetListAsync.GetMembersAsync(Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.GetMembersInt32">
            <summary>Sets the stub of ITweetList.GetMembers(Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.GetTweets">
            <summary>Sets the stub of ITweetList.GetTweets()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.GetTweetsAsync">
            <summary>Sets the stub of ITweetListAsync.GetTweetsAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.IdGet">
            <summary>Sets the stub of ITweetList.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.IdStrGet">
            <summary>Sets the stub of ITweetList.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.MemberCountGet">
            <summary>Sets the stub of ITweetList.get_MemberCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.NameGet">
            <summary>Sets the stub of ITweetList.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.PrivacyModeGet">
            <summary>Sets the stub of ITweetList.get_PrivacyMode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.SlugGet">
            <summary>Sets the stub of ITweetList.get_Slug()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.SubscriberCountGet">
            <summary>Sets the stub of ITweetList.get_SubscriberCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.TweetListDTOGet">
            <summary>Sets the stub of ITweetList.get_TweetListDTO()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.TweetListDTOSetITweetListDTO">
            <summary>Sets the stub of ITweetList.set_TweetListDTO(ITweetListDTO value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#Async#ITweetListAsync#DestroyAsync">
            <summary>Sets the stub of ITweetListAsync.DestroyAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#Async#ITweetListAsync#GetMembersAsync(System.Int32)">
            <summary>Sets the stub of ITweetListAsync.GetMembersAsync(Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#Async#ITweetListAsync#GetTweetsAsync">
            <summary>Sets the stub of ITweetListAsync.GetTweetsAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#Async#ITweetListAsync#UpdateAsync(Tweetinvi.Core.Interfaces.Parameters.IListUpdateParameters)">
            <summary>Sets the stub of ITweetListAsync.UpdateAsync(IListUpdateParameters parameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#Destroy">
            <summary>Sets the stub of ITweetList.Destroy()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#GetMembers(System.Int32)">
            <summary>Sets the stub of ITweetList.GetMembers(Int32 maxNumberOfUsersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#GetTweets">
            <summary>Sets the stub of ITweetList.GetTweets()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#Update(Tweetinvi.Core.Interfaces.Parameters.IListUpdateParameters)">
            <summary>Sets the stub of ITweetList.Update(IListUpdateParameters parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.UpdateAsyncIListUpdateParameters">
            <summary>Sets the stub of ITweetListAsync.UpdateAsync(IListUpdateParameters parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.UpdateIListUpdateParameters">
            <summary>Sets the stub of ITweetList.Update(IListUpdateParameters parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.UriGet">
            <summary>Sets the stub of ITweetList.get_Uri()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#CreatedAt">
            <summary>Sets the stub of ITweetList.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#Creator">
            <summary>Sets the stub of ITweetList.get_Creator()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#Description">
            <summary>Sets the stub of ITweetList.get_Description()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#Following">
            <summary>Sets the stub of ITweetList.get_Following()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#FullName">
            <summary>Sets the stub of ITweetList.get_FullName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#Id">
            <summary>Sets the stub of ITweetList.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#IdStr">
            <summary>Sets the stub of ITweetList.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#MemberCount">
            <summary>Sets the stub of ITweetList.get_MemberCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#Name">
            <summary>Sets the stub of ITweetList.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#PrivacyMode">
            <summary>Sets the stub of ITweetList.get_PrivacyMode()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#Slug">
            <summary>Sets the stub of ITweetList.get_Slug()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#SubscriberCount">
            <summary>Sets the stub of ITweetList.get_SubscriberCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#TweetListDTO">
            <summary>Sets the stub of ITweetList.get_TweetListDTO()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetList.tc::Tweetinvi#Core#Interfaces#ITweetList#Uri">
            <summary>Sets the stub of ITweetList.get_Uri()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata">
            <summary>Stub type of Tweetinvi.Core.Interfaces.ITweetWithSearchMetadata</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.#ctor">
            <summary>Initializes a new instance of type StubITweetWithSearchMetadata</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.AddMediaByteArray">
            <summary>Sets the stub of ITweet.AddMedia(Byte[] data)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.AttachBackingFieldToCoordinates">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadata.Coordinates as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.AttachBackingFieldToInReplyToScreenName">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadata.InReplyToScreenName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.AttachBackingFieldToInReplyToStatusId">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadata.InReplyToStatusId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.AttachBackingFieldToInReplyToStatusIdStr">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadata.InReplyToStatusIdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.AttachBackingFieldToInReplyToUserId">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadata.InReplyToUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.AttachBackingFieldToInReplyToUserIdStr">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadata.InReplyToUserIdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.AttachBackingFieldToRetweets">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadata.Retweets as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadata.Source as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadata.Text as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.AttachBackingFieldToTweetDTO">
            <summary>Attaches delegates to emulate StubITweetWithSearchMetadata.TweetDTO as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.ContributorsGet">
            <summary>Sets the stub of ITweet.get_Contributors()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.ContributorsIdsGet">
            <summary>Sets the stub of ITweet.get_ContributorsIds()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.CoordinatesGet">
            <summary>Sets the stub of ITweet.get_Coordinates()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.CoordinatesSetICoordinates">
            <summary>Sets the stub of ITweet.set_Coordinates(ICoordinates value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.CreatedAtGet">
            <summary>Sets the stub of ITweet.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.CreatorGet">
            <summary>Sets the stub of ITweet.get_Creator()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.CurrentUserRetweetIdentifierGet">
            <summary>Sets the stub of ITweet.get_CurrentUserRetweetIdentifier()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.Destroy">
            <summary>Sets the stub of ITweet.Destroy()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.DestroyAsync">
            <summary>Sets the stub of ITweetAsync.DestroyAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.EntitiesGet">
            <summary>Sets the stub of ITweet.get_Entities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.EqualsITweet">
            <summary>Sets the stub of IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.ExtendedEntitiesGet">
            <summary>Sets the stub of ITweet.get_ExtendedEntities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.Favourite">
            <summary>Sets the stub of ITweet.Favourite()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.FavouriteAsync">
            <summary>Sets the stub of ITweetAsync.FavouriteAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.FavouriteCountGet">
            <summary>Sets the stub of ITweet.get_FavouriteCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.FavouritedGet">
            <summary>Sets the stub of ITweet.get_Favourited()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.FilterLevelGet">
            <summary>Sets the stub of ITweet.get_FilterLevel()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.GenerateOEmbedTweet">
            <summary>Sets the stub of ITweet.GenerateOEmbedTweet()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.GenerateOEmbedTweetAsync">
            <summary>Sets the stub of ITweetAsync.GenerateOEmbedTweetAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.GetRetweets">
            <summary>Sets the stub of ITweet.GetRetweets()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.GetRetweetsAsync">
            <summary>Sets the stub of ITweetAsync.GetRetweetsAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.HashtagsGet">
            <summary>Sets the stub of ITweet.get_Hashtags()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.IdGet">
            <summary>Sets the stub of ITweetIdentifier.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.IdStrGet">
            <summary>Sets the stub of ITweetIdentifier.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.InReplyToScreenNameGet">
            <summary>Sets the stub of ITweet.get_InReplyToScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.InReplyToScreenNameSetString">
            <summary>Sets the stub of ITweet.set_InReplyToScreenName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.InReplyToStatusIdGet">
            <summary>Sets the stub of ITweet.get_InReplyToStatusId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.InReplyToStatusIdSetNullableOfInt64">
            <summary>Sets the stub of ITweet.set_InReplyToStatusId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.InReplyToStatusIdStrGet">
            <summary>Sets the stub of ITweet.get_InReplyToStatusIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.InReplyToStatusIdStrSetString">
            <summary>Sets the stub of ITweet.set_InReplyToStatusIdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.InReplyToUserIdGet">
            <summary>Sets the stub of ITweet.get_InReplyToUserId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.InReplyToUserIdSetNullableOfInt64">
            <summary>Sets the stub of ITweet.set_InReplyToUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.InReplyToUserIdStrGet">
            <summary>Sets the stub of ITweet.get_InReplyToUserIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.InReplyToUserIdStrSetString">
            <summary>Sets the stub of ITweet.set_InReplyToUserIdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.IsRetweetGet">
            <summary>Sets the stub of ITweet.get_IsRetweet()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.IsTweetDestroyedGet">
            <summary>Sets the stub of ITweet.get_IsTweetDestroyed()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.IsTweetPublishedGet">
            <summary>Sets the stub of ITweet.get_IsTweetPublished()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.LanguageGet">
            <summary>Sets the stub of ITweet.get_Language()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.LengthGet">
            <summary>Sets the stub of ITweet.get_Length()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.MediaGet">
            <summary>Sets the stub of ITweet.get_Media()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PlaceGet">
            <summary>Sets the stub of ITweet.get_Place()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PossiblySensitiveGet">
            <summary>Sets the stub of ITweet.get_PossiblySensitive()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.Publish">
            <summary>Sets the stub of ITweet.Publish()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishAsync">
            <summary>Sets the stub of ITweetAsync.PublishAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishInReplyToAsyncITweet">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishInReplyToAsyncInt64">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(Int64 replyToTweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishInReplyToITweet">
            <summary>Sets the stub of ITweet.PublishInReplyTo(ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishInReplyToInt64">
            <summary>Sets the stub of ITweet.PublishInReplyTo(Int64 replyToTweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishReplyAsyncString">
            <summary>Sets the stub of ITweetAsync.PublishReplyAsync(String text)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishReplyITweet">
            <summary>Sets the stub of ITweet.PublishReply(ITweet replyTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishReplyString">
            <summary>Sets the stub of ITweet.PublishReply(String text)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishRetweet">
            <summary>Sets the stub of ITweet.PublishRetweet()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishRetweetAsync">
            <summary>Sets the stub of ITweetAsync.PublishRetweetAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishWithGeoAsyncDoubleDouble">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(Double longitude, Double latitude)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishWithGeoAsyncICoordinates">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(ICoordinates coordinates)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishWithGeoDoubleDouble">
            <summary>Sets the stub of ITweet.PublishWithGeo(Double longitude, Double latitude)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishWithGeoICoordinates">
            <summary>Sets the stub of ITweet.PublishWithGeo(ICoordinates coordinates)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishWithGeoInReplyToAsyncDoubleDoubleITweet">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishWithGeoInReplyToAsyncDoubleDoubleInt64">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, Int64 replyToTweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishWithGeoInReplyToDoubleDoubleITweet">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(Double longitude, Double latitude, ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishWithGeoInReplyToDoubleDoubleInt64">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(Double longitude, Double latitude, Int64 replyToTweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.PublishWithGeoInReplyToICoordinatesITweet">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(ICoordinates coordinates, ITweet replyToTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.RetweetCountGet">
            <summary>Sets the stub of ITweet.get_RetweetCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.RetweetedGet">
            <summary>Sets the stub of ITweet.get_Retweeted()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.RetweetedTweetGet">
            <summary>Sets the stub of ITweet.get_RetweetedTweet()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.RetweetsGet">
            <summary>Sets the stub of ITweet.get_Retweets()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.RetweetsSetListOfITweet">
            <summary>Sets the stub of ITweet.set_Retweets(List`1&lt;ITweet&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.ScopesGet">
            <summary>Sets the stub of ITweet.get_Scopes()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.SearchMetadataGet">
            <summary>Sets the stub of ITweetWithSearchMetadata.get_SearchMetadata()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.SourceGet">
            <summary>Sets the stub of ITweet.get_Source()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.SourceSetString">
            <summary>Sets the stub of ITweet.set_Source(String value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.global::System#IEquatable{Tweetinvi#Core#Interfaces#ITweet}#Equals(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.TextGet">
            <summary>Sets the stub of ITweet.get_Text()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.TextSetString">
            <summary>Sets the stub of ITweet.set_Text(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.TruncatedGet">
            <summary>Sets the stub of ITweet.get_Truncated()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.TweetDTOGet">
            <summary>Sets the stub of ITweet.get_TweetDTO()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.TweetDTOSetITweetDTO">
            <summary>Sets the stub of ITweet.set_TweetDTO(ITweetDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.TweetLocalCreationDateGet">
            <summary>Sets the stub of ITweet.get_TweetLocalCreationDate()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.TweetRemainingCharacters">
            <summary>Sets the stub of ITweet.TweetRemainingCharacters()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#DestroyAsync">
            <summary>Sets the stub of ITweetAsync.DestroyAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#FavouriteAsync">
            <summary>Sets the stub of ITweetAsync.FavouriteAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#GenerateOEmbedTweetAsync">
            <summary>Sets the stub of ITweetAsync.GenerateOEmbedTweetAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#GetRetweetsAsync">
            <summary>Sets the stub of ITweetAsync.GetRetweetsAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishAsync">
            <summary>Sets the stub of ITweetAsync.PublishAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishInReplyToAsync(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishInReplyToAsync(System.Int64)">
            <summary>Sets the stub of ITweetAsync.PublishInReplyToAsync(Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishReplyAsync(System.String)">
            <summary>Sets the stub of ITweetAsync.PublishReplyAsync(String text)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishRetweetAsync">
            <summary>Sets the stub of ITweetAsync.PublishRetweetAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoAsync(Tweetinvi.Core.Interfaces.Models.ICoordinates)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(ICoordinates coordinates)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoAsync(System.Double,System.Double)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoAsync(Double longitude, Double latitude)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoInReplyToAsync(System.Double,System.Double,Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#PublishWithGeoInReplyToAsync(System.Double,System.Double,System.Int64)">
            <summary>Sets the stub of ITweetAsync.PublishWithGeoInReplyToAsync(Double latitude, Double longitude, Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Async#ITweetAsync#UnFavouriteAsync">
            <summary>Sets the stub of ITweetAsync.UnFavouriteAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#AddMedia(System.Byte[])">
            <summary>Sets the stub of ITweet.AddMedia(Byte[] data)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Destroy">
            <summary>Sets the stub of ITweet.Destroy()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Favourite">
            <summary>Sets the stub of ITweet.Favourite()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#GenerateOEmbedTweet">
            <summary>Sets the stub of ITweet.GenerateOEmbedTweet()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#GetRetweets">
            <summary>Sets the stub of ITweet.GetRetweets()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Publish">
            <summary>Sets the stub of ITweet.Publish()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#PublishInReplyTo(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweet.PublishInReplyTo(ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#PublishInReplyTo(System.Int64)">
            <summary>Sets the stub of ITweet.PublishInReplyTo(Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#PublishReply(System.String)">
            <summary>Sets the stub of ITweet.PublishReply(String text)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#PublishReply(Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweet.PublishReply(ITweet replyTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#PublishRetweet">
            <summary>Sets the stub of ITweet.PublishRetweet()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeo(Tweetinvi.Core.Interfaces.Models.ICoordinates)">
            <summary>Sets the stub of ITweet.PublishWithGeo(ICoordinates coordinates)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeo(System.Double,System.Double)">
            <summary>Sets the stub of ITweet.PublishWithGeo(Double longitude, Double latitude)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeoInReplyTo(Tweetinvi.Core.Interfaces.Models.ICoordinates,Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(ICoordinates coordinates, ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeoInReplyTo(System.Double,System.Double,Tweetinvi.Core.Interfaces.ITweet)">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(Double longitude, Double latitude, ITweet replyToTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#PublishWithGeoInReplyTo(System.Double,System.Double,System.Int64)">
            <summary>Sets the stub of ITweet.PublishWithGeoInReplyTo(Double longitude, Double latitude, Int64 replyToTweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#TweetRemainingCharacters">
            <summary>Sets the stub of ITweet.TweetRemainingCharacters()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#UnFavourite">
            <summary>Sets the stub of ITweet.UnFavourite()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.UnFavourite">
            <summary>Sets the stub of ITweet.UnFavourite()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.UnFavouriteAsync">
            <summary>Sets the stub of ITweetAsync.UnFavouriteAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.UrlsGet">
            <summary>Sets the stub of ITweet.get_Urls()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.UserMentionsGet">
            <summary>Sets the stub of ITweet.get_UserMentions()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.WithheldCopyrightGet">
            <summary>Sets the stub of ITweet.get_WithheldCopyright()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.WithheldInCountriesGet">
            <summary>Sets the stub of ITweet.get_WithheldInCountries()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.WithheldScopeGet">
            <summary>Sets the stub of ITweet.get_WithheldScope()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Contributors">
            <summary>Sets the stub of ITweet.get_Contributors()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#ContributorsIds">
            <summary>Sets the stub of ITweet.get_ContributorsIds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Coordinates">
            <summary>Sets the stub of ITweet.get_Coordinates()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#CreatedAt">
            <summary>Sets the stub of ITweet.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Creator">
            <summary>Sets the stub of ITweet.get_Creator()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#CurrentUserRetweetIdentifier">
            <summary>Sets the stub of ITweet.get_CurrentUserRetweetIdentifier()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Entities">
            <summary>Sets the stub of ITweet.get_Entities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#ExtendedEntities">
            <summary>Sets the stub of ITweet.get_ExtendedEntities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#FavouriteCount">
            <summary>Sets the stub of ITweet.get_FavouriteCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Favourited">
            <summary>Sets the stub of ITweet.get_Favourited()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#FilterLevel">
            <summary>Sets the stub of ITweet.get_FilterLevel()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Hashtags">
            <summary>Sets the stub of ITweet.get_Hashtags()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Models#ITweetIdentifier#Id">
            <summary>Sets the stub of ITweetIdentifier.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#Models#ITweetIdentifier#IdStr">
            <summary>Sets the stub of ITweetIdentifier.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToScreenName">
            <summary>Sets the stub of ITweet.get_InReplyToScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToStatusId">
            <summary>Sets the stub of ITweet.get_InReplyToStatusId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToStatusIdStr">
            <summary>Sets the stub of ITweet.get_InReplyToStatusIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToUserId">
            <summary>Sets the stub of ITweet.get_InReplyToUserId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#InReplyToUserIdStr">
            <summary>Sets the stub of ITweet.get_InReplyToUserIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#IsRetweet">
            <summary>Sets the stub of ITweet.get_IsRetweet()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#IsTweetDestroyed">
            <summary>Sets the stub of ITweet.get_IsTweetDestroyed()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#IsTweetPublished">
            <summary>Sets the stub of ITweet.get_IsTweetPublished()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Language">
            <summary>Sets the stub of ITweet.get_Language()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Length">
            <summary>Sets the stub of ITweet.get_Length()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Media">
            <summary>Sets the stub of ITweet.get_Media()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Place">
            <summary>Sets the stub of ITweet.get_Place()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#PossiblySensitive">
            <summary>Sets the stub of ITweet.get_PossiblySensitive()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#RetweetCount">
            <summary>Sets the stub of ITweet.get_RetweetCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Retweeted">
            <summary>Sets the stub of ITweet.get_Retweeted()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#RetweetedTweet">
            <summary>Sets the stub of ITweet.get_RetweetedTweet()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Retweets">
            <summary>Sets the stub of ITweet.get_Retweets()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Scopes">
            <summary>Sets the stub of ITweet.get_Scopes()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweetWithSearchMetadata#SearchMetadata">
            <summary>Sets the stub of ITweetWithSearchMetadata.get_SearchMetadata()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Source">
            <summary>Sets the stub of ITweet.get_Source()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Text">
            <summary>Sets the stub of ITweet.get_Text()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Truncated">
            <summary>Sets the stub of ITweet.get_Truncated()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#TweetDTO">
            <summary>Sets the stub of ITweet.get_TweetDTO()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#TweetLocalCreationDate">
            <summary>Sets the stub of ITweet.get_TweetLocalCreationDate()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#Urls">
            <summary>Sets the stub of ITweet.get_Urls()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#UserMentions">
            <summary>Sets the stub of ITweet.get_UserMentions()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#WithheldCopyright">
            <summary>Sets the stub of ITweet.get_WithheldCopyright()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#WithheldInCountries">
            <summary>Sets the stub of ITweet.get_WithheldInCountries()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubITweetWithSearchMetadata.tc::Tweetinvi#Core#Interfaces#ITweet#WithheldScope">
            <summary>Sets the stub of ITweet.get_WithheldScope()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Fakes.StubIUser">
            <summary>Stub type of Tweetinvi.Core.Interfaces.IUser</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.#ctor">
            <summary>Initializes a new instance of type StubIUser</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.AttachBackingFieldToContributees">
            <summary>Attaches delegates to emulate StubIUser.Contributees as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.AttachBackingFieldToContributors">
            <summary>Attaches delegates to emulate StubIUser.Contributors as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.AttachBackingFieldToFollowerIds">
            <summary>Attaches delegates to emulate StubIUser.FollowerIds as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.AttachBackingFieldToFollowers">
            <summary>Attaches delegates to emulate StubIUser.Followers as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.AttachBackingFieldToFriendIds">
            <summary>Attaches delegates to emulate StubIUser.FriendIds as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.AttachBackingFieldToFriends">
            <summary>Attaches delegates to emulate StubIUser.Friends as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.AttachBackingFieldToFriendsRetweets">
            <summary>Attaches delegates to emulate StubIUser.FriendsRetweets as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.AttachBackingFieldToRetweets">
            <summary>Attaches delegates to emulate StubIUser.Retweets as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.AttachBackingFieldToTimeline">
            <summary>Attaches delegates to emulate StubIUser.Timeline as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.AttachBackingFieldToTweetsRetweetedByFollowers">
            <summary>Attaches delegates to emulate StubIUser.TweetsRetweetedByFollowers as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.AttachBackingFieldToUserDTO">
            <summary>Attaches delegates to emulate StubIUser.UserDTO as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.BlockAsync">
            <summary>Sets the stub of IUserAsync.BlockAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.BlockUser">
            <summary>Sets the stub of IUser.BlockUser()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ContributeesGet">
            <summary>Sets the stub of IUser.get_Contributees()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ContributeesSetListOfIUser">
            <summary>Sets the stub of IUser.set_Contributees(List`1&lt;IUser&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ContributorsEnabledGet">
            <summary>Sets the stub of IUser.get_ContributorsEnabled()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ContributorsGet">
            <summary>Sets the stub of IUser.get_Contributors()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ContributorsSetListOfIUser">
            <summary>Sets the stub of IUser.set_Contributors(List`1&lt;IUser&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.CreatedAtGet">
            <summary>Sets the stub of IUser.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.DefaultProfileGet">
            <summary>Sets the stub of IUser.get_DefaultProfile()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.DefaultProfileImageGet">
            <summary>Sets the stub of IUser.get_DefaultProfileImage()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.DescriptionGet">
            <summary>Sets the stub of IUser.get_Description()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.EntitiesGet">
            <summary>Sets the stub of IUser.get_Entities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.EqualsIUser">
            <summary>Sets the stub of IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FavouritesCountGet">
            <summary>Sets the stub of IUser.get_FavouritesCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FollowRequestSentGet">
            <summary>Sets the stub of IUser.get_FollowRequestSent()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FollowerIdsGet">
            <summary>Sets the stub of IUser.get_FollowerIds()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FollowerIdsSetListOfInt64">
            <summary>Sets the stub of IUser.set_FollowerIds(List`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FollowersCountGet">
            <summary>Sets the stub of IUser.get_FollowersCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FollowersGet">
            <summary>Sets the stub of IUser.get_Followers()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FollowersSetListOfIUser">
            <summary>Sets the stub of IUser.set_Followers(List`1&lt;IUser&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FollowingGet">
            <summary>Sets the stub of IUser.get_Following()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FriendIdsGet">
            <summary>Sets the stub of IUser.get_FriendIds()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FriendIdsSetListOfInt64">
            <summary>Sets the stub of IUser.set_FriendIds(List`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FriendsCountGet">
            <summary>Sets the stub of IUser.get_FriendsCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FriendsGet">
            <summary>Sets the stub of IUser.get_Friends()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FriendsRetweetsGet">
            <summary>Sets the stub of IUser.get_FriendsRetweets()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FriendsRetweetsSetListOfITweet">
            <summary>Sets the stub of IUser.set_FriendsRetweets(List`1&lt;ITweet&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.FriendsSetListOfIUser">
            <summary>Sets the stub of IUser.set_Friends(List`1&lt;IUser&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GeoEnabledGet">
            <summary>Sets the stub of IUser.get_GeoEnabled()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetContributeesAsyncBoolean">
            <summary>Sets the stub of IUserAsync.GetContributeesAsync(Boolean createContributeeList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetContributeesBoolean">
            <summary>Sets the stub of IUser.GetContributees(Boolean createContributeeList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetContributorsAsyncBoolean">
            <summary>Sets the stub of IUserAsync.GetContributorsAsync(Boolean createContributorList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetContributorsBoolean">
            <summary>Sets the stub of IUser.GetContributors(Boolean createContributorList)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetFavoritesAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFavoritesAsync(Int32 maximumTweets)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetFavoritesInt32">
            <summary>Sets the stub of IUser.GetFavorites(Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetFollowerIdsAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFollowerIdsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetFollowerIdsInt32">
            <summary>Sets the stub of IUser.GetFollowerIds(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetFollowersAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFollowersAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetFollowersInt32">
            <summary>Sets the stub of IUser.GetFollowers(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetFriendIdsAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFriendIdsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetFriendIdsInt32">
            <summary>Sets the stub of IUser.GetFriendIds(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetFriendsAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetFriendsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetFriendsInt32">
            <summary>Sets the stub of IUser.GetFriends(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetProfileImageStreamAsyncImageSize">
            <summary>Sets the stub of IUserAsync.GetProfileImageStreamAsync(ImageSize imageSize)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetProfileImageStreamImageSize">
            <summary>Sets the stub of IUser.GetProfileImageStream(ImageSize imageSize)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetRelationshipWithAsyncIUser">
            <summary>Sets the stub of IUserAsync.GetRelationshipWithAsync(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetRelationshipWithIUser">
            <summary>Sets the stub of IUser.GetRelationshipWith(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetUserTimelineAsyncIUserTimelineRequestParameters">
            <summary>Sets the stub of IUserAsync.GetUserTimelineAsync(IUserTimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetUserTimelineAsyncInt32">
            <summary>Sets the stub of IUserAsync.GetUserTimelineAsync(Int32 maximumTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetUserTimelineIUserTimelineRequestParameters">
            <summary>Sets the stub of IUser.GetUserTimeline(IUserTimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.GetUserTimelineInt32">
            <summary>Sets the stub of IUser.GetUserTimeline(Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.IdGet">
            <summary>Sets the stub of IUser.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.IdStrGet">
            <summary>Sets the stub of IUser.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.IsTranslatorGet">
            <summary>Sets the stub of IUser.get_IsTranslator()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.LanguageGet">
            <summary>Sets the stub of IUser.get_Language()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ListedCountGet">
            <summary>Sets the stub of IUser.get_ListedCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.LocationGet">
            <summary>Sets the stub of IUser.get_Location()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.NameGet">
            <summary>Sets the stub of IUser.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.NotificationsGet">
            <summary>Sets the stub of IUser.get_Notifications()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ProfileBackgroundColorGet">
            <summary>Sets the stub of IUser.get_ProfileBackgroundColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ProfileBackgroundImageUrlGet">
            <summary>Sets the stub of IUser.get_ProfileBackgroundImageUrl()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ProfileBackgroundImageUrlHttpsGet">
            <summary>Sets the stub of IUser.get_ProfileBackgroundImageUrlHttps()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ProfileBackgroundTitleGet">
            <summary>Sets the stub of IUser.get_ProfileBackgroundTitle()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ProfileBannerURLGet">
            <summary>Sets the stub of IUser.get_ProfileBannerURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ProfileImageFullSizeUrlGet">
            <summary>Sets the stub of IUser.get_ProfileImageFullSizeUrl()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ProfileImageUrlGet">
            <summary>Sets the stub of IUser.get_ProfileImageUrl()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ProfileImageUrlHttpsGet">
            <summary>Sets the stub of IUser.get_ProfileImageUrlHttps()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ProfileLinkColorGet">
            <summary>Sets the stub of IUser.get_ProfileLinkColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ProfileSidebarBorderColorGet">
            <summary>Sets the stub of IUser.get_ProfileSidebarBorderColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ProfileSidebarFillColorGet">
            <summary>Sets the stub of IUser.get_ProfileSidebarFillColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ProfileTextColorGet">
            <summary>Sets the stub of IUser.get_ProfileTextColor()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ProfileUseBackgroundImageGet">
            <summary>Sets the stub of IUser.get_ProfileUseBackgroundImage()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ProtectedGet">
            <summary>Sets the stub of IUser.get_Protected()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.RetweetsGet">
            <summary>Sets the stub of IUser.get_Retweets()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.RetweetsSetListOfITweet">
            <summary>Sets the stub of IUser.set_Retweets(List`1&lt;ITweet&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ScreenNameGet">
            <summary>Sets the stub of IUser.get_ScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.ShowAllInlineMediaGet">
            <summary>Sets the stub of IUser.get_ShowAllInlineMedia()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.StatusGet">
            <summary>Sets the stub of IUser.get_Status()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.StatusesCountGet">
            <summary>Sets the stub of IUser.get_StatusesCount()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.global::System#IEquatable{Tweetinvi#Core#Interfaces#IUser}#Equals(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.TimeZoneGet">
            <summary>Sets the stub of IUser.get_TimeZone()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.TimelineGet">
            <summary>Sets the stub of IUser.get_Timeline()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.TimelineSetListOfITweet">
            <summary>Sets the stub of IUser.set_Timeline(List`1&lt;ITweet&gt; value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#BlockAsync">
            <summary>Sets the stub of IUserAsync.BlockAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetContributeesAsync(System.Boolean)">
            <summary>Sets the stub of IUserAsync.GetContributeesAsync(Boolean createContributeeList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetContributorsAsync(System.Boolean)">
            <summary>Sets the stub of IUserAsync.GetContributorsAsync(Boolean createContributorList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFavoritesAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFavoritesAsync(Int32 maximumTweets)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFollowerIdsAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFollowerIdsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFollowersAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFollowersAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFriendIdsAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFriendIdsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetFriendsAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetFriendsAsync(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetProfileImageStreamAsync(Tweetinvi.Core.Enum.ImageSize)">
            <summary>Sets the stub of IUserAsync.GetProfileImageStreamAsync(ImageSize imageSize)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetRelationshipWithAsync(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IUserAsync.GetRelationshipWithAsync(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetUserTimelineAsync(Tweetinvi.Core.Interfaces.Models.Parameters.IUserTimelineRequestParameters)">
            <summary>Sets the stub of IUserAsync.GetUserTimelineAsync(IUserTimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#GetUserTimelineAsync(System.Int32)">
            <summary>Sets the stub of IUserAsync.GetUserTimelineAsync(Int32 maximumTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#Async#IUserAsync#UnBlockAsync">
            <summary>Sets the stub of IUserAsync.UnBlockAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#BlockUser">
            <summary>Sets the stub of IUser.BlockUser()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#GetContributees(System.Boolean)">
            <summary>Sets the stub of IUser.GetContributees(Boolean createContributeeList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#GetContributors(System.Boolean)">
            <summary>Sets the stub of IUser.GetContributors(Boolean createContributorList)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#GetFavorites(System.Int32)">
            <summary>Sets the stub of IUser.GetFavorites(Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#GetFollowerIds(System.Int32)">
            <summary>Sets the stub of IUser.GetFollowerIds(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#GetFollowers(System.Int32)">
            <summary>Sets the stub of IUser.GetFollowers(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#GetFriendIds(System.Int32)">
            <summary>Sets the stub of IUser.GetFriendIds(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#GetFriends(System.Int32)">
            <summary>Sets the stub of IUser.GetFriends(Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#GetProfileImageStream(Tweetinvi.Core.Enum.ImageSize)">
            <summary>Sets the stub of IUser.GetProfileImageStream(ImageSize imageSize)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#GetRelationshipWith(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IUser.GetRelationshipWith(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#GetUserTimeline(Tweetinvi.Core.Interfaces.Models.Parameters.IUserTimelineRequestParameters)">
            <summary>Sets the stub of IUser.GetUserTimeline(IUserTimelineRequestParameters timelineRequestParameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#GetUserTimeline(System.Int32)">
            <summary>Sets the stub of IUser.GetUserTimeline(Int32 maximumNumberOfTweets)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#UnBlockUser">
            <summary>Sets the stub of IUser.UnBlockUser()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.TweetsRetweetedByFollowersGet">
            <summary>Sets the stub of IUser.get_TweetsRetweetedByFollowers()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.TweetsRetweetedByFollowersSetListOfITweet">
            <summary>Sets the stub of IUser.set_TweetsRetweetedByFollowers(List`1&lt;ITweet&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.UnBlockAsync">
            <summary>Sets the stub of IUserAsync.UnBlockAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.UnBlockUser">
            <summary>Sets the stub of IUser.UnBlockUser()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.UrlGet">
            <summary>Sets the stub of IUser.get_Url()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.UserDTOGet">
            <summary>Sets the stub of IUser.get_UserDTO()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.UserDTOSetIUserDTO">
            <summary>Sets the stub of IUser.set_UserDTO(IUserDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.UserIdentifierGet">
            <summary>Sets the stub of IUser.get_UserIdentifier()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.UtcOffsetGet">
            <summary>Sets the stub of IUser.get_UtcOffset()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.VerifiedGet">
            <summary>Sets the stub of IUser.get_Verified()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.WithheldInCountriesGet">
            <summary>Sets the stub of IUser.get_WithheldInCountries()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Fakes.StubIUser.WithheldScopeGet">
            <summary>Sets the stub of IUser.get_WithheldScope()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Contributees">
            <summary>Sets the stub of IUser.get_Contributees()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Contributors">
            <summary>Sets the stub of IUser.get_Contributors()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ContributorsEnabled">
            <summary>Sets the stub of IUser.get_ContributorsEnabled()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#CreatedAt">
            <summary>Sets the stub of IUser.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#DefaultProfile">
            <summary>Sets the stub of IUser.get_DefaultProfile()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#DefaultProfileImage">
            <summary>Sets the stub of IUser.get_DefaultProfileImage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Description">
            <summary>Sets the stub of IUser.get_Description()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Entities">
            <summary>Sets the stub of IUser.get_Entities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#FavouritesCount">
            <summary>Sets the stub of IUser.get_FavouritesCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#FollowRequestSent">
            <summary>Sets the stub of IUser.get_FollowRequestSent()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#FollowerIds">
            <summary>Sets the stub of IUser.get_FollowerIds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Followers">
            <summary>Sets the stub of IUser.get_Followers()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#FollowersCount">
            <summary>Sets the stub of IUser.get_FollowersCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Following">
            <summary>Sets the stub of IUser.get_Following()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#FriendIds">
            <summary>Sets the stub of IUser.get_FriendIds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Friends">
            <summary>Sets the stub of IUser.get_Friends()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#FriendsCount">
            <summary>Sets the stub of IUser.get_FriendsCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#FriendsRetweets">
            <summary>Sets the stub of IUser.get_FriendsRetweets()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#GeoEnabled">
            <summary>Sets the stub of IUser.get_GeoEnabled()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Id">
            <summary>Sets the stub of IUser.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#IdStr">
            <summary>Sets the stub of IUser.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#IsTranslator">
            <summary>Sets the stub of IUser.get_IsTranslator()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Language">
            <summary>Sets the stub of IUser.get_Language()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ListedCount">
            <summary>Sets the stub of IUser.get_ListedCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Location">
            <summary>Sets the stub of IUser.get_Location()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Name">
            <summary>Sets the stub of IUser.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Notifications">
            <summary>Sets the stub of IUser.get_Notifications()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileBackgroundColor">
            <summary>Sets the stub of IUser.get_ProfileBackgroundColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileBackgroundImageUrl">
            <summary>Sets the stub of IUser.get_ProfileBackgroundImageUrl()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileBackgroundImageUrlHttps">
            <summary>Sets the stub of IUser.get_ProfileBackgroundImageUrlHttps()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileBackgroundTitle">
            <summary>Sets the stub of IUser.get_ProfileBackgroundTitle()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileBannerURL">
            <summary>Sets the stub of IUser.get_ProfileBannerURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileImageFullSizeUrl">
            <summary>Sets the stub of IUser.get_ProfileImageFullSizeUrl()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileImageUrl">
            <summary>Sets the stub of IUser.get_ProfileImageUrl()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileImageUrlHttps">
            <summary>Sets the stub of IUser.get_ProfileImageUrlHttps()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileLinkColor">
            <summary>Sets the stub of IUser.get_ProfileLinkColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileSidebarBorderColor">
            <summary>Sets the stub of IUser.get_ProfileSidebarBorderColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileSidebarFillColor">
            <summary>Sets the stub of IUser.get_ProfileSidebarFillColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileTextColor">
            <summary>Sets the stub of IUser.get_ProfileTextColor()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ProfileUseBackgroundImage">
            <summary>Sets the stub of IUser.get_ProfileUseBackgroundImage()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Protected">
            <summary>Sets the stub of IUser.get_Protected()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Retweets">
            <summary>Sets the stub of IUser.get_Retweets()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ScreenName">
            <summary>Sets the stub of IUser.get_ScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#ShowAllInlineMedia">
            <summary>Sets the stub of IUser.get_ShowAllInlineMedia()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Status">
            <summary>Sets the stub of IUser.get_Status()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#StatusesCount">
            <summary>Sets the stub of IUser.get_StatusesCount()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#TimeZone">
            <summary>Sets the stub of IUser.get_TimeZone()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Timeline">
            <summary>Sets the stub of IUser.get_Timeline()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#TweetsRetweetedByFollowers">
            <summary>Sets the stub of IUser.get_TweetsRetweetedByFollowers()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Url">
            <summary>Sets the stub of IUser.get_Url()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#UserDTO">
            <summary>Sets the stub of IUser.get_UserDTO()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#UserIdentifier">
            <summary>Sets the stub of IUser.get_UserIdentifier()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#UtcOffset">
            <summary>Sets the stub of IUser.get_UtcOffset()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#Verified">
            <summary>Sets the stub of IUser.get_Verified()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#WithheldInCountries">
            <summary>Sets the stub of IUser.get_WithheldInCountries()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Fakes.StubIUser.tc::Tweetinvi#Core#Interfaces#IUser#WithheldScope">
            <summary>Sets the stub of IUser.get_WithheldScope()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIDescriptionEntity">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Entities.IDescriptionEntity</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIDescriptionEntity.#ctor">
            <summary>Initializes a new instance of type StubIDescriptionEntity</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIDescriptionEntity.AttachBackingFieldToUrls">
            <summary>Attaches delegates to emulate StubIDescriptionEntity.Urls as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIDescriptionEntity.UrlsGet">
            <summary>Sets the stub of IDescriptionEntity.get_Urls()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIDescriptionEntity.UrlsSetIEnumerableOfIUrlEntity">
            <summary>Sets the stub of IDescriptionEntity.set_Urls(IEnumerable`1&lt;IUrlEntity&gt; value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIDescriptionEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IDescriptionEntity#Urls">
            <summary>Sets the stub of IDescriptionEntity.get_Urls()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIHashtagEntity">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Entities.IHashtagEntity</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIHashtagEntity.#ctor">
            <summary>Initializes a new instance of type StubIHashtagEntity</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIHashtagEntity.AttachBackingFieldToIndices">
            <summary>Attaches delegates to emulate StubIHashtagEntity.Indices as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIHashtagEntity.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubIHashtagEntity.Text as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIHashtagEntity.IndicesGet">
            <summary>Sets the stub of IHashtagEntity.get_Indices()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIHashtagEntity.IndicesSetInt32Array">
            <summary>Sets the stub of IHashtagEntity.set_Indices(Int32[] value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIHashtagEntity.TextGet">
            <summary>Sets the stub of IHashtagEntity.get_Text()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIHashtagEntity.TextSetString">
            <summary>Sets the stub of IHashtagEntity.set_Text(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIHashtagEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IHashtagEntity#Indices">
            <summary>Sets the stub of IHashtagEntity.get_Indices()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIHashtagEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IHashtagEntity#Text">
            <summary>Sets the stub of IHashtagEntity.get_Text()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Entities.IMediaEntity</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.#ctor">
            <summary>Initializes a new instance of type StubIMediaEntity</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.AttachBackingFieldToDisplayURL">
            <summary>Attaches delegates to emulate StubIMediaEntity.DisplayURL as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.AttachBackingFieldToExpandedURL">
            <summary>Attaches delegates to emulate StubIMediaEntity.ExpandedURL as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubIMediaEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.AttachBackingFieldToIdStr">
            <summary>Attaches delegates to emulate StubIMediaEntity.IdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.AttachBackingFieldToIndices">
            <summary>Attaches delegates to emulate StubIMediaEntity.Indices as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.AttachBackingFieldToMediaType">
            <summary>Attaches delegates to emulate StubIMediaEntity.MediaType as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.AttachBackingFieldToMediaURL">
            <summary>Attaches delegates to emulate StubIMediaEntity.MediaURL as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.AttachBackingFieldToMediaURLHttps">
            <summary>Attaches delegates to emulate StubIMediaEntity.MediaURLHttps as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.AttachBackingFieldToSizes">
            <summary>Attaches delegates to emulate StubIMediaEntity.Sizes as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.AttachBackingFieldToURL">
            <summary>Attaches delegates to emulate StubIMediaEntity.URL as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.DisplayURLGet">
            <summary>Sets the stub of IMediaEntity.get_DisplayURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.DisplayURLSetString">
            <summary>Sets the stub of IMediaEntity.set_DisplayURL(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.ExpandedURLGet">
            <summary>Sets the stub of IMediaEntity.get_ExpandedURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.ExpandedURLSetString">
            <summary>Sets the stub of IMediaEntity.set_ExpandedURL(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.IdGet">
            <summary>Sets the stub of IMediaEntity.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.IdSetNullableOfInt64">
            <summary>Sets the stub of IMediaEntity.set_Id(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.IdStrGet">
            <summary>Sets the stub of IMediaEntity.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.IdStrSetString">
            <summary>Sets the stub of IMediaEntity.set_IdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.IndicesGet">
            <summary>Sets the stub of IMediaEntity.get_Indices()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.IndicesSetInt32Array">
            <summary>Sets the stub of IMediaEntity.set_Indices(Int32[] value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.MediaTypeGet">
            <summary>Sets the stub of IMediaEntity.get_MediaType()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.MediaTypeSetString">
            <summary>Sets the stub of IMediaEntity.set_MediaType(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.MediaURLGet">
            <summary>Sets the stub of IMediaEntity.get_MediaURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.MediaURLHttpsGet">
            <summary>Sets the stub of IMediaEntity.get_MediaURLHttps()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.MediaURLHttpsSetString">
            <summary>Sets the stub of IMediaEntity.set_MediaURLHttps(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.MediaURLSetString">
            <summary>Sets the stub of IMediaEntity.set_MediaURL(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.SizesGet">
            <summary>Sets the stub of IMediaEntity.get_Sizes()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.SizesSetDictionaryOfStringIMediaEntitySize">
            <summary>Sets the stub of IMediaEntity.set_Sizes(Dictionary`2&lt;String,IMediaEntitySize&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.URLGet">
            <summary>Sets the stub of IMediaEntity.get_URL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.URLSetString">
            <summary>Sets the stub of IMediaEntity.set_URL(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IMediaEntity#DisplayURL">
            <summary>Sets the stub of IMediaEntity.get_DisplayURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IMediaEntity#ExpandedURL">
            <summary>Sets the stub of IMediaEntity.get_ExpandedURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IMediaEntity#Id">
            <summary>Sets the stub of IMediaEntity.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IMediaEntity#IdStr">
            <summary>Sets the stub of IMediaEntity.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IMediaEntity#Indices">
            <summary>Sets the stub of IMediaEntity.get_Indices()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IMediaEntity#MediaType">
            <summary>Sets the stub of IMediaEntity.get_MediaType()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IMediaEntity#MediaURL">
            <summary>Sets the stub of IMediaEntity.get_MediaURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IMediaEntity#MediaURLHttps">
            <summary>Sets the stub of IMediaEntity.get_MediaURLHttps()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IMediaEntity#Sizes">
            <summary>Sets the stub of IMediaEntity.get_Sizes()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IMediaEntity#URL">
            <summary>Sets the stub of IMediaEntity.get_URL()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntitySize">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Entities.IMediaEntitySize</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntitySize.#ctor">
            <summary>Initializes a new instance of type StubIMediaEntitySize</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntitySize.AttachBackingFieldToHeight">
            <summary>Attaches delegates to emulate StubIMediaEntitySize.Height as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntitySize.AttachBackingFieldToResize">
            <summary>Attaches delegates to emulate StubIMediaEntitySize.Resize as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntitySize.AttachBackingFieldToWidth">
            <summary>Attaches delegates to emulate StubIMediaEntitySize.Width as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntitySize.HeightGet">
            <summary>Sets the stub of IMediaEntitySize.get_Height()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntitySize.HeightSetNullableOfInt32">
            <summary>Sets the stub of IMediaEntitySize.set_Height(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntitySize.ResizeGet">
            <summary>Sets the stub of IMediaEntitySize.get_Resize()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntitySize.ResizeSetString">
            <summary>Sets the stub of IMediaEntitySize.set_Resize(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntitySize.WidthGet">
            <summary>Sets the stub of IMediaEntitySize.get_Width()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntitySize.WidthSetNullableOfInt32">
            <summary>Sets the stub of IMediaEntitySize.set_Width(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntitySize.tc::Tweetinvi#Core#Interfaces#Models#Entities#IMediaEntitySize#Height">
            <summary>Sets the stub of IMediaEntitySize.get_Height()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntitySize.tc::Tweetinvi#Core#Interfaces#Models#Entities#IMediaEntitySize#Resize">
            <summary>Sets the stub of IMediaEntitySize.get_Resize()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIMediaEntitySize.tc::Tweetinvi#Core#Interfaces#Models#Entities#IMediaEntitySize#Width">
            <summary>Sets the stub of IMediaEntitySize.get_Width()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Entities.ITweetEntities</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.#ctor">
            <summary>Initializes a new instance of type StubITweetEntities</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.AttachBackingFieldToHashtags">
            <summary>Attaches delegates to emulate StubITweetEntities.Hashtags as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.AttachBackingFieldToMedias">
            <summary>Attaches delegates to emulate StubITweetEntities.Medias as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.AttachBackingFieldToUrls">
            <summary>Attaches delegates to emulate StubITweetEntities.Urls as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.AttachBackingFieldToUserMentions">
            <summary>Attaches delegates to emulate StubITweetEntities.UserMentions as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.HashtagsGet">
            <summary>Sets the stub of ITweetEntities.get_Hashtags()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.HashtagsSetListOfIHashtagEntity">
            <summary>Sets the stub of ITweetEntities.set_Hashtags(List`1&lt;IHashtagEntity&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.MediasGet">
            <summary>Sets the stub of ITweetEntities.get_Medias()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.MediasSetListOfIMediaEntity">
            <summary>Sets the stub of ITweetEntities.set_Medias(List`1&lt;IMediaEntity&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.UrlsGet">
            <summary>Sets the stub of ITweetEntities.get_Urls()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.UrlsSetListOfIUrlEntity">
            <summary>Sets the stub of ITweetEntities.set_Urls(List`1&lt;IUrlEntity&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.UserMentionsGet">
            <summary>Sets the stub of ITweetEntities.get_UserMentions()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.UserMentionsSetListOfIUserMentionEntity">
            <summary>Sets the stub of ITweetEntities.set_UserMentions(List`1&lt;IUserMentionEntity&gt; value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.tc::Tweetinvi#Core#Interfaces#Models#Entities#ITweetEntities#Hashtags">
            <summary>Sets the stub of ITweetEntities.get_Hashtags()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.tc::Tweetinvi#Core#Interfaces#Models#Entities#ITweetEntities#Medias">
            <summary>Sets the stub of ITweetEntities.get_Medias()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.tc::Tweetinvi#Core#Interfaces#Models#Entities#ITweetEntities#Urls">
            <summary>Sets the stub of ITweetEntities.get_Urls()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubITweetEntities.tc::Tweetinvi#Core#Interfaces#Models#Entities#ITweetEntities#UserMentions">
            <summary>Sets the stub of ITweetEntities.get_UserMentions()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Entities.IUrlEntity</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.#ctor">
            <summary>Initializes a new instance of type StubIUrlEntity</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.AttachBackingFieldToDisplayedURL">
            <summary>Attaches delegates to emulate StubIUrlEntity.DisplayedURL as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.AttachBackingFieldToExpandedURL">
            <summary>Attaches delegates to emulate StubIUrlEntity.ExpandedURL as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.AttachBackingFieldToIndices">
            <summary>Attaches delegates to emulate StubIUrlEntity.Indices as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.AttachBackingFieldToURL">
            <summary>Attaches delegates to emulate StubIUrlEntity.URL as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.DisplayedURLGet">
            <summary>Sets the stub of IUrlEntity.get_DisplayedURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.DisplayedURLSetString">
            <summary>Sets the stub of IUrlEntity.set_DisplayedURL(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.ExpandedURLGet">
            <summary>Sets the stub of IUrlEntity.get_ExpandedURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.ExpandedURLSetString">
            <summary>Sets the stub of IUrlEntity.set_ExpandedURL(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.IndicesGet">
            <summary>Sets the stub of IUrlEntity.get_Indices()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.IndicesSetInt32Array">
            <summary>Sets the stub of IUrlEntity.set_Indices(Int32[] value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.URLGet">
            <summary>Sets the stub of IUrlEntity.get_URL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.URLSetString">
            <summary>Sets the stub of IUrlEntity.set_URL(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IUrlEntity#DisplayedURL">
            <summary>Sets the stub of IUrlEntity.get_DisplayedURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IUrlEntity#ExpandedURL">
            <summary>Sets the stub of IUrlEntity.get_ExpandedURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IUrlEntity#Indices">
            <summary>Sets the stub of IUrlEntity.get_Indices()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUrlEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IUrlEntity#URL">
            <summary>Sets the stub of IUrlEntity.get_URL()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserEntities">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Entities.IUserEntities</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserEntities.#ctor">
            <summary>Initializes a new instance of type StubIUserEntities</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserEntities.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubIUserEntities.Description as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserEntities.AttachBackingFieldToWebsite">
            <summary>Attaches delegates to emulate StubIUserEntities.Website as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserEntities.DescriptionGet">
            <summary>Sets the stub of IUserEntities.get_Description()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserEntities.DescriptionSetIDescriptionEntity">
            <summary>Sets the stub of IUserEntities.set_Description(IDescriptionEntity value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserEntities.WebsiteGet">
            <summary>Sets the stub of IUserEntities.get_Website()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserEntities.WebsiteSetIWebsiteEntity">
            <summary>Sets the stub of IUserEntities.set_Website(IWebsiteEntity value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserEntities.tc::Tweetinvi#Core#Interfaces#Models#Entities#IUserEntities#Description">
            <summary>Sets the stub of IUserEntities.get_Description()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserEntities.tc::Tweetinvi#Core#Interfaces#Models#Entities#IUserEntities#Website">
            <summary>Sets the stub of IUserEntities.get_Website()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Entities.IUserMentionEntity</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.#ctor">
            <summary>Initializes a new instance of type StubIUserMentionEntity</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubIUserMentionEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.AttachBackingFieldToIdStr">
            <summary>Attaches delegates to emulate StubIUserMentionEntity.IdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.AttachBackingFieldToIndices">
            <summary>Attaches delegates to emulate StubIUserMentionEntity.Indices as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIUserMentionEntity.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.AttachBackingFieldToScreenName">
            <summary>Attaches delegates to emulate StubIUserMentionEntity.ScreenName as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.IdGet">
            <summary>Sets the stub of IUserMentionEntity.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.IdSetNullableOfInt64">
            <summary>Sets the stub of IUserMentionEntity.set_Id(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.IdStrGet">
            <summary>Sets the stub of IUserMentionEntity.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.IdStrSetString">
            <summary>Sets the stub of IUserMentionEntity.set_IdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.IndicesGet">
            <summary>Sets the stub of IUserMentionEntity.get_Indices()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.IndicesSetIListOfInt32">
            <summary>Sets the stub of IUserMentionEntity.set_Indices(IList`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.NameGet">
            <summary>Sets the stub of IUserMentionEntity.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.NameSetString">
            <summary>Sets the stub of IUserMentionEntity.set_Name(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.ScreenNameGet">
            <summary>Sets the stub of IUserMentionEntity.get_ScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.ScreenNameSetString">
            <summary>Sets the stub of IUserMentionEntity.set_ScreenName(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IUserMentionEntity#Id">
            <summary>Sets the stub of IUserMentionEntity.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IUserMentionEntity#IdStr">
            <summary>Sets the stub of IUserMentionEntity.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IUserMentionEntity#Indices">
            <summary>Sets the stub of IUserMentionEntity.get_Indices()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IUserMentionEntity#Name">
            <summary>Sets the stub of IUserMentionEntity.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIUserMentionEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IUserMentionEntity#ScreenName">
            <summary>Sets the stub of IUserMentionEntity.get_ScreenName()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIWebsiteEntity">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Entities.IWebsiteEntity</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIWebsiteEntity.#ctor">
            <summary>Initializes a new instance of type StubIWebsiteEntity</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIWebsiteEntity.AttachBackingFieldToUrls">
            <summary>Attaches delegates to emulate StubIWebsiteEntity.Urls as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIWebsiteEntity.UrlsGet">
            <summary>Sets the stub of IWebsiteEntity.get_Urls()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIWebsiteEntity.UrlsSetIEnumerableOfIUrlEntity">
            <summary>Sets the stub of IWebsiteEntity.set_Urls(IEnumerable`1&lt;IUrlEntity&gt; value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Entities.Fakes.StubIWebsiteEntity.tc::Tweetinvi#Core#Interfaces#Models#Entities#IWebsiteEntity#Urls">
            <summary>Sets the stub of IWebsiteEntity.get_Urls()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit">
            <summary>Shim type of Tweetinvi.Core.Interfaces.Models.TokenRateLimit</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.#ctor(Tweetinvi.Core.Interfaces.Models.TokenRateLimit)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.Bind(Tweetinvi.Core.Interfaces.Credentials.ITokenRateLimit)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.Constructor">
            <summary>Sets the shim of TokenRateLimit.TokenRateLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.LimitGet">
            <summary>Sets the shim of TokenRateLimit.get_Limit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.LimitSetInt32">
            <summary>Sets the shim of TokenRateLimit.set_Limit(Int32 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.RemainingGet">
            <summary>Sets the shim of TokenRateLimit.get_Remaining()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.RemainingSetInt32">
            <summary>Sets the shim of TokenRateLimit.set_Remaining(Int32 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.ResetDateTimeGet">
            <summary>Sets the shim of TokenRateLimit.get_ResetDateTime()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.ResetDateTimeInSecondsGet">
            <summary>Sets the shim of TokenRateLimit.get_ResetDateTimeInSeconds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.ResetDateTimeInSecondsSetDouble">
            <summary>Sets the shim of TokenRateLimit.set_ResetDateTimeInSeconds(Double value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.ResetDateTimeSetDateTime">
            <summary>Sets the shim of TokenRateLimit.set_ResetDateTime(DateTime value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.ResetGet">
            <summary>Sets the shim of TokenRateLimit.get_Reset()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.ResetSetInt64">
            <summary>Sets the shim of TokenRateLimit.set_Reset(Int64 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.AllInstances.LimitGet">
            <summary>Sets the shim of TokenRateLimit.get_Limit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.AllInstances.LimitSetInt32">
            <summary>Sets the shim of TokenRateLimit.set_Limit(Int32 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.AllInstances.RemainingGet">
            <summary>Sets the shim of TokenRateLimit.get_Remaining()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.AllInstances.RemainingSetInt32">
            <summary>Sets the shim of TokenRateLimit.set_Remaining(Int32 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.AllInstances.ResetDateTimeGet">
            <summary>Sets the shim of TokenRateLimit.get_ResetDateTime()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.AllInstances.ResetDateTimeInSecondsGet">
            <summary>Sets the shim of TokenRateLimit.get_ResetDateTimeInSeconds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.AllInstances.ResetDateTimeInSecondsSetDouble">
            <summary>Sets the shim of TokenRateLimit.set_ResetDateTimeInSeconds(Double value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.AllInstances.ResetDateTimeSetDateTime">
            <summary>Sets the shim of TokenRateLimit.set_ResetDateTime(DateTime value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.AllInstances.ResetGet">
            <summary>Sets the shim of TokenRateLimit.get_Reset()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimit.AllInstances.ResetSetInt64">
            <summary>Sets the shim of TokenRateLimit.set_Reset(Int64 value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits">
            <summary>Shim type of Tweetinvi.Core.Interfaces.Models.TokenRateLimits</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.#ctor(Tweetinvi.Core.Interfaces.Models.TokenRateLimits)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.Bind(Tweetinvi.Core.Interfaces.Credentials.ITokenRateLimits)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AccessTokenGet">
            <summary>Sets the shim of TokenRateLimits.get_AccessToken()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AccessTokenSetString">
            <summary>Sets the shim of TokenRateLimits.set_AccessToken(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AccountLoginVerificationEnrollmentLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_AccountLoginVerificationEnrollmentLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AccountSettingsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_AccountSettingsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AccountUpdateProfileLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_AccountUpdateProfileLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AccountVerifyCredentialsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_AccountVerifyCredentialsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.ApplicationRateLimitStatusLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ApplicationRateLimitStatusLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.BlocksIdsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_BlocksIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.BlocksListLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_BlocksListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.Constructor">
            <summary>Sets the shim of TokenRateLimits.TokenRateLimits()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.DeviceTokenLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_DeviceTokenLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.DirectMessagesLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_DirectMessagesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.DirectMessagesSentAndReceivedLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_DirectMessagesSentAndReceivedLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.DirectMessagesSentLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_DirectMessagesSentLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.DirectMessagesShowLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_DirectMessagesShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.FavoritesListLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FavoritesListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.FollowersIdsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FollowersIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.FollowersListLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FollowersListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.FriendsFollowingIdsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendsFollowingIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.FriendsFollowingListLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendsFollowingListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.FriendsIdsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendsIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.FriendsListLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendsListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.FriendshipsIncomingLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendshipsIncomingLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.FriendshipsLookupLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendshipsLookupLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.FriendshipsNoRetweetsIdsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendshipsNoRetweetsIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.FriendshipsOutgoingLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendshipsOutgoingLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.FriendshipsShowLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendshipsShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.GeoGetPlaceFromIdLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_GeoGetPlaceFromIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.GeoReverseGeoCodeLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_GeoReverseGeoCodeLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.GeoSearchLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_GeoSearchLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.GeoSimilarPlacesLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_GeoSimilarPlacesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.HelpConfigurationLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_HelpConfigurationLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.HelpLanguagesLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_HelpLanguagesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.HelpPrivacyLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_HelpPrivacyLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.HelpSettingsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_HelpSettingsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.HelpTosLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_HelpTosLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.ListsListLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.ListsMembersLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsMembersLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.ListsMembersShowLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsMembersShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.ListsMembershipsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsMembershipsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.ListsOwnershipsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsOwnershipsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.ListsShowLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.ListsStatusesLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsStatusesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.ListsSubscribersLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsSubscribersLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.ListsSubscribersShowLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsSubscribersShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.ListsSubscriptionsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsSubscriptionsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.MutesUserIdsGet">
            <summary>Sets the shim of TokenRateLimits.get_MutesUserIds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.MutesUserListGet">
            <summary>Sets the shim of TokenRateLimits.get_MutesUserList()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.SavedSearchDestroyListGet">
            <summary>Sets the shim of TokenRateLimits.get_SavedSearchDestroyList()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.SavedSearchesListLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_SavedSearchesListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.SavedSearchesShowIdLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_SavedSearchesShowIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.SearchTweetsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_SearchTweetsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.StatusesFriendsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesFriendsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.StatusesHomeTimelineLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesHomeTimelineLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.StatusesLookupLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesLookupLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.StatusesMentionsTimelineLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesMentionsTimelineLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.StatusesOembedLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesOembedLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.StatusesRetweetersIdsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesRetweetersIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.StatusesRetweetsIdLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesRetweetsIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.StatusesRetweetsOfMeLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesRetweetsOfMeLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.StatusesShowIdLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesShowIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.StatusesUserTimelineLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesUserTimelineLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.TrendsAvailableLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_TrendsAvailableLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.TrendsClosestLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_TrendsClosestLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.TrendsPlaceLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_TrendsPlaceLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.UsersContributeesLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersContributeesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.UsersContributorsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersContributorsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.UsersDerivedInfoLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersDerivedInfoLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.UsersLookupLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersLookupLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.UsersProfileBannerLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersProfileBannerLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.UsersReportSpamLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersReportSpamLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.UsersSearchLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersSearchLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.UsersShowIdLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersShowIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.UsersSuggestionsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersSuggestionsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.UsersSuggestionsSlugLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersSuggestionsSlugLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.UsersSuggestionsSlugMembersLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersSuggestionsSlugMembersLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits._rateLimitContextSetJObject">
            <summary>Sets the shim of TokenRateLimits.set__rateLimitContext(JObject value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.AccessTokenGet">
            <summary>Sets the shim of TokenRateLimits.get_AccessToken()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.AccessTokenSetString">
            <summary>Sets the shim of TokenRateLimits.set_AccessToken(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.AccountLoginVerificationEnrollmentLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_AccountLoginVerificationEnrollmentLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.AccountSettingsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_AccountSettingsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.AccountUpdateProfileLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_AccountUpdateProfileLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.AccountVerifyCredentialsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_AccountVerifyCredentialsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.ApplicationRateLimitStatusLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ApplicationRateLimitStatusLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.BlocksIdsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_BlocksIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.BlocksListLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_BlocksListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.DeviceTokenLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_DeviceTokenLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.DirectMessagesLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_DirectMessagesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.DirectMessagesSentAndReceivedLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_DirectMessagesSentAndReceivedLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.DirectMessagesSentLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_DirectMessagesSentLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.DirectMessagesShowLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_DirectMessagesShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.FavoritesListLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FavoritesListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.FollowersIdsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FollowersIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.FollowersListLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FollowersListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.FriendsFollowingIdsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendsFollowingIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.FriendsFollowingListLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendsFollowingListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.FriendsIdsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendsIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.FriendsListLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendsListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.FriendshipsIncomingLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendshipsIncomingLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.FriendshipsLookupLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendshipsLookupLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.FriendshipsNoRetweetsIdsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendshipsNoRetweetsIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.FriendshipsOutgoingLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendshipsOutgoingLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.FriendshipsShowLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_FriendshipsShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.GeoGetPlaceFromIdLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_GeoGetPlaceFromIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.GeoReverseGeoCodeLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_GeoReverseGeoCodeLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.GeoSearchLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_GeoSearchLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.GeoSimilarPlacesLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_GeoSimilarPlacesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.HelpConfigurationLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_HelpConfigurationLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.HelpLanguagesLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_HelpLanguagesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.HelpPrivacyLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_HelpPrivacyLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.HelpSettingsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_HelpSettingsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.HelpTosLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_HelpTosLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.ListsListLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.ListsMembersLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsMembersLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.ListsMembersShowLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsMembersShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.ListsMembershipsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsMembershipsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.ListsOwnershipsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsOwnershipsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.ListsShowLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.ListsStatusesLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsStatusesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.ListsSubscribersLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsSubscribersLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.ListsSubscribersShowLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsSubscribersShowLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.ListsSubscriptionsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_ListsSubscriptionsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.MutesUserIdsGet">
            <summary>Sets the shim of TokenRateLimits.get_MutesUserIds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.MutesUserListGet">
            <summary>Sets the shim of TokenRateLimits.get_MutesUserList()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.SavedSearchDestroyListGet">
            <summary>Sets the shim of TokenRateLimits.get_SavedSearchDestroyList()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.SavedSearchesListLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_SavedSearchesListLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.SavedSearchesShowIdLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_SavedSearchesShowIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.SearchTweetsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_SearchTweetsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.StatusesFriendsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesFriendsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.StatusesHomeTimelineLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesHomeTimelineLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.StatusesLookupLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesLookupLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.StatusesMentionsTimelineLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesMentionsTimelineLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.StatusesOembedLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesOembedLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.StatusesRetweetersIdsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesRetweetersIdsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.StatusesRetweetsIdLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesRetweetsIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.StatusesRetweetsOfMeLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesRetweetsOfMeLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.StatusesShowIdLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesShowIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.StatusesUserTimelineLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_StatusesUserTimelineLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.TrendsAvailableLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_TrendsAvailableLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.TrendsClosestLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_TrendsClosestLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.TrendsPlaceLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_TrendsPlaceLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.UsersContributeesLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersContributeesLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.UsersContributorsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersContributorsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.UsersDerivedInfoLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersDerivedInfoLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.UsersLookupLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersLookupLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.UsersProfileBannerLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersProfileBannerLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.UsersReportSpamLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersReportSpamLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.UsersSearchLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersSearchLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.UsersShowIdLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersShowIdLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.UsersSuggestionsLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersSuggestionsLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.UsersSuggestionsSlugLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersSuggestionsSlugLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances.UsersSuggestionsSlugMembersLimitGet">
            <summary>Sets the shim of TokenRateLimits.get_UsersSuggestionsSlugMembersLimit()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.ShimTokenRateLimits.AllInstances._rateLimitContextSetJObject">
            <summary>Sets the shim of TokenRateLimits.set__rateLimitContext(JObject value)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.IAccountSettings</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.#ctor">
            <summary>Initializes a new instance of type StubIAccountSettings</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.AccountSettingsDTOGet">
            <summary>Sets the stub of IAccountSettings.get_AccountSettingsDTO()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.AccountSettingsDTOSetIAccountSettingsDTO">
            <summary>Sets the stub of IAccountSettings.set_AccountSettingsDTO(IAccountSettingsDTO value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.AlwaysUseHttpsGet">
            <summary>Sets the stub of IAccountSettings.get_AlwaysUseHttps()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.AttachBackingFieldToAccountSettingsDTO">
            <summary>Attaches delegates to emulate StubIAccountSettings.AccountSettingsDTO as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.DiscoverableByEmailGet">
            <summary>Sets the stub of IAccountSettings.get_DiscoverableByEmail()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.GeoEnabledGet">
            <summary>Sets the stub of IAccountSettings.get_GeoEnabled()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.LanguageGet">
            <summary>Sets the stub of IAccountSettings.get_Language()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.PrivacyModeGet">
            <summary>Sets the stub of IAccountSettings.get_PrivacyMode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.ScreenNameGet">
            <summary>Sets the stub of IAccountSettings.get_ScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.ShowAllInlineMediaGet">
            <summary>Sets the stub of IAccountSettings.get_ShowAllInlineMedia()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.SleepTimeEnabledGet">
            <summary>Sets the stub of IAccountSettings.get_SleepTimeEnabled()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.SleepTimeEndHourGet">
            <summary>Sets the stub of IAccountSettings.get_SleepTimeEndHour()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.SleepTimeStartHourGet">
            <summary>Sets the stub of IAccountSettings.get_SleepTimeStartHour()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.TimeZoneGet">
            <summary>Sets the stub of IAccountSettings.get_TimeZone()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.TrendLocationGet">
            <summary>Sets the stub of IAccountSettings.get_TrendLocation()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.UseCookiePersonalizationGet">
            <summary>Sets the stub of IAccountSettings.get_UseCookiePersonalization()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.tc::Tweetinvi#Core#Interfaces#Models#IAccountSettings#AccountSettingsDTO">
            <summary>Sets the stub of IAccountSettings.get_AccountSettingsDTO()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.tc::Tweetinvi#Core#Interfaces#Models#IAccountSettings#AlwaysUseHttps">
            <summary>Sets the stub of IAccountSettings.get_AlwaysUseHttps()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.tc::Tweetinvi#Core#Interfaces#Models#IAccountSettings#DiscoverableByEmail">
            <summary>Sets the stub of IAccountSettings.get_DiscoverableByEmail()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.tc::Tweetinvi#Core#Interfaces#Models#IAccountSettings#GeoEnabled">
            <summary>Sets the stub of IAccountSettings.get_GeoEnabled()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.tc::Tweetinvi#Core#Interfaces#Models#IAccountSettings#Language">
            <summary>Sets the stub of IAccountSettings.get_Language()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.tc::Tweetinvi#Core#Interfaces#Models#IAccountSettings#PrivacyMode">
            <summary>Sets the stub of IAccountSettings.get_PrivacyMode()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.tc::Tweetinvi#Core#Interfaces#Models#IAccountSettings#ScreenName">
            <summary>Sets the stub of IAccountSettings.get_ScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.tc::Tweetinvi#Core#Interfaces#Models#IAccountSettings#ShowAllInlineMedia">
            <summary>Sets the stub of IAccountSettings.get_ShowAllInlineMedia()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.tc::Tweetinvi#Core#Interfaces#Models#IAccountSettings#SleepTimeEnabled">
            <summary>Sets the stub of IAccountSettings.get_SleepTimeEnabled()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.tc::Tweetinvi#Core#Interfaces#Models#IAccountSettings#SleepTimeEndHour">
            <summary>Sets the stub of IAccountSettings.get_SleepTimeEndHour()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.tc::Tweetinvi#Core#Interfaces#Models#IAccountSettings#SleepTimeStartHour">
            <summary>Sets the stub of IAccountSettings.get_SleepTimeStartHour()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.tc::Tweetinvi#Core#Interfaces#Models#IAccountSettings#TimeZone">
            <summary>Sets the stub of IAccountSettings.get_TimeZone()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.tc::Tweetinvi#Core#Interfaces#Models#IAccountSettings#TrendLocation">
            <summary>Sets the stub of IAccountSettings.get_TrendLocation()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIAccountSettings.tc::Tweetinvi#Core#Interfaces#Models#IAccountSettings#UseCookiePersonalization">
            <summary>Sets the stub of IAccountSettings.get_UseCookiePersonalization()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubICoordinates">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.ICoordinates</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubICoordinates.#ctor">
            <summary>Initializes a new instance of type StubICoordinates</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubICoordinates.AttachBackingFieldToLatitude">
            <summary>Attaches delegates to emulate StubICoordinates.Latitude as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubICoordinates.AttachBackingFieldToLongitude">
            <summary>Attaches delegates to emulate StubICoordinates.Longitude as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubICoordinates.LatitudeGet">
            <summary>Sets the stub of ICoordinates.get_Latitude()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubICoordinates.LatitudeSetDouble">
            <summary>Sets the stub of ICoordinates.set_Latitude(Double value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubICoordinates.LongitudeGet">
            <summary>Sets the stub of ICoordinates.get_Longitude()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubICoordinates.LongitudeSetDouble">
            <summary>Sets the stub of ICoordinates.set_Longitude(Double value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubICoordinates.tc::Tweetinvi#Core#Interfaces#Models#ICoordinates#Latitude">
            <summary>Sets the stub of ICoordinates.get_Latitude()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubICoordinates.tc::Tweetinvi#Core#Interfaces#Models#ICoordinates#Longitude">
            <summary>Sets the stub of ICoordinates.get_Longitude()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubIFriendshipAuthorizations">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.IFriendshipAuthorizations</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIFriendshipAuthorizations.#ctor">
            <summary>Initializes a new instance of type StubIFriendshipAuthorizations</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIFriendshipAuthorizations.AttachBackingFieldToDeviceNotificationEnabled">
            <summary>Attaches delegates to emulate StubIFriendshipAuthorizations.DeviceNotificationEnabled as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIFriendshipAuthorizations.AttachBackingFieldToRetweetsEnabled">
            <summary>Attaches delegates to emulate StubIFriendshipAuthorizations.RetweetsEnabled as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIFriendshipAuthorizations.DeviceNotificationEnabledGet">
            <summary>Sets the stub of IFriendshipAuthorizations.get_DeviceNotificationEnabled()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIFriendshipAuthorizations.DeviceNotificationEnabledSetBoolean">
            <summary>Sets the stub of IFriendshipAuthorizations.set_DeviceNotificationEnabled(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIFriendshipAuthorizations.RetweetsEnabledGet">
            <summary>Sets the stub of IFriendshipAuthorizations.get_RetweetsEnabled()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIFriendshipAuthorizations.RetweetsEnabledSetBoolean">
            <summary>Sets the stub of IFriendshipAuthorizations.set_RetweetsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIFriendshipAuthorizations.tc::Tweetinvi#Core#Interfaces#Models#IFriendshipAuthorizations#DeviceNotificationEnabled">
            <summary>Sets the stub of IFriendshipAuthorizations.get_DeviceNotificationEnabled()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIFriendshipAuthorizations.tc::Tweetinvi#Core#Interfaces#Models#IFriendshipAuthorizations#RetweetsEnabled">
            <summary>Sets the stub of IFriendshipAuthorizations.get_RetweetsEnabled()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeo">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.IGeo</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeo.#ctor">
            <summary>Initializes a new instance of type StubIGeo</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeo.AttachBackingFieldToCoordinates">
            <summary>Attaches delegates to emulate StubIGeo.Coordinates as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeo.AttachBackingFieldToType">
            <summary>Attaches delegates to emulate StubIGeo.Type as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeo.CoordinatesGet">
            <summary>Sets the stub of IGeo.get_Coordinates()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeo.CoordinatesSetListOfICoordinates">
            <summary>Sets the stub of IGeo.set_Coordinates(List`1&lt;ICoordinates&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeo.TypeGet">
            <summary>Sets the stub of IGeo.get_Type()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeo.TypeSetString">
            <summary>Sets the stub of IGeo.set_Type(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeo.tc::Tweetinvi#Core#Interfaces#Models#IGeo#Coordinates">
            <summary>Sets the stub of IGeo.get_Coordinates()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeo.tc::Tweetinvi#Core#Interfaces#Models#IGeo#Type">
            <summary>Sets the stub of IGeo.get_Type()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeoCode">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.IGeoCode</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeoCode.#ctor">
            <summary>Initializes a new instance of type StubIGeoCode</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeoCode.AttachBackingFieldToCoordinates">
            <summary>Attaches delegates to emulate StubIGeoCode.Coordinates as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeoCode.AttachBackingFieldToDistanceMeasure">
            <summary>Attaches delegates to emulate StubIGeoCode.DistanceMeasure as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeoCode.AttachBackingFieldToRadius">
            <summary>Attaches delegates to emulate StubIGeoCode.Radius as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeoCode.CoordinatesGet">
            <summary>Sets the stub of IGeoCode.get_Coordinates()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeoCode.CoordinatesSetICoordinates">
            <summary>Sets the stub of IGeoCode.set_Coordinates(ICoordinates value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeoCode.DistanceMeasureGet">
            <summary>Sets the stub of IGeoCode.get_DistanceMeasure()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeoCode.DistanceMeasureSetDistanceMeasure">
            <summary>Sets the stub of IGeoCode.set_DistanceMeasure(DistanceMeasure value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeoCode.RadiusGet">
            <summary>Sets the stub of IGeoCode.get_Radius()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeoCode.RadiusSetDouble">
            <summary>Sets the stub of IGeoCode.set_Radius(Double value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeoCode.tc::Tweetinvi#Core#Interfaces#Models#IGeoCode#Coordinates">
            <summary>Sets the stub of IGeoCode.get_Coordinates()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeoCode.tc::Tweetinvi#Core#Interfaces#Models#IGeoCode#DistanceMeasure">
            <summary>Sets the stub of IGeoCode.get_DistanceMeasure()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIGeoCode.tc::Tweetinvi#Core#Interfaces#Models#IGeoCode#Radius">
            <summary>Sets the stub of IGeoCode.get_Radius()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubILocation">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.ILocation</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubILocation.#ctor">
            <summary>Initializes a new instance of type StubILocation</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubILocation.AttachBackingFieldToCoordinate1">
            <summary>Attaches delegates to emulate StubILocation.Coordinate1 as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubILocation.AttachBackingFieldToCoordinate2">
            <summary>Attaches delegates to emulate StubILocation.Coordinate2 as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubILocation.Coordinate1Get">
            <summary>Sets the stub of ILocation.get_Coordinate1()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubILocation.Coordinate1SetICoordinates">
            <summary>Sets the stub of ILocation.set_Coordinate1(ICoordinates value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubILocation.Coordinate2Get">
            <summary>Sets the stub of ILocation.get_Coordinate2()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubILocation.Coordinate2SetICoordinates">
            <summary>Sets the stub of ILocation.set_Coordinate2(ICoordinates value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubILocation.tc::Tweetinvi#Core#Interfaces#Models#ILocation#Coordinate1">
            <summary>Sets the stub of ILocation.get_Coordinate1()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubILocation.tc::Tweetinvi#Core#Interfaces#Models#ILocation#Coordinate2">
            <summary>Sets the stub of ILocation.get_Coordinate2()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.IOEmbedTweet</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.#ctor">
            <summary>Initializes a new instance of type StubIOEmbedTweet</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.AuthorNameGet">
            <summary>Sets the stub of IOEmbedTweet.get_AuthorName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.AuthorURLGet">
            <summary>Sets the stub of IOEmbedTweet.get_AuthorURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.CacheAgeGet">
            <summary>Sets the stub of IOEmbedTweet.get_CacheAge()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.HTMLGet">
            <summary>Sets the stub of IOEmbedTweet.get_HTML()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.HeightGet">
            <summary>Sets the stub of IOEmbedTweet.get_Height()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.ProviderURLGet">
            <summary>Sets the stub of IOEmbedTweet.get_ProviderURL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.TypeGet">
            <summary>Sets the stub of IOEmbedTweet.get_Type()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.URLGet">
            <summary>Sets the stub of IOEmbedTweet.get_URL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.VersionGet">
            <summary>Sets the stub of IOEmbedTweet.get_Version()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.WidthGet">
            <summary>Sets the stub of IOEmbedTweet.get_Width()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.tc::Tweetinvi#Core#Interfaces#Models#IOEmbedTweet#AuthorName">
            <summary>Sets the stub of IOEmbedTweet.get_AuthorName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.tc::Tweetinvi#Core#Interfaces#Models#IOEmbedTweet#AuthorURL">
            <summary>Sets the stub of IOEmbedTweet.get_AuthorURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.tc::Tweetinvi#Core#Interfaces#Models#IOEmbedTweet#CacheAge">
            <summary>Sets the stub of IOEmbedTweet.get_CacheAge()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.tc::Tweetinvi#Core#Interfaces#Models#IOEmbedTweet#HTML">
            <summary>Sets the stub of IOEmbedTweet.get_HTML()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.tc::Tweetinvi#Core#Interfaces#Models#IOEmbedTweet#Height">
            <summary>Sets the stub of IOEmbedTweet.get_Height()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.tc::Tweetinvi#Core#Interfaces#Models#IOEmbedTweet#ProviderURL">
            <summary>Sets the stub of IOEmbedTweet.get_ProviderURL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.tc::Tweetinvi#Core#Interfaces#Models#IOEmbedTweet#Type">
            <summary>Sets the stub of IOEmbedTweet.get_Type()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.tc::Tweetinvi#Core#Interfaces#Models#IOEmbedTweet#URL">
            <summary>Sets the stub of IOEmbedTweet.get_URL()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.tc::Tweetinvi#Core#Interfaces#Models#IOEmbedTweet#Version">
            <summary>Sets the stub of IOEmbedTweet.get_Version()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIOEmbedTweet.tc::Tweetinvi#Core#Interfaces#Models#IOEmbedTweet#Width">
            <summary>Sets the stub of IOEmbedTweet.get_Width()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.IPlace</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.#ctor">
            <summary>Initializes a new instance of type StubIPlace</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.AttachBackingFieldToAttributes">
            <summary>Attaches delegates to emulate StubIPlace.Attributes as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.AttachBackingFieldToBoundingBox">
            <summary>Attaches delegates to emulate StubIPlace.BoundingBox as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.AttachBackingFieldToContainedWithin">
            <summary>Attaches delegates to emulate StubIPlace.ContainedWithin as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.AttachBackingFieldToCountry">
            <summary>Attaches delegates to emulate StubIPlace.Country as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.AttachBackingFieldToCountryCode">
            <summary>Attaches delegates to emulate StubIPlace.CountryCode as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.AttachBackingFieldToFullName">
            <summary>Attaches delegates to emulate StubIPlace.FullName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.AttachBackingFieldToGeometry">
            <summary>Attaches delegates to emulate StubIPlace.Geometry as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIPlace.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.AttachBackingFieldToPlaceType">
            <summary>Attaches delegates to emulate StubIPlace.PlaceType as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.AttachBackingFieldToUrl">
            <summary>Attaches delegates to emulate StubIPlace.Url as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.AttributesGet">
            <summary>Sets the stub of IPlace.get_Attributes()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.AttributesSetDictionaryOfStringString">
            <summary>Sets the stub of IPlace.set_Attributes(Dictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.BoundingBoxGet">
            <summary>Sets the stub of IPlace.get_BoundingBox()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.BoundingBoxSetIGeo">
            <summary>Sets the stub of IPlace.set_BoundingBox(IGeo value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.ContainedWithinGet">
            <summary>Sets the stub of IPlace.get_ContainedWithin()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.ContainedWithinSetListOfIPlace">
            <summary>Sets the stub of IPlace.set_ContainedWithin(List`1&lt;IPlace&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.CountryCodeGet">
            <summary>Sets the stub of IPlace.get_CountryCode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.CountryCodeSetString">
            <summary>Sets the stub of IPlace.set_CountryCode(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.CountryGet">
            <summary>Sets the stub of IPlace.get_Country()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.CountrySetString">
            <summary>Sets the stub of IPlace.set_Country(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.FullNameGet">
            <summary>Sets the stub of IPlace.get_FullName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.FullNameSetString">
            <summary>Sets the stub of IPlace.set_FullName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.GeometryGet">
            <summary>Sets the stub of IPlace.get_Geometry()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.GeometrySetIGeo">
            <summary>Sets the stub of IPlace.set_Geometry(IGeo value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.IdStrGet">
            <summary>Sets the stub of IPlace.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.NameGet">
            <summary>Sets the stub of IPlace.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.NameSetString">
            <summary>Sets the stub of IPlace.set_Name(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.PlaceTypeGet">
            <summary>Sets the stub of IPlace.get_PlaceType()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.PlaceTypeSetPlaceType">
            <summary>Sets the stub of IPlace.set_PlaceType(PlaceType value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.UrlGet">
            <summary>Sets the stub of IPlace.get_Url()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.UrlSetString">
            <summary>Sets the stub of IPlace.set_Url(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.tc::Tweetinvi#Core#Interfaces#Models#IPlace#Attributes">
            <summary>Sets the stub of IPlace.get_Attributes()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.tc::Tweetinvi#Core#Interfaces#Models#IPlace#BoundingBox">
            <summary>Sets the stub of IPlace.get_BoundingBox()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.tc::Tweetinvi#Core#Interfaces#Models#IPlace#ContainedWithin">
            <summary>Sets the stub of IPlace.get_ContainedWithin()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.tc::Tweetinvi#Core#Interfaces#Models#IPlace#Country">
            <summary>Sets the stub of IPlace.get_Country()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.tc::Tweetinvi#Core#Interfaces#Models#IPlace#CountryCode">
            <summary>Sets the stub of IPlace.get_CountryCode()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.tc::Tweetinvi#Core#Interfaces#Models#IPlace#FullName">
            <summary>Sets the stub of IPlace.get_FullName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.tc::Tweetinvi#Core#Interfaces#Models#IPlace#Geometry">
            <summary>Sets the stub of IPlace.get_Geometry()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.tc::Tweetinvi#Core#Interfaces#Models#IPlace#IdStr">
            <summary>Sets the stub of IPlace.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.tc::Tweetinvi#Core#Interfaces#Models#IPlace#Name">
            <summary>Sets the stub of IPlace.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.tc::Tweetinvi#Core#Interfaces#Models#IPlace#PlaceType">
            <summary>Sets the stub of IPlace.get_PlaceType()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlace.tc::Tweetinvi#Core#Interfaces#Models#IPlace#Url">
            <summary>Sets the stub of IPlace.get_Url()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.IPlaceTrends</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.#ctor">
            <summary>Initializes a new instance of type StubIPlaceTrends</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.AsOfGet">
            <summary>Sets the stub of IPlaceTrends.get_AsOf()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.AsOfSetDateTime">
            <summary>Sets the stub of IPlaceTrends.set_AsOf(DateTime value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.AttachBackingFieldToAsOf">
            <summary>Attaches delegates to emulate StubIPlaceTrends.AsOf as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.AttachBackingFieldToCreatedAt">
            <summary>Attaches delegates to emulate StubIPlaceTrends.CreatedAt as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.AttachBackingFieldToTrends">
            <summary>Attaches delegates to emulate StubIPlaceTrends.Trends as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.AttachBackingFieldTowoeIdLocations">
            <summary>Attaches delegates to emulate StubIPlaceTrends.woeIdLocations as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.CreatedAtGet">
            <summary>Sets the stub of IPlaceTrends.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.CreatedAtSetDateTime">
            <summary>Sets the stub of IPlaceTrends.set_CreatedAt(DateTime value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.TrendsGet">
            <summary>Sets the stub of IPlaceTrends.get_Trends()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.TrendsSetListOfITrend">
            <summary>Sets the stub of IPlaceTrends.set_Trends(List`1&lt;ITrend&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.WoeIdLocationsGet">
            <summary>Sets the stub of IPlaceTrends.get_woeIdLocations()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.WoeIdLocationsSetListOfIWoeIdLocation">
            <summary>Sets the stub of IPlaceTrends.set_woeIdLocations(List`1&lt;IWoeIdLocation&gt; value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.tc::Tweetinvi#Core#Interfaces#Models#IPlaceTrends#AsOf">
            <summary>Sets the stub of IPlaceTrends.get_AsOf()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.tc::Tweetinvi#Core#Interfaces#Models#IPlaceTrends#CreatedAt">
            <summary>Sets the stub of IPlaceTrends.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.tc::Tweetinvi#Core#Interfaces#Models#IPlaceTrends#Trends">
            <summary>Sets the stub of IPlaceTrends.get_Trends()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIPlaceTrends.tc::Tweetinvi#Core#Interfaces#Models#IPlaceTrends#woeIdLocations">
            <summary>Sets the stub of IPlaceTrends.get_woeIdLocations()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.IRelationshipState</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.#ctor">
            <summary>Initializes a new instance of type StubIRelationshipState</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.FollowedByGet">
            <summary>Sets the stub of IRelationshipState.get_FollowedBy()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.FollowingGet">
            <summary>Sets the stub of IRelationshipState.get_Following()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.FollowingRequestedGet">
            <summary>Sets the stub of IRelationshipState.get_FollowingRequested()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.TargetIdGet">
            <summary>Sets the stub of IRelationshipState.get_TargetId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.TargetIdStrGet">
            <summary>Sets the stub of IRelationshipState.get_TargetIdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.TargetNameGet">
            <summary>Sets the stub of IRelationshipState.get_TargetName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.TargetScreenNameGet">
            <summary>Sets the stub of IRelationshipState.get_TargetScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.tc::Tweetinvi#Core#Interfaces#Models#IRelationshipState#FollowedBy">
            <summary>Sets the stub of IRelationshipState.get_FollowedBy()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.tc::Tweetinvi#Core#Interfaces#Models#IRelationshipState#Following">
            <summary>Sets the stub of IRelationshipState.get_Following()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.tc::Tweetinvi#Core#Interfaces#Models#IRelationshipState#FollowingRequested">
            <summary>Sets the stub of IRelationshipState.get_FollowingRequested()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.tc::Tweetinvi#Core#Interfaces#Models#IRelationshipState#TargetId">
            <summary>Sets the stub of IRelationshipState.get_TargetId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.tc::Tweetinvi#Core#Interfaces#Models#IRelationshipState#TargetIdStr">
            <summary>Sets the stub of IRelationshipState.get_TargetIdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.tc::Tweetinvi#Core#Interfaces#Models#IRelationshipState#TargetName">
            <summary>Sets the stub of IRelationshipState.get_TargetName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIRelationshipState.tc::Tweetinvi#Core#Interfaces#Models#IRelationshipState#TargetScreenName">
            <summary>Sets the stub of IRelationshipState.get_TargetScreenName()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.ISavedSearch</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.#ctor">
            <summary>Initializes a new instance of type StubISavedSearch</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubISavedSearch.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.AttachBackingFieldToQuery">
            <summary>Attaches delegates to emulate StubISavedSearch.Query as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.AttachBackingFieldToSavedSearchDTO">
            <summary>Attaches delegates to emulate StubISavedSearch.SavedSearchDTO as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.CreatedAtGet">
            <summary>Sets the stub of ISavedSearch.get_CreatedAt()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.IdGet">
            <summary>Sets the stub of ISavedSearch.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.IdStrGet">
            <summary>Sets the stub of ISavedSearch.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.NameGet">
            <summary>Sets the stub of ISavedSearch.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.NameSetString">
            <summary>Sets the stub of ISavedSearch.set_Name(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.QueryGet">
            <summary>Sets the stub of ISavedSearch.get_Query()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.QuerySetString">
            <summary>Sets the stub of ISavedSearch.set_Query(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.SavedSearchDTOGet">
            <summary>Sets the stub of ISavedSearch.get_SavedSearchDTO()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.SavedSearchDTOSetISavedSearchDTO">
            <summary>Sets the stub of ISavedSearch.set_SavedSearchDTO(ISavedSearchDTO value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.tc::Tweetinvi#Core#Interfaces#Models#ISavedSearch#CreatedAt">
            <summary>Sets the stub of ISavedSearch.get_CreatedAt()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.tc::Tweetinvi#Core#Interfaces#Models#ISavedSearch#Id">
            <summary>Sets the stub of ISavedSearch.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.tc::Tweetinvi#Core#Interfaces#Models#ISavedSearch#IdStr">
            <summary>Sets the stub of ISavedSearch.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.tc::Tweetinvi#Core#Interfaces#Models#ISavedSearch#Name">
            <summary>Sets the stub of ISavedSearch.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.tc::Tweetinvi#Core#Interfaces#Models#ISavedSearch#Query">
            <summary>Sets the stub of ISavedSearch.get_Query()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubISavedSearch.tc::Tweetinvi#Core#Interfaces#Models#ISavedSearch#SavedSearchDTO">
            <summary>Sets the stub of ISavedSearch.get_SavedSearchDTO()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubISearchEngine`1">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.ISearchEngine`1</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubISearchEngine`1.#ctor">
            <summary>Initializes a new instance of type StubISearchEngine</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISearchEngine`1.SearchString">
            <summary>Sets the stub of ISearchEngine`1.Search(String searchQuery)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubISearchEngine`1.tc::Tweetinvi#Core#Interfaces#Models#ISearchEngine{T}#Search(System.String)">
            <summary>Sets the stub of ISearchEngine`1.Search(String searchQuery)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.ISuggestedUserList</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.#ctor">
            <summary>Initializes a new instance of type StubISuggestedUserList</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.AttachBackingFieldToMembers">
            <summary>Attaches delegates to emulate StubISuggestedUserList.Members as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubISuggestedUserList.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.AttachBackingFieldToSize">
            <summary>Attaches delegates to emulate StubISuggestedUserList.Size as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.AttachBackingFieldToSlug">
            <summary>Attaches delegates to emulate StubISuggestedUserList.Slug as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.MembersGet">
            <summary>Sets the stub of ISuggestedUserList.get_Members()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.MembersSetListOfIUser">
            <summary>Sets the stub of ISuggestedUserList.set_Members(List`1&lt;IUser&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.NameGet">
            <summary>Sets the stub of ISuggestedUserList.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.NameSetString">
            <summary>Sets the stub of ISuggestedUserList.set_Name(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.SizeGet">
            <summary>Sets the stub of ISuggestedUserList.get_Size()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.SizeSetInt32">
            <summary>Sets the stub of ISuggestedUserList.set_Size(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.SlugGet">
            <summary>Sets the stub of ISuggestedUserList.get_Slug()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.SlugSetString">
            <summary>Sets the stub of ISuggestedUserList.set_Slug(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.tc::Tweetinvi#Core#Interfaces#Models#ISuggestedUserList#Members">
            <summary>Sets the stub of ISuggestedUserList.get_Members()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.tc::Tweetinvi#Core#Interfaces#Models#ISuggestedUserList#Name">
            <summary>Sets the stub of ISuggestedUserList.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.tc::Tweetinvi#Core#Interfaces#Models#ISuggestedUserList#Size">
            <summary>Sets the stub of ISuggestedUserList.get_Size()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubISuggestedUserList.tc::Tweetinvi#Core#Interfaces#Models#ISuggestedUserList#Slug">
            <summary>Sets the stub of ISuggestedUserList.get_Slug()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubITimeZone">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.ITimeZone</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITimeZone.#ctor">
            <summary>Initializes a new instance of type StubITimeZone</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITimeZone.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubITimeZone.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITimeZone.AttachBackingFieldToTzinfoName">
            <summary>Attaches delegates to emulate StubITimeZone.TzinfoName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITimeZone.AttachBackingFieldToUtcOffset">
            <summary>Attaches delegates to emulate StubITimeZone.UtcOffset as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITimeZone.NameGet">
            <summary>Sets the stub of ITimeZone.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITimeZone.NameSetString">
            <summary>Sets the stub of ITimeZone.set_Name(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITimeZone.TzinfoNameGet">
            <summary>Sets the stub of ITimeZone.get_TzinfoName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITimeZone.TzinfoNameSetString">
            <summary>Sets the stub of ITimeZone.set_TzinfoName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITimeZone.UtcOffsetGet">
            <summary>Sets the stub of ITimeZone.get_UtcOffset()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITimeZone.UtcOffsetSetInt32">
            <summary>Sets the stub of ITimeZone.set_UtcOffset(Int32 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITimeZone.tc::Tweetinvi#Core#Interfaces#Models#ITimeZone#Name">
            <summary>Sets the stub of ITimeZone.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITimeZone.tc::Tweetinvi#Core#Interfaces#Models#ITimeZone#TzinfoName">
            <summary>Sets the stub of ITimeZone.get_TzinfoName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITimeZone.tc::Tweetinvi#Core#Interfaces#Models#ITimeZone#UtcOffset">
            <summary>Sets the stub of ITimeZone.get_UtcOffset()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.ITrend</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.#ctor">
            <summary>Initializes a new instance of type StubITrend</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubITrend.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.AttachBackingFieldToPromotedContent">
            <summary>Attaches delegates to emulate StubITrend.PromotedContent as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.AttachBackingFieldToQuery">
            <summary>Attaches delegates to emulate StubITrend.Query as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.AttachBackingFieldToURL">
            <summary>Attaches delegates to emulate StubITrend.URL as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.NameGet">
            <summary>Sets the stub of ITrend.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.NameSetString">
            <summary>Sets the stub of ITrend.set_Name(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.PromotedContentGet">
            <summary>Sets the stub of ITrend.get_PromotedContent()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.PromotedContentSetString">
            <summary>Sets the stub of ITrend.set_PromotedContent(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.QueryGet">
            <summary>Sets the stub of ITrend.get_Query()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.QuerySetString">
            <summary>Sets the stub of ITrend.set_Query(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.URLGet">
            <summary>Sets the stub of ITrend.get_URL()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.URLSetString">
            <summary>Sets the stub of ITrend.set_URL(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.tc::Tweetinvi#Core#Interfaces#Models#ITrend#Name">
            <summary>Sets the stub of ITrend.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.tc::Tweetinvi#Core#Interfaces#Models#ITrend#PromotedContent">
            <summary>Sets the stub of ITrend.get_PromotedContent()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.tc::Tweetinvi#Core#Interfaces#Models#ITrend#Query">
            <summary>Sets the stub of ITrend.get_Query()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrend.tc::Tweetinvi#Core#Interfaces#Models#ITrend#URL">
            <summary>Sets the stub of ITrend.get_URL()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.ITrendLocation</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.#ctor">
            <summary>Initializes a new instance of type StubITrendLocation</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.AttachBackingFieldToCountry">
            <summary>Attaches delegates to emulate StubITrendLocation.Country as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.AttachBackingFieldToCountryCode">
            <summary>Attaches delegates to emulate StubITrendLocation.CountryCode as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubITrendLocation.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.AttachBackingFieldToParentId">
            <summary>Attaches delegates to emulate StubITrendLocation.ParentId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.AttachBackingFieldToPlaceType">
            <summary>Attaches delegates to emulate StubITrendLocation.PlaceType as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.AttachBackingFieldToUrl">
            <summary>Attaches delegates to emulate StubITrendLocation.Url as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.AttachBackingFieldToWoeId">
            <summary>Attaches delegates to emulate StubITrendLocation.WoeId as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.CountryCodeGet">
            <summary>Sets the stub of ITrendLocation.get_CountryCode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.CountryCodeSetString">
            <summary>Sets the stub of ITrendLocation.set_CountryCode(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.CountryGet">
            <summary>Sets the stub of ITrendLocation.get_Country()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.CountrySetString">
            <summary>Sets the stub of ITrendLocation.set_Country(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.NameGet">
            <summary>Sets the stub of ITrendLocation.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.NameSetString">
            <summary>Sets the stub of ITrendLocation.set_Name(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.ParentIdGet">
            <summary>Sets the stub of ITrendLocation.get_ParentId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.ParentIdSetInt64">
            <summary>Sets the stub of ITrendLocation.set_ParentId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.PlaceTypeGet">
            <summary>Sets the stub of ITrendLocation.get_PlaceType()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.PlaceTypeSetPlaceType">
            <summary>Sets the stub of ITrendLocation.set_PlaceType(PlaceType value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.UrlGet">
            <summary>Sets the stub of ITrendLocation.get_Url()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.UrlSetString">
            <summary>Sets the stub of ITrendLocation.set_Url(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.WoeIdGet">
            <summary>Sets the stub of ITrendLocation.get_WoeId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.WoeIdSetInt64">
            <summary>Sets the stub of ITrendLocation.set_WoeId(Int64 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.tc::Tweetinvi#Core#Interfaces#Models#ITrendLocation#Country">
            <summary>Sets the stub of ITrendLocation.get_Country()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.tc::Tweetinvi#Core#Interfaces#Models#ITrendLocation#CountryCode">
            <summary>Sets the stub of ITrendLocation.get_CountryCode()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.tc::Tweetinvi#Core#Interfaces#Models#ITrendLocation#Name">
            <summary>Sets the stub of ITrendLocation.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.tc::Tweetinvi#Core#Interfaces#Models#ITrendLocation#ParentId">
            <summary>Sets the stub of ITrendLocation.get_ParentId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.tc::Tweetinvi#Core#Interfaces#Models#ITrendLocation#PlaceType">
            <summary>Sets the stub of ITrendLocation.get_PlaceType()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.tc::Tweetinvi#Core#Interfaces#Models#ITrendLocation#Url">
            <summary>Sets the stub of ITrendLocation.get_Url()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITrendLocation.tc::Tweetinvi#Core#Interfaces#Models#ITrendLocation#WoeId">
            <summary>Sets the stub of ITrendLocation.get_WoeId()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubITweetIdentifier">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.ITweetIdentifier</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubITweetIdentifier.#ctor">
            <summary>Initializes a new instance of type StubITweetIdentifier</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITweetIdentifier.IdGet">
            <summary>Sets the stub of ITweetIdentifier.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubITweetIdentifier.IdStrGet">
            <summary>Sets the stub of ITweetIdentifier.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITweetIdentifier.tc::Tweetinvi#Core#Interfaces#Models#ITweetIdentifier#Id">
            <summary>Sets the stub of ITweetIdentifier.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubITweetIdentifier.tc::Tweetinvi#Core#Interfaces#Models#ITweetIdentifier#IdStr">
            <summary>Sets the stub of ITweetIdentifier.get_IdStr()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserIdentifier">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.IUserIdentifier</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserIdentifier.#ctor">
            <summary>Initializes a new instance of type StubIUserIdentifier</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserIdentifier.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubIUserIdentifier.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserIdentifier.AttachBackingFieldToIdStr">
            <summary>Attaches delegates to emulate StubIUserIdentifier.IdStr as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserIdentifier.AttachBackingFieldToScreenName">
            <summary>Attaches delegates to emulate StubIUserIdentifier.ScreenName as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserIdentifier.IdGet">
            <summary>Sets the stub of IUserIdentifier.get_Id()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserIdentifier.IdSetInt64">
            <summary>Sets the stub of IUserIdentifier.set_Id(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserIdentifier.IdStrGet">
            <summary>Sets the stub of IUserIdentifier.get_IdStr()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserIdentifier.IdStrSetString">
            <summary>Sets the stub of IUserIdentifier.set_IdStr(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserIdentifier.ScreenNameGet">
            <summary>Sets the stub of IUserIdentifier.get_ScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserIdentifier.ScreenNameSetString">
            <summary>Sets the stub of IUserIdentifier.set_ScreenName(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserIdentifier.tc::Tweetinvi#Core#Interfaces#Models#IUserIdentifier#Id">
            <summary>Sets the stub of IUserIdentifier.get_Id()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserIdentifier.tc::Tweetinvi#Core#Interfaces#Models#IUserIdentifier#IdStr">
            <summary>Sets the stub of IUserIdentifier.get_IdStr()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserIdentifier.tc::Tweetinvi#Core#Interfaces#Models#IUserIdentifier#ScreenName">
            <summary>Sets the stub of IUserIdentifier.get_ScreenName()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserSearchEngine">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.IUserSearchEngine</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserSearchEngine.#ctor">
            <summary>Initializes a new instance of type StubIUserSearchEngine</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserSearchEngine.SearchString">
            <summary>Sets the stub of ISearchEngine`1.Search(String searchQuery)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserSearchEngine.SearchStringBoolean">
            <summary>Sets the stub of IUserSearchEngine.Search(String searchQuery, Boolean includeEntities)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserSearchEngine.SearchStringInt32Int32Boolean">
            <summary>Sets the stub of IUserSearchEngine.Search(String searchQuery, Int32 resultPerPage, Int32 pageNumber, Boolean includeEntities)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserSearchEngine.tc::Tweetinvi#Core#Interfaces#Models#ISearchEngine{Tweetinvi#Core#Interfaces#IUser}#Search(System.String)">
            <summary>Sets the stub of ISearchEngine`1.Search(String searchQuery)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserSearchEngine.tc::Tweetinvi#Core#Interfaces#Models#IUserSearchEngine#Search(System.String,System.Boolean)">
            <summary>Sets the stub of IUserSearchEngine.Search(String searchQuery, Boolean includeEntities)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIUserSearchEngine.tc::Tweetinvi#Core#Interfaces#Models#IUserSearchEngine#Search(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>Sets the stub of IUserSearchEngine.Search(String searchQuery, Int32 resultPerPage, Int32 pageNumber, Boolean includeEntities)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessage">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.IWarningMessage</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessage.#ctor">
            <summary>Initializes a new instance of type StubIWarningMessage</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessage.CodeGet">
            <summary>Sets the stub of IWarningMessage.get_Code()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessage.MessageGet">
            <summary>Sets the stub of IWarningMessage.get_Message()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessage.tc::Tweetinvi#Core#Interfaces#Models#IWarningMessage#Code">
            <summary>Sets the stub of IWarningMessage.get_Code()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessage.tc::Tweetinvi#Core#Interfaces#Models#IWarningMessage#Message">
            <summary>Sets the stub of IWarningMessage.get_Message()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageFallingBehind">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.IWarningMessageFallingBehind</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageFallingBehind.#ctor">
            <summary>Initializes a new instance of type StubIWarningMessageFallingBehind</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageFallingBehind.CodeGet">
            <summary>Sets the stub of IWarningMessage.get_Code()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageFallingBehind.MessageGet">
            <summary>Sets the stub of IWarningMessage.get_Message()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageFallingBehind.PercentFullGet">
            <summary>Sets the stub of IWarningMessageFallingBehind.get_PercentFull()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageFallingBehind.tc::Tweetinvi#Core#Interfaces#Models#IWarningMessage#Code">
            <summary>Sets the stub of IWarningMessage.get_Code()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageFallingBehind.tc::Tweetinvi#Core#Interfaces#Models#IWarningMessage#Message">
            <summary>Sets the stub of IWarningMessage.get_Message()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageFallingBehind.tc::Tweetinvi#Core#Interfaces#Models#IWarningMessageFallingBehind#PercentFull">
            <summary>Sets the stub of IWarningMessageFallingBehind.get_PercentFull()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageTooManyFollowers">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.IWarningMessageTooManyFollowers</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageTooManyFollowers.#ctor">
            <summary>Initializes a new instance of type StubIWarningMessageTooManyFollowers</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageTooManyFollowers.CodeGet">
            <summary>Sets the stub of IWarningMessage.get_Code()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageTooManyFollowers.MessageGet">
            <summary>Sets the stub of IWarningMessage.get_Message()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageTooManyFollowers.UserIdsGet">
            <summary>Sets the stub of IWarningMessageTooManyFollowers.get_UserIds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageTooManyFollowers.tc::Tweetinvi#Core#Interfaces#Models#IWarningMessage#Code">
            <summary>Sets the stub of IWarningMessage.get_Code()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageTooManyFollowers.tc::Tweetinvi#Core#Interfaces#Models#IWarningMessage#Message">
            <summary>Sets the stub of IWarningMessage.get_Message()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWarningMessageTooManyFollowers.tc::Tweetinvi#Core#Interfaces#Models#IWarningMessageTooManyFollowers#UserIds">
            <summary>Sets the stub of IWarningMessageTooManyFollowers.get_UserIds()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWoeIdLocation">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.IWoeIdLocation</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWoeIdLocation.#ctor">
            <summary>Initializes a new instance of type StubIWoeIdLocation</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWoeIdLocation.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIWoeIdLocation.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWoeIdLocation.AttachBackingFieldToWoeId">
            <summary>Attaches delegates to emulate StubIWoeIdLocation.WoeId as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWoeIdLocation.NameGet">
            <summary>Sets the stub of IWoeIdLocation.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWoeIdLocation.NameSetString">
            <summary>Sets the stub of IWoeIdLocation.set_Name(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWoeIdLocation.WoeIdGet">
            <summary>Sets the stub of IWoeIdLocation.get_WoeId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWoeIdLocation.WoeIdSetInt64">
            <summary>Sets the stub of IWoeIdLocation.set_WoeId(Int64 value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWoeIdLocation.tc::Tweetinvi#Core#Interfaces#Models#IWoeIdLocation#Name">
            <summary>Sets the stub of IWoeIdLocation.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubIWoeIdLocation.tc::Tweetinvi#Core#Interfaces#Models#IWoeIdLocation#WoeId">
            <summary>Sets the stub of IWoeIdLocation.get_WoeId()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubTokenRateLimit">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.TokenRateLimit</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubTokenRateLimit.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubTokenRateLimit.InitializeStub">
            <summary>Initializes a new instance of type StubTokenRateLimit</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubTokenRateLimit.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubTokenRateLimit.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubTokenRateLimit.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Fakes.StubTokenRateLimits">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.TokenRateLimits</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubTokenRateLimits.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Fakes.StubTokenRateLimits.InitializeStub">
            <summary>Initializes a new instance of type StubTokenRateLimits</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubTokenRateLimits.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubTokenRateLimits.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Fakes.StubTokenRateLimits.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Parameters.IHomeTimelineRequestParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.#ctor">
            <summary>Initializes a new instance of type StubIHomeTimelineRequestParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.AttachBackingFieldToExcludeReplies">
            <summary>Attaches delegates to emulate StubIHomeTimelineRequestParameters.ExcludeReplies as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.AttachBackingFieldToIncludeContributorDetails">
            <summary>Attaches delegates to emulate StubIHomeTimelineRequestParameters.IncludeContributorDetails as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.AttachBackingFieldToIncludeEntities">
            <summary>Attaches delegates to emulate StubIHomeTimelineRequestParameters.IncludeEntities as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.AttachBackingFieldToMaxId">
            <summary>Attaches delegates to emulate StubIHomeTimelineRequestParameters.MaxId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.AttachBackingFieldToMaximumNumberOfTweetsToRetrieve">
            <summary>Attaches delegates to emulate StubIHomeTimelineRequestParameters.MaximumNumberOfTweetsToRetrieve as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.AttachBackingFieldToSinceId">
            <summary>Attaches delegates to emulate StubIHomeTimelineRequestParameters.SinceId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.AttachBackingFieldToTrimUser">
            <summary>Attaches delegates to emulate StubIHomeTimelineRequestParameters.TrimUser as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.ExcludeRepliesGet">
            <summary>Sets the stub of IHomeTimelineRequestParameters.get_ExcludeReplies()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.ExcludeRepliesSetBoolean">
            <summary>Sets the stub of IHomeTimelineRequestParameters.set_ExcludeReplies(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.IncludeContributorDetailsGet">
            <summary>Sets the stub of IHomeTimelineRequestParameters.get_IncludeContributorDetails()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.IncludeContributorDetailsSetBoolean">
            <summary>Sets the stub of IHomeTimelineRequestParameters.set_IncludeContributorDetails(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.IncludeEntitiesGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_IncludeEntities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.IncludeEntitiesSetBoolean">
            <summary>Sets the stub of ITimelineRequestParameters.set_IncludeEntities(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.MaxIdGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaxId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.MaxIdSetInt64">
            <summary>Sets the stub of ITimelineRequestParameters.set_MaxId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.MaximumNumberOfTweetsToRetrieveGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaximumNumberOfTweetsToRetrieve()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.MaximumNumberOfTweetsToRetrieveSetInt32">
            <summary>Sets the stub of ITimelineRequestParameters.set_MaximumNumberOfTweetsToRetrieve(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.SinceIdGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_SinceId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.SinceIdSetInt64">
            <summary>Sets the stub of ITimelineRequestParameters.set_SinceId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.TrimUserGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_TrimUser()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.TrimUserSetBoolean">
            <summary>Sets the stub of ITimelineRequestParameters.set_TrimUser(Boolean value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#IHomeTimelineRequestParameters#ExcludeReplies">
            <summary>Sets the stub of IHomeTimelineRequestParameters.get_ExcludeReplies()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#IHomeTimelineRequestParameters#IncludeContributorDetails">
            <summary>Sets the stub of IHomeTimelineRequestParameters.get_IncludeContributorDetails()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#IncludeEntities">
            <summary>Sets the stub of ITimelineRequestParameters.get_IncludeEntities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#MaxId">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaxId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#MaximumNumberOfTweetsToRetrieve">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaximumNumberOfTweetsToRetrieve()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#SinceId">
            <summary>Sets the stub of ITimelineRequestParameters.get_SinceId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIHomeTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#TrimUser">
            <summary>Sets the stub of ITimelineRequestParameters.get_TrimUser()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Parameters.IMentionsTimelineRequestParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.#ctor">
            <summary>Initializes a new instance of type StubIMentionsTimelineRequestParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.AttachBackingFieldToIncludeContributorDetails">
            <summary>Attaches delegates to emulate StubIMentionsTimelineRequestParameters.IncludeContributorDetails as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.AttachBackingFieldToIncludeEntities">
            <summary>Attaches delegates to emulate StubIMentionsTimelineRequestParameters.IncludeEntities as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.AttachBackingFieldToMaxId">
            <summary>Attaches delegates to emulate StubIMentionsTimelineRequestParameters.MaxId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.AttachBackingFieldToMaximumNumberOfTweetsToRetrieve">
            <summary>Attaches delegates to emulate StubIMentionsTimelineRequestParameters.MaximumNumberOfTweetsToRetrieve as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.AttachBackingFieldToSinceId">
            <summary>Attaches delegates to emulate StubIMentionsTimelineRequestParameters.SinceId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.AttachBackingFieldToTrimUser">
            <summary>Attaches delegates to emulate StubIMentionsTimelineRequestParameters.TrimUser as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.IncludeContributorDetailsGet">
            <summary>Sets the stub of IMentionsTimelineRequestParameters.get_IncludeContributorDetails()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.IncludeContributorDetailsSetBoolean">
            <summary>Sets the stub of IMentionsTimelineRequestParameters.set_IncludeContributorDetails(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.IncludeEntitiesGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_IncludeEntities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.IncludeEntitiesSetBoolean">
            <summary>Sets the stub of ITimelineRequestParameters.set_IncludeEntities(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.MaxIdGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaxId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.MaxIdSetInt64">
            <summary>Sets the stub of ITimelineRequestParameters.set_MaxId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.MaximumNumberOfTweetsToRetrieveGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaximumNumberOfTweetsToRetrieve()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.MaximumNumberOfTweetsToRetrieveSetInt32">
            <summary>Sets the stub of ITimelineRequestParameters.set_MaximumNumberOfTweetsToRetrieve(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.SinceIdGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_SinceId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.SinceIdSetInt64">
            <summary>Sets the stub of ITimelineRequestParameters.set_SinceId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.TrimUserGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_TrimUser()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.TrimUserSetBoolean">
            <summary>Sets the stub of ITimelineRequestParameters.set_TrimUser(Boolean value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#IMentionsTimelineRequestParameters#IncludeContributorDetails">
            <summary>Sets the stub of IMentionsTimelineRequestParameters.get_IncludeContributorDetails()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#IncludeEntities">
            <summary>Sets the stub of ITimelineRequestParameters.get_IncludeEntities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#MaxId">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaxId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#MaximumNumberOfTweetsToRetrieve">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaximumNumberOfTweetsToRetrieve()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#SinceId">
            <summary>Sets the stub of ITimelineRequestParameters.get_SinceId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIMentionsTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#TrimUser">
            <summary>Sets the stub of ITimelineRequestParameters.get_TrimUser()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Parameters.IRetweetsOfMeTimelineRequestParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.#ctor">
            <summary>Initializes a new instance of type StubIRetweetsOfMeTimelineRequestParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.AttachBackingFieldToIncludeEntities">
            <summary>Attaches delegates to emulate StubIRetweetsOfMeTimelineRequestParameters.IncludeEntities as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.AttachBackingFieldToIncludeUserEntities">
            <summary>Attaches delegates to emulate StubIRetweetsOfMeTimelineRequestParameters.IncludeUserEntities as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.AttachBackingFieldToMaxId">
            <summary>Attaches delegates to emulate StubIRetweetsOfMeTimelineRequestParameters.MaxId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.AttachBackingFieldToMaximumNumberOfTweetsToRetrieve">
            <summary>Attaches delegates to emulate StubIRetweetsOfMeTimelineRequestParameters.MaximumNumberOfTweetsToRetrieve as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.AttachBackingFieldToSinceId">
            <summary>Attaches delegates to emulate StubIRetweetsOfMeTimelineRequestParameters.SinceId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.AttachBackingFieldToTrimUser">
            <summary>Attaches delegates to emulate StubIRetweetsOfMeTimelineRequestParameters.TrimUser as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.IncludeEntitiesGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_IncludeEntities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.IncludeEntitiesSetBoolean">
            <summary>Sets the stub of ITimelineRequestParameters.set_IncludeEntities(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.IncludeUserEntitiesGet">
            <summary>Sets the stub of IRetweetsOfMeTimelineRequestParameters.get_IncludeUserEntities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.IncludeUserEntitiesSetBoolean">
            <summary>Sets the stub of IRetweetsOfMeTimelineRequestParameters.set_IncludeUserEntities(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.MaxIdGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaxId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.MaxIdSetInt64">
            <summary>Sets the stub of ITimelineRequestParameters.set_MaxId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.MaximumNumberOfTweetsToRetrieveGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaximumNumberOfTweetsToRetrieve()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.MaximumNumberOfTweetsToRetrieveSetInt32">
            <summary>Sets the stub of ITimelineRequestParameters.set_MaximumNumberOfTweetsToRetrieve(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.SinceIdGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_SinceId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.SinceIdSetInt64">
            <summary>Sets the stub of ITimelineRequestParameters.set_SinceId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.TrimUserGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_TrimUser()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.TrimUserSetBoolean">
            <summary>Sets the stub of ITimelineRequestParameters.set_TrimUser(Boolean value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#IncludeEntities">
            <summary>Sets the stub of ITimelineRequestParameters.get_IncludeEntities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#IRetweetsOfMeTimelineRequestParameters#IncludeUserEntities">
            <summary>Sets the stub of IRetweetsOfMeTimelineRequestParameters.get_IncludeUserEntities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#MaxId">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaxId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#MaximumNumberOfTweetsToRetrieve">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaximumNumberOfTweetsToRetrieve()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#SinceId">
            <summary>Sets the stub of ITimelineRequestParameters.get_SinceId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIRetweetsOfMeTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#TrimUser">
            <summary>Sets the stub of ITimelineRequestParameters.get_TrimUser()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Parameters.ITimelineRequestParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.#ctor">
            <summary>Initializes a new instance of type StubITimelineRequestParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.AttachBackingFieldToIncludeEntities">
            <summary>Attaches delegates to emulate StubITimelineRequestParameters.IncludeEntities as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.AttachBackingFieldToMaxId">
            <summary>Attaches delegates to emulate StubITimelineRequestParameters.MaxId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.AttachBackingFieldToMaximumNumberOfTweetsToRetrieve">
            <summary>Attaches delegates to emulate StubITimelineRequestParameters.MaximumNumberOfTweetsToRetrieve as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.AttachBackingFieldToSinceId">
            <summary>Attaches delegates to emulate StubITimelineRequestParameters.SinceId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.AttachBackingFieldToTrimUser">
            <summary>Attaches delegates to emulate StubITimelineRequestParameters.TrimUser as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.IncludeEntitiesGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_IncludeEntities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.IncludeEntitiesSetBoolean">
            <summary>Sets the stub of ITimelineRequestParameters.set_IncludeEntities(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.MaxIdGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaxId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.MaxIdSetInt64">
            <summary>Sets the stub of ITimelineRequestParameters.set_MaxId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.MaximumNumberOfTweetsToRetrieveGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaximumNumberOfTweetsToRetrieve()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.MaximumNumberOfTweetsToRetrieveSetInt32">
            <summary>Sets the stub of ITimelineRequestParameters.set_MaximumNumberOfTweetsToRetrieve(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.SinceIdGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_SinceId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.SinceIdSetInt64">
            <summary>Sets the stub of ITimelineRequestParameters.set_SinceId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.TrimUserGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_TrimUser()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.TrimUserSetBoolean">
            <summary>Sets the stub of ITimelineRequestParameters.set_TrimUser(Boolean value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#IncludeEntities">
            <summary>Sets the stub of ITimelineRequestParameters.get_IncludeEntities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#MaxId">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaxId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#MaximumNumberOfTweetsToRetrieve">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaximumNumberOfTweetsToRetrieve()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#SinceId">
            <summary>Sets the stub of ITimelineRequestParameters.get_SinceId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#TrimUser">
            <summary>Sets the stub of ITimelineRequestParameters.get_TrimUser()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Parameters.ITweetSearchParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.#ctor">
            <summary>Initializes a new instance of type StubITweetSearchParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.AttachBackingFieldToGeoCode">
            <summary>Attaches delegates to emulate StubITweetSearchParameters.GeoCode as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.AttachBackingFieldToLang">
            <summary>Attaches delegates to emulate StubITweetSearchParameters.Lang as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.AttachBackingFieldToLocale">
            <summary>Attaches delegates to emulate StubITweetSearchParameters.Locale as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.AttachBackingFieldToMaxId">
            <summary>Attaches delegates to emulate StubITweetSearchParameters.MaxId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.AttachBackingFieldToMaximumNumberOfResults">
            <summary>Attaches delegates to emulate StubITweetSearchParameters.MaximumNumberOfResults as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.AttachBackingFieldToSearchQuery">
            <summary>Attaches delegates to emulate StubITweetSearchParameters.SearchQuery as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.AttachBackingFieldToSearchType">
            <summary>Attaches delegates to emulate StubITweetSearchParameters.SearchType as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.AttachBackingFieldToSince">
            <summary>Attaches delegates to emulate StubITweetSearchParameters.Since as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.AttachBackingFieldToSinceId">
            <summary>Attaches delegates to emulate StubITweetSearchParameters.SinceId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.AttachBackingFieldToTweetSearchFilter">
            <summary>Attaches delegates to emulate StubITweetSearchParameters.TweetSearchFilter as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.AttachBackingFieldToUntil">
            <summary>Attaches delegates to emulate StubITweetSearchParameters.Until as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.ClearGeoCode">
            <summary>Sets the stub of ITweetSearchParameters.ClearGeoCode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.GeoCodeGet">
            <summary>Sets the stub of ITweetSearchParameters.get_GeoCode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.GeoCodeSetIGeoCode">
            <summary>Sets the stub of ITweetSearchParameters.set_GeoCode(IGeoCode value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.LangGet">
            <summary>Sets the stub of ITweetSearchParameters.get_Lang()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.LangSetLanguage">
            <summary>Sets the stub of ITweetSearchParameters.set_Lang(Language value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.LocaleGet">
            <summary>Sets the stub of ITweetSearchParameters.get_Locale()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.LocaleSetString">
            <summary>Sets the stub of ITweetSearchParameters.set_Locale(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.MaxIdGet">
            <summary>Sets the stub of ITweetSearchParameters.get_MaxId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.MaxIdSetInt64">
            <summary>Sets the stub of ITweetSearchParameters.set_MaxId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.MaximumNumberOfResultsGet">
            <summary>Sets the stub of ITweetSearchParameters.get_MaximumNumberOfResults()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.MaximumNumberOfResultsSetInt32">
            <summary>Sets the stub of ITweetSearchParameters.set_MaximumNumberOfResults(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.SearchQueryGet">
            <summary>Sets the stub of ITweetSearchParameters.get_SearchQuery()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.SearchQuerySetString">
            <summary>Sets the stub of ITweetSearchParameters.set_SearchQuery(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.SearchTypeGet">
            <summary>Sets the stub of ITweetSearchParameters.get_SearchType()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.SearchTypeSetSearchResultType">
            <summary>Sets the stub of ITweetSearchParameters.set_SearchType(SearchResultType value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.SetGeoCodeDoubleDoubleInt32DistanceMeasure">
            <summary>Sets the stub of ITweetSearchParameters.SetGeoCode(Double longitude, Double latitude, Int32 radius, DistanceMeasure measure)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.SetGeoCodeICoordinatesInt32DistanceMeasure">
            <summary>Sets the stub of ITweetSearchParameters.SetGeoCode(ICoordinates coordinates, Int32 radius, DistanceMeasure measure)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.SinceGet">
            <summary>Sets the stub of ITweetSearchParameters.get_Since()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.SinceIdGet">
            <summary>Sets the stub of ITweetSearchParameters.get_SinceId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.SinceIdSetInt64">
            <summary>Sets the stub of ITweetSearchParameters.set_SinceId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.SinceSetDateTime">
            <summary>Sets the stub of ITweetSearchParameters.set_Since(DateTime value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.TweetSearchFilterGet">
            <summary>Sets the stub of ITweetSearchParameters.get_TweetSearchFilter()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.TweetSearchFilterSetTweetSearchFilter">
            <summary>Sets the stub of ITweetSearchParameters.set_TweetSearchFilter(TweetSearchFilter value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITweetSearchParameters#ClearGeoCode">
            <summary>Sets the stub of ITweetSearchParameters.ClearGeoCode()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITweetSearchParameters#SetGeoCode(Tweetinvi.Core.Interfaces.Models.ICoordinates,System.Int32,Tweetinvi.Core.Enum.DistanceMeasure)">
            <summary>Sets the stub of ITweetSearchParameters.SetGeoCode(ICoordinates coordinates, Int32 radius, DistanceMeasure measure)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITweetSearchParameters#SetGeoCode(System.Double,System.Double,System.Int32,Tweetinvi.Core.Enum.DistanceMeasure)">
            <summary>Sets the stub of ITweetSearchParameters.SetGeoCode(Double longitude, Double latitude, Int32 radius, DistanceMeasure measure)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.UntilGet">
            <summary>Sets the stub of ITweetSearchParameters.get_Until()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.UntilSetDateTime">
            <summary>Sets the stub of ITweetSearchParameters.set_Until(DateTime value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITweetSearchParameters#GeoCode">
            <summary>Sets the stub of ITweetSearchParameters.get_GeoCode()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITweetSearchParameters#Lang">
            <summary>Sets the stub of ITweetSearchParameters.get_Lang()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITweetSearchParameters#Locale">
            <summary>Sets the stub of ITweetSearchParameters.get_Locale()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITweetSearchParameters#MaxId">
            <summary>Sets the stub of ITweetSearchParameters.get_MaxId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITweetSearchParameters#MaximumNumberOfResults">
            <summary>Sets the stub of ITweetSearchParameters.get_MaximumNumberOfResults()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITweetSearchParameters#SearchQuery">
            <summary>Sets the stub of ITweetSearchParameters.get_SearchQuery()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITweetSearchParameters#SearchType">
            <summary>Sets the stub of ITweetSearchParameters.get_SearchType()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITweetSearchParameters#Since">
            <summary>Sets the stub of ITweetSearchParameters.get_Since()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITweetSearchParameters#SinceId">
            <summary>Sets the stub of ITweetSearchParameters.get_SinceId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITweetSearchParameters#TweetSearchFilter">
            <summary>Sets the stub of ITweetSearchParameters.get_TweetSearchFilter()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubITweetSearchParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITweetSearchParameters#Until">
            <summary>Sets the stub of ITweetSearchParameters.get_Until()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Models.Parameters.IUserTimelineRequestParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.#ctor">
            <summary>Initializes a new instance of type StubIUserTimelineRequestParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.AttachBackingFieldToExcludeReplies">
            <summary>Attaches delegates to emulate StubIUserTimelineRequestParameters.ExcludeReplies as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.AttachBackingFieldToIncludeContributorDetails">
            <summary>Attaches delegates to emulate StubIUserTimelineRequestParameters.IncludeContributorDetails as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.AttachBackingFieldToIncludeEntities">
            <summary>Attaches delegates to emulate StubIUserTimelineRequestParameters.IncludeEntities as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.AttachBackingFieldToIncludeRTS">
            <summary>Attaches delegates to emulate StubIUserTimelineRequestParameters.IncludeRTS as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.AttachBackingFieldToMaxId">
            <summary>Attaches delegates to emulate StubIUserTimelineRequestParameters.MaxId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.AttachBackingFieldToMaximumNumberOfTweetsToRetrieve">
            <summary>Attaches delegates to emulate StubIUserTimelineRequestParameters.MaximumNumberOfTweetsToRetrieve as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.AttachBackingFieldToSinceId">
            <summary>Attaches delegates to emulate StubIUserTimelineRequestParameters.SinceId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.AttachBackingFieldToTrimUser">
            <summary>Attaches delegates to emulate StubIUserTimelineRequestParameters.TrimUser as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.AttachBackingFieldToUserIdentifier">
            <summary>Attaches delegates to emulate StubIUserTimelineRequestParameters.UserIdentifier as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.ExcludeRepliesGet">
            <summary>Sets the stub of IUserTimelineRequestParameters.get_ExcludeReplies()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.ExcludeRepliesSetBoolean">
            <summary>Sets the stub of IUserTimelineRequestParameters.set_ExcludeReplies(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.IncludeContributorDetailsGet">
            <summary>Sets the stub of IUserTimelineRequestParameters.get_IncludeContributorDetails()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.IncludeContributorDetailsSetBoolean">
            <summary>Sets the stub of IUserTimelineRequestParameters.set_IncludeContributorDetails(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.IncludeEntitiesGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_IncludeEntities()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.IncludeEntitiesSetBoolean">
            <summary>Sets the stub of ITimelineRequestParameters.set_IncludeEntities(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.IncludeRTSGet">
            <summary>Sets the stub of IUserTimelineRequestParameters.get_IncludeRTS()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.IncludeRTSSetBoolean">
            <summary>Sets the stub of IUserTimelineRequestParameters.set_IncludeRTS(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.MaxIdGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaxId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.MaxIdSetInt64">
            <summary>Sets the stub of ITimelineRequestParameters.set_MaxId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.MaximumNumberOfTweetsToRetrieveGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaximumNumberOfTweetsToRetrieve()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.MaximumNumberOfTweetsToRetrieveSetInt32">
            <summary>Sets the stub of ITimelineRequestParameters.set_MaximumNumberOfTweetsToRetrieve(Int32 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.SinceIdGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_SinceId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.SinceIdSetInt64">
            <summary>Sets the stub of ITimelineRequestParameters.set_SinceId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.TrimUserGet">
            <summary>Sets the stub of ITimelineRequestParameters.get_TrimUser()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.TrimUserSetBoolean">
            <summary>Sets the stub of ITimelineRequestParameters.set_TrimUser(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.UserIdentifierGet">
            <summary>Sets the stub of IUserTimelineRequestParameters.get_UserIdentifier()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.UserIdentifierSetIUserIdentifier">
            <summary>Sets the stub of IUserTimelineRequestParameters.set_UserIdentifier(IUserIdentifier value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#IUserTimelineRequestParameters#ExcludeReplies">
            <summary>Sets the stub of IUserTimelineRequestParameters.get_ExcludeReplies()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#IUserTimelineRequestParameters#IncludeContributorDetails">
            <summary>Sets the stub of IUserTimelineRequestParameters.get_IncludeContributorDetails()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#IncludeEntities">
            <summary>Sets the stub of ITimelineRequestParameters.get_IncludeEntities()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#IUserTimelineRequestParameters#IncludeRTS">
            <summary>Sets the stub of IUserTimelineRequestParameters.get_IncludeRTS()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#MaxId">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaxId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#MaximumNumberOfTweetsToRetrieve">
            <summary>Sets the stub of ITimelineRequestParameters.get_MaximumNumberOfTweetsToRetrieve()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#SinceId">
            <summary>Sets the stub of ITimelineRequestParameters.get_SinceId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#ITimelineRequestParameters#TrimUser">
            <summary>Sets the stub of ITimelineRequestParameters.get_TrimUser()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Models.Parameters.Fakes.StubIUserTimelineRequestParameters.tc::Tweetinvi#Core#Interfaces#Models#Parameters#IUserTimelineRequestParameters#UserIdentifier">
            <summary>Sets the stub of IUserTimelineRequestParameters.get_UserIdentifier()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListCreateParameters">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Parameters.IListCreateParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListCreateParameters.#ctor">
            <summary>Initializes a new instance of type StubIListCreateParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListCreateParameters.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubIListCreateParameters.Description as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListCreateParameters.AttachBackingFieldToMode">
            <summary>Attaches delegates to emulate StubIListCreateParameters.Mode as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListCreateParameters.DescriptionGet">
            <summary>Sets the stub of IListCreateParameters.get_Description()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListCreateParameters.DescriptionSetString">
            <summary>Sets the stub of IListCreateParameters.set_Description(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListCreateParameters.ModeGet">
            <summary>Sets the stub of IListCreateParameters.get_Mode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListCreateParameters.ModeSetString">
            <summary>Sets the stub of IListCreateParameters.set_Mode(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListCreateParameters.tc::Tweetinvi#Core#Interfaces#Parameters#IListCreateParameters#Description">
            <summary>Sets the stub of IListCreateParameters.get_Description()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListCreateParameters.tc::Tweetinvi#Core#Interfaces#Parameters#IListCreateParameters#Mode">
            <summary>Sets the stub of IListCreateParameters.get_Mode()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListDestroyParameters">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Parameters.IListDestroyParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListDestroyParameters.#ctor">
            <summary>Initializes a new instance of type StubIListDestroyParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListDestroyParameters.AttachBackingFieldToOwnderId">
            <summary>Attaches delegates to emulate StubIListDestroyParameters.OwnderId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListDestroyParameters.AttachBackingFieldToOwnderScreenName">
            <summary>Attaches delegates to emulate StubIListDestroyParameters.OwnderScreenName as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListDestroyParameters.OwnderIdGet">
            <summary>Sets the stub of IListDestroyParameters.get_OwnderId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListDestroyParameters.OwnderIdSetInt64">
            <summary>Sets the stub of IListDestroyParameters.set_OwnderId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListDestroyParameters.OwnderScreenNameGet">
            <summary>Sets the stub of IListDestroyParameters.get_OwnderScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListDestroyParameters.OwnderScreenNameSetString">
            <summary>Sets the stub of IListDestroyParameters.set_OwnderScreenName(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListDestroyParameters.tc::Tweetinvi#Core#Interfaces#Parameters#IListDestroyParameters#OwnderId">
            <summary>Sets the stub of IListDestroyParameters.get_OwnderId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListDestroyParameters.tc::Tweetinvi#Core#Interfaces#Parameters#IListDestroyParameters#OwnderScreenName">
            <summary>Sets the stub of IListDestroyParameters.get_OwnderScreenName()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Parameters.IListIdentifier</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.#ctor">
            <summary>Initializes a new instance of type StubIListIdentifier</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.AttachBackingFieldToListId">
            <summary>Attaches delegates to emulate StubIListIdentifier.ListId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.AttachBackingFieldToOwnerId">
            <summary>Attaches delegates to emulate StubIListIdentifier.OwnerId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.AttachBackingFieldToOwnerScreenName">
            <summary>Attaches delegates to emulate StubIListIdentifier.OwnerScreenName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.AttachBackingFieldToSlug">
            <summary>Attaches delegates to emulate StubIListIdentifier.Slug as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.ListIdGet">
            <summary>Sets the stub of IListIdentifier.get_ListId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.ListIdSetInt64">
            <summary>Sets the stub of IListIdentifier.set_ListId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.OwnerIdGet">
            <summary>Sets the stub of IListIdentifier.get_OwnerId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.OwnerIdSetInt64">
            <summary>Sets the stub of IListIdentifier.set_OwnerId(Int64 value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.OwnerScreenNameGet">
            <summary>Sets the stub of IListIdentifier.get_OwnerScreenName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.OwnerScreenNameSetString">
            <summary>Sets the stub of IListIdentifier.set_OwnerScreenName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.SlugGet">
            <summary>Sets the stub of IListIdentifier.get_Slug()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.SlugSetString">
            <summary>Sets the stub of IListIdentifier.set_Slug(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.tc::Tweetinvi#Core#Interfaces#Parameters#IListIdentifier#ListId">
            <summary>Sets the stub of IListIdentifier.get_ListId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.tc::Tweetinvi#Core#Interfaces#Parameters#IListIdentifier#OwnerId">
            <summary>Sets the stub of IListIdentifier.get_OwnerId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.tc::Tweetinvi#Core#Interfaces#Parameters#IListIdentifier#OwnerScreenName">
            <summary>Sets the stub of IListIdentifier.get_OwnerScreenName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifier.tc::Tweetinvi#Core#Interfaces#Parameters#IListIdentifier#Slug">
            <summary>Sets the stub of IListIdentifier.get_Slug()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifierFactory">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Parameters.IListIdentifierFactory</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifierFactory.#ctor">
            <summary>Initializes a new instance of type StubIListIdentifierFactory</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifierFactory.CreateITweetListDTO">
            <summary>Sets the stub of IListIdentifierFactory.Create(ITweetListDTO tweetListDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifierFactory.CreateInt64">
            <summary>Sets the stub of IListIdentifierFactory.Create(Int64 listId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifierFactory.CreateStringIUserIdentifier">
            <summary>Sets the stub of IListIdentifierFactory.Create(String slug, IUserIdentifier userDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifierFactory.CreateStringInt64">
            <summary>Sets the stub of IListIdentifierFactory.Create(String slug, Int64 ownerId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifierFactory.CreateStringString">
            <summary>Sets the stub of IListIdentifierFactory.Create(String slug, String ownerScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifierFactory.tc::Tweetinvi#Core#Interfaces#Parameters#IListIdentifierFactory#Create(System.Int64)">
            <summary>Sets the stub of IListIdentifierFactory.Create(Int64 listId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifierFactory.tc::Tweetinvi#Core#Interfaces#Parameters#IListIdentifierFactory#Create(Tweetinvi.Core.Interfaces.DTO.ITweetListDTO)">
            <summary>Sets the stub of IListIdentifierFactory.Create(ITweetListDTO tweetListDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifierFactory.tc::Tweetinvi#Core#Interfaces#Parameters#IListIdentifierFactory#Create(System.String,Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of IListIdentifierFactory.Create(String slug, IUserIdentifier userDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifierFactory.tc::Tweetinvi#Core#Interfaces#Parameters#IListIdentifierFactory#Create(System.String,System.String)">
            <summary>Sets the stub of IListIdentifierFactory.Create(String slug, String ownerScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListIdentifierFactory.tc::Tweetinvi#Core#Interfaces#Parameters#IListIdentifierFactory#Create(System.String,System.Int64)">
            <summary>Sets the stub of IListIdentifierFactory.Create(String slug, Int64 ownerId)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListUpdateParameters">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Parameters.IListUpdateParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListUpdateParameters.#ctor">
            <summary>Initializes a new instance of type StubIListUpdateParameters</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListUpdateParameters.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubIListUpdateParameters.Description as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListUpdateParameters.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIListUpdateParameters.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListUpdateParameters.AttachBackingFieldToPrivacyMode">
            <summary>Attaches delegates to emulate StubIListUpdateParameters.PrivacyMode as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListUpdateParameters.DescriptionGet">
            <summary>Sets the stub of IListUpdateParameters.get_Description()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListUpdateParameters.DescriptionSetString">
            <summary>Sets the stub of IListUpdateParameters.set_Description(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListUpdateParameters.NameGet">
            <summary>Sets the stub of IListUpdateParameters.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListUpdateParameters.NameSetString">
            <summary>Sets the stub of IListUpdateParameters.set_Name(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListUpdateParameters.PrivacyModeGet">
            <summary>Sets the stub of IListUpdateParameters.get_PrivacyMode()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListUpdateParameters.PrivacyModeSetPrivacyMode">
            <summary>Sets the stub of IListUpdateParameters.set_PrivacyMode(PrivacyMode value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListUpdateParameters.tc::Tweetinvi#Core#Interfaces#Parameters#IListUpdateParameters#Description">
            <summary>Sets the stub of IListUpdateParameters.get_Description()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListUpdateParameters.tc::Tweetinvi#Core#Interfaces#Parameters#IListUpdateParameters#Name">
            <summary>Sets the stub of IListUpdateParameters.get_Name()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Parameters.Fakes.StubIListUpdateParameters.tc::Tweetinvi#Core#Interfaces#Parameters#IListUpdateParameters#PrivacyMode">
            <summary>Sets the stub of IListUpdateParameters.get_PrivacyMode()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator">
            <summary>Stub type of Tweetinvi.Core.Interfaces.QueryGenerators.IFriendshipQueryGenerator</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.#ctor">
            <summary>Initializes a new instance of type StubIFriendshipQueryGenerator</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.GetCreateFriendshipWithQueryIUserIdentifier">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetCreateFriendshipWithQuery(IUserIdentifier userDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.GetCreateFriendshipWithQueryInt64">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetCreateFriendshipWithQuery(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.GetCreateFriendshipWithQueryString">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetCreateFriendshipWithQuery(String screenName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.GetDestroyFriendshipWithQueryIUserIdentifier">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetDestroyFriendshipWithQuery(IUserIdentifier userDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.GetDestroyFriendshipWithQueryInt64">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetDestroyFriendshipWithQuery(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.GetDestroyFriendshipWithQueryString">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetDestroyFriendshipWithQuery(String screenName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.GetUpdateRelationshipAuthorizationsWithQueryIUserIdentifierIFriendshipAuthorizations">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetUpdateRelationshipAuthorizationsWithQuery(IUserIdentifier userDTO, IFriendshipAuthorizations friendshipAuthorizations)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.GetUpdateRelationshipAuthorizationsWithQueryInt64IFriendshipAuthorizations">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetUpdateRelationshipAuthorizationsWithQuery(Int64 userId, IFriendshipAuthorizations friendshipAuthorizations)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.GetUpdateRelationshipAuthorizationsWithQueryStringIFriendshipAuthorizations">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetUpdateRelationshipAuthorizationsWithQuery(String screenName, IFriendshipAuthorizations friendshipAuthorizations)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.GetUserIdsRequestingFriendshipQuery">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetUserIdsRequestingFriendshipQuery()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.GetUserIdsYouRequestedToFollowQuery">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetUserIdsYouRequestedToFollowQuery()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IFriendshipQueryGenerator#GetCreateFriendshipWithQuery(System.Int64)">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetCreateFriendshipWithQuery(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IFriendshipQueryGenerator#GetCreateFriendshipWithQuery(Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetCreateFriendshipWithQuery(IUserIdentifier userDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IFriendshipQueryGenerator#GetCreateFriendshipWithQuery(System.String)">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetCreateFriendshipWithQuery(String screenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IFriendshipQueryGenerator#GetDestroyFriendshipWithQuery(Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetDestroyFriendshipWithQuery(IUserIdentifier userDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IFriendshipQueryGenerator#GetDestroyFriendshipWithQuery(System.String)">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetDestroyFriendshipWithQuery(String screenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IFriendshipQueryGenerator#GetDestroyFriendshipWithQuery(System.Int64)">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetDestroyFriendshipWithQuery(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IFriendshipQueryGenerator#GetUpdateRelationshipAuthorizationsWithQuery(Tweetinvi.Core.Interfaces.Models.IUserIdentifier,Tweetinvi.Core.Interfaces.Models.IFriendshipAuthorizations)">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetUpdateRelationshipAuthorizationsWithQuery(IUserIdentifier userDTO, IFriendshipAuthorizations friendshipAuthorizations)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IFriendshipQueryGenerator#GetUpdateRelationshipAuthorizationsWithQuery(System.Int64,Tweetinvi.Core.Interfaces.Models.IFriendshipAuthorizations)">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetUpdateRelationshipAuthorizationsWithQuery(Int64 userId, IFriendshipAuthorizations friendshipAuthorizations)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IFriendshipQueryGenerator#GetUpdateRelationshipAuthorizationsWithQuery(System.String,Tweetinvi.Core.Interfaces.Models.IFriendshipAuthorizations)">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetUpdateRelationshipAuthorizationsWithQuery(String screenName, IFriendshipAuthorizations friendshipAuthorizations)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IFriendshipQueryGenerator#GetUserIdsRequestingFriendshipQuery">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetUserIdsRequestingFriendshipQuery()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIFriendshipQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IFriendshipQueryGenerator#GetUserIdsYouRequestedToFollowQuery">
            <summary>Sets the stub of IFriendshipQueryGenerator.GetUserIdsYouRequestedToFollowQuery()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetListQueryParameterGenerator">
            <summary>Stub type of Tweetinvi.Core.Interfaces.QueryGenerators.ITweetListQueryParameterGenerator</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetListQueryParameterGenerator.#ctor">
            <summary>Initializes a new instance of type StubITweetListQueryParameterGenerator</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetListQueryParameterGenerator.GenerateIdentifierParameterIListIdentifier">
            <summary>Sets the stub of ITweetListQueryParameterGenerator.GenerateIdentifierParameter(IListIdentifier listIdentifier)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetListQueryParameterGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetListQueryParameterGenerator#GenerateIdentifierParameter(Tweetinvi.Core.Interfaces.Parameters.IListIdentifier)">
            <summary>Sets the stub of ITweetListQueryParameterGenerator.GenerateIdentifierParameter(IListIdentifier listIdentifier)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator">
            <summary>Stub type of Tweetinvi.Core.Interfaces.QueryGenerators.ITweetQueryGenerator</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.#ctor">
            <summary>Initializes a new instance of type StubITweetQueryGenerator</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetDestroyTweetQueryITweetDTO">
            <summary>Sets the stub of ITweetQueryGenerator.GetDestroyTweetQuery(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetDestroyTweetQueryInt64">
            <summary>Sets the stub of ITweetQueryGenerator.GetDestroyTweetQuery(Int64 tweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetFavouriteTweetQueryITweetDTO">
            <summary>Sets the stub of ITweetQueryGenerator.GetFavouriteTweetQuery(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetFavouriteTweetQueryInt64">
            <summary>Sets the stub of ITweetQueryGenerator.GetFavouriteTweetQuery(Int64 tweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetGenerateOEmbedTweetQueryITweetDTO">
            <summary>Sets the stub of ITweetQueryGenerator.GetGenerateOEmbedTweetQuery(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetGenerateOEmbedTweetQueryInt64">
            <summary>Sets the stub of ITweetQueryGenerator.GetGenerateOEmbedTweetQuery(Int64 tweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetPublishRetweetQueryITweetDTO">
            <summary>Sets the stub of ITweetQueryGenerator.GetPublishRetweetQuery(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetPublishRetweetQueryInt64">
            <summary>Sets the stub of ITweetQueryGenerator.GetPublishRetweetQuery(Int64 tweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetPublishTweetInReplyToQueryITweetDTOITweetDTO">
            <summary>Sets the stub of ITweetQueryGenerator.GetPublishTweetInReplyToQuery(ITweetDTO tweetToPublish, ITweetDTO tweetToReplyTo)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetPublishTweetInReplyToQueryITweetDTOInt64">
            <summary>Sets the stub of ITweetQueryGenerator.GetPublishTweetInReplyToQuery(ITweetDTO tweet, Int64 tweetIdToReplyTo)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetPublishTweetQueryITweetDTO">
            <summary>Sets the stub of ITweetQueryGenerator.GetPublishTweetQuery(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetRetweetsQueryITweetDTO">
            <summary>Sets the stub of ITweetQueryGenerator.GetRetweetsQuery(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetRetweetsQueryInt64">
            <summary>Sets the stub of ITweetQueryGenerator.GetRetweetsQuery(Int64 tweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetTweetQueryInt64">
            <summary>Sets the stub of ITweetQueryGenerator.GetTweetQuery(Int64 tweetId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetTweetsQueryIEnumerableOfInt64">
            <summary>Sets the stub of ITweetQueryGenerator.GetTweetsQuery(IEnumerable`1&lt;Int64&gt; tweetIds)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetUnFavouriteTweetQueryITweetDTO">
            <summary>Sets the stub of ITweetQueryGenerator.GetUnFavouriteTweetQuery(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.GetUnFavouriteTweetQueryInt64">
            <summary>Sets the stub of ITweetQueryGenerator.GetUnFavouriteTweetQuery(Int64 tweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetDestroyTweetQuery(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetQueryGenerator.GetDestroyTweetQuery(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetDestroyTweetQuery(System.Int64)">
            <summary>Sets the stub of ITweetQueryGenerator.GetDestroyTweetQuery(Int64 tweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetFavouriteTweetQuery(System.Int64)">
            <summary>Sets the stub of ITweetQueryGenerator.GetFavouriteTweetQuery(Int64 tweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetFavouriteTweetQuery(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetQueryGenerator.GetFavouriteTweetQuery(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetGenerateOEmbedTweetQuery(System.Int64)">
            <summary>Sets the stub of ITweetQueryGenerator.GetGenerateOEmbedTweetQuery(Int64 tweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetGenerateOEmbedTweetQuery(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetQueryGenerator.GetGenerateOEmbedTweetQuery(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetPublishRetweetQuery(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetQueryGenerator.GetPublishRetweetQuery(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetPublishRetweetQuery(System.Int64)">
            <summary>Sets the stub of ITweetQueryGenerator.GetPublishRetweetQuery(Int64 tweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetPublishTweetInReplyToQuery(Tweetinvi.Core.Interfaces.DTO.ITweetDTO,System.Int64)">
            <summary>Sets the stub of ITweetQueryGenerator.GetPublishTweetInReplyToQuery(ITweetDTO tweet, Int64 tweetIdToReplyTo)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetPublishTweetInReplyToQuery(Tweetinvi.Core.Interfaces.DTO.ITweetDTO,Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetQueryGenerator.GetPublishTweetInReplyToQuery(ITweetDTO tweetToPublish, ITweetDTO tweetToReplyTo)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetPublishTweetQuery(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetQueryGenerator.GetPublishTweetQuery(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetRetweetsQuery(System.Int64)">
            <summary>Sets the stub of ITweetQueryGenerator.GetRetweetsQuery(Int64 tweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetRetweetsQuery(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetQueryGenerator.GetRetweetsQuery(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetTweetQuery(System.Int64)">
            <summary>Sets the stub of ITweetQueryGenerator.GetTweetQuery(Int64 tweetId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetTweetsQuery(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>Sets the stub of ITweetQueryGenerator.GetTweetsQuery(IEnumerable`1&lt;Int64&gt; tweetIds)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetUnFavouriteTweetQuery(Tweetinvi.Core.Interfaces.DTO.ITweetDTO)">
            <summary>Sets the stub of ITweetQueryGenerator.GetUnFavouriteTweetQuery(ITweetDTO tweetDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubITweetQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#ITweetQueryGenerator#GetUnFavouriteTweetQuery(System.Int64)">
            <summary>Sets the stub of ITweetQueryGenerator.GetUnFavouriteTweetQuery(Int64 tweetId)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator">
            <summary>Stub type of Tweetinvi.Core.Interfaces.QueryGenerators.IUserQueryGenerator</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.#ctor">
            <summary>Initializes a new instance of type StubIUserQueryGenerator</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.DownloadProfileImageInHttpURLIUserDTOImageSize">
            <summary>Sets the stub of IUserQueryGenerator.DownloadProfileImageInHttpURL(IUserDTO userDTO, ImageSize size)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.DownloadProfileImageURLIUserDTOImageSize">
            <summary>Sets the stub of IUserQueryGenerator.DownloadProfileImageURL(IUserDTO userDTO, ImageSize size)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetBlockUserQueryIUserIdentifier">
            <summary>Sets the stub of IUserQueryGenerator.GetBlockUserQuery(IUserIdentifier userDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetBlockUserQueryInt64">
            <summary>Sets the stub of IUserQueryGenerator.GetBlockUserQuery(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetBlockUserQueryString">
            <summary>Sets the stub of IUserQueryGenerator.GetBlockUserQuery(String userScreenName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetBlockedUserIdsQuery">
            <summary>Sets the stub of IUserQueryGenerator.GetBlockedUserIdsQuery()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetBlockedUsersQuery">
            <summary>Sets the stub of IUserQueryGenerator.GetBlockedUsersQuery()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetFavouriteTweetsQueryIUserIdentifierInt32">
            <summary>Sets the stub of IUserQueryGenerator.GetFavouriteTweetsQuery(IUserIdentifier userDTO, Int32 maxFavoritesToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetFavouriteTweetsQueryInt64Int32">
            <summary>Sets the stub of IUserQueryGenerator.GetFavouriteTweetsQuery(Int64 userId, Int32 maxFavoritesToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetFavouriteTweetsQueryStringInt32">
            <summary>Sets the stub of IUserQueryGenerator.GetFavouriteTweetsQuery(String screenName, Int32 maxFavoritesToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetFollowerIdsQueryIUserIdentifierInt32">
            <summary>Sets the stub of IUserQueryGenerator.GetFollowerIdsQuery(IUserIdentifier userDTO, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetFollowerIdsQueryInt64Int32">
            <summary>Sets the stub of IUserQueryGenerator.GetFollowerIdsQuery(Int64 userId, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetFollowerIdsQueryStringInt32">
            <summary>Sets the stub of IUserQueryGenerator.GetFollowerIdsQuery(String screenName, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetFriendIdsQueryIUserIdentifierInt32">
            <summary>Sets the stub of IUserQueryGenerator.GetFriendIdsQuery(IUserIdentifier userDTO, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetFriendIdsQueryInt64Int32">
            <summary>Sets the stub of IUserQueryGenerator.GetFriendIdsQuery(Int64 userId, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetFriendIdsQueryStringInt32">
            <summary>Sets the stub of IUserQueryGenerator.GetFriendIdsQuery(String screenName, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetUnBlockUserQueryIUserIdentifier">
            <summary>Sets the stub of IUserQueryGenerator.GetUnBlockUserQuery(IUserIdentifier userDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetUnBlockUserQueryInt64">
            <summary>Sets the stub of IUserQueryGenerator.GetUnBlockUserQuery(Int64 userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.GetUnBlockUserQueryString">
            <summary>Sets the stub of IUserQueryGenerator.GetUnBlockUserQuery(String userScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#DownloadProfileImageInHttpURL(Tweetinvi.Core.Interfaces.DTO.IUserDTO,Tweetinvi.Core.Enum.ImageSize)">
            <summary>Sets the stub of IUserQueryGenerator.DownloadProfileImageInHttpURL(IUserDTO userDTO, ImageSize size)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#DownloadProfileImageURL(Tweetinvi.Core.Interfaces.DTO.IUserDTO,Tweetinvi.Core.Enum.ImageSize)">
            <summary>Sets the stub of IUserQueryGenerator.DownloadProfileImageURL(IUserDTO userDTO, ImageSize size)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetBlockUserQuery(System.Int64)">
            <summary>Sets the stub of IUserQueryGenerator.GetBlockUserQuery(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetBlockUserQuery(Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of IUserQueryGenerator.GetBlockUserQuery(IUserIdentifier userDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetBlockUserQuery(System.String)">
            <summary>Sets the stub of IUserQueryGenerator.GetBlockUserQuery(String userScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetBlockedUserIdsQuery">
            <summary>Sets the stub of IUserQueryGenerator.GetBlockedUserIdsQuery()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetBlockedUsersQuery">
            <summary>Sets the stub of IUserQueryGenerator.GetBlockedUsersQuery()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetFavouriteTweetsQuery(Tweetinvi.Core.Interfaces.Models.IUserIdentifier,System.Int32)">
            <summary>Sets the stub of IUserQueryGenerator.GetFavouriteTweetsQuery(IUserIdentifier userDTO, Int32 maxFavoritesToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetFavouriteTweetsQuery(System.Int64,System.Int32)">
            <summary>Sets the stub of IUserQueryGenerator.GetFavouriteTweetsQuery(Int64 userId, Int32 maxFavoritesToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetFavouriteTweetsQuery(System.String,System.Int32)">
            <summary>Sets the stub of IUserQueryGenerator.GetFavouriteTweetsQuery(String screenName, Int32 maxFavoritesToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetFollowerIdsQuery(Tweetinvi.Core.Interfaces.Models.IUserIdentifier,System.Int32)">
            <summary>Sets the stub of IUserQueryGenerator.GetFollowerIdsQuery(IUserIdentifier userDTO, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetFollowerIdsQuery(System.Int64,System.Int32)">
            <summary>Sets the stub of IUserQueryGenerator.GetFollowerIdsQuery(Int64 userId, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetFollowerIdsQuery(System.String,System.Int32)">
            <summary>Sets the stub of IUserQueryGenerator.GetFollowerIdsQuery(String screenName, Int32 maxFollowersToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetFriendIdsQuery(System.Int64,System.Int32)">
            <summary>Sets the stub of IUserQueryGenerator.GetFriendIdsQuery(Int64 userId, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetFriendIdsQuery(Tweetinvi.Core.Interfaces.Models.IUserIdentifier,System.Int32)">
            <summary>Sets the stub of IUserQueryGenerator.GetFriendIdsQuery(IUserIdentifier userDTO, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetFriendIdsQuery(System.String,System.Int32)">
            <summary>Sets the stub of IUserQueryGenerator.GetFriendIdsQuery(String screenName, Int32 maxFriendsToRetrieve)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetUnBlockUserQuery(Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of IUserQueryGenerator.GetUnBlockUserQuery(IUserIdentifier userDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetUnBlockUserQuery(System.String)">
            <summary>Sets the stub of IUserQueryGenerator.GetUnBlockUserQuery(String userScreenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryGenerator#GetUnBlockUserQuery(System.Int64)">
            <summary>Sets the stub of IUserQueryGenerator.GetUnBlockUserQuery(Int64 userId)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryParameterGenerator">
            <summary>Stub type of Tweetinvi.Core.Interfaces.QueryGenerators.IUserQueryParameterGenerator</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryParameterGenerator.#ctor">
            <summary>Initializes a new instance of type StubIUserQueryParameterGenerator</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryParameterGenerator.GenerateIdOrScreenNameParameterIUserIdentifierStringString">
            <summary>Sets the stub of IUserQueryParameterGenerator.GenerateIdOrScreenNameParameter(IUserIdentifier userIdentifier, String idParameterName, String screenNameParameterName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryParameterGenerator.GenerateListOfIdsParameterIEnumerableOfInt64">
            <summary>Sets the stub of IUserQueryParameterGenerator.GenerateListOfIdsParameter(IEnumerable`1&lt;Int64&gt; ids)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryParameterGenerator.GenerateListOfScreenNameParameterIEnumerableOfString">
            <summary>Sets the stub of IUserQueryParameterGenerator.GenerateListOfScreenNameParameter(IEnumerable`1&lt;String&gt; userNames)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryParameterGenerator.GenerateListOfUserDTOParameterIEnumerableOfIUserIdentifier">
            <summary>Sets the stub of IUserQueryParameterGenerator.GenerateListOfUserDTOParameter(IEnumerable`1&lt;IUserIdentifier&gt; usersDTO)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryParameterGenerator.GenerateScreenNameParameterStringString">
            <summary>Sets the stub of IUserQueryParameterGenerator.GenerateScreenNameParameter(String screenName, String parameterName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryParameterGenerator.GenerateUserIdParameterInt64String">
            <summary>Sets the stub of IUserQueryParameterGenerator.GenerateUserIdParameter(Int64 userId, String parameterName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryParameterGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryParameterGenerator#GenerateIdOrScreenNameParameter(Tweetinvi.Core.Interfaces.Models.IUserIdentifier,System.String,System.String)">
            <summary>Sets the stub of IUserQueryParameterGenerator.GenerateIdOrScreenNameParameter(IUserIdentifier userIdentifier, String idParameterName, String screenNameParameterName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryParameterGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryParameterGenerator#GenerateListOfIdsParameter(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>Sets the stub of IUserQueryParameterGenerator.GenerateListOfIdsParameter(IEnumerable`1&lt;Int64&gt; ids)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryParameterGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryParameterGenerator#GenerateListOfScreenNameParameter(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Sets the stub of IUserQueryParameterGenerator.GenerateListOfScreenNameParameter(IEnumerable`1&lt;String&gt; userNames)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryParameterGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryParameterGenerator#GenerateListOfUserDTOParameter(System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.Models.IUserIdentifier})">
            <summary>Sets the stub of IUserQueryParameterGenerator.GenerateListOfUserDTOParameter(IEnumerable`1&lt;IUserIdentifier&gt; usersDTO)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryParameterGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryParameterGenerator#GenerateScreenNameParameter(System.String,System.String)">
            <summary>Sets the stub of IUserQueryParameterGenerator.GenerateScreenNameParameter(String screenName, String parameterName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryGenerators.Fakes.StubIUserQueryParameterGenerator.tc::Tweetinvi#Core#Interfaces#QueryGenerators#IUserQueryParameterGenerator#GenerateUserIdParameter(System.Int64,System.String)">
            <summary>Sets the stub of IUserQueryParameterGenerator.GenerateUserIdParameter(Int64 userId, String parameterName)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubITweetListQueryValidator">
            <summary>Stub type of Tweetinvi.Core.Interfaces.QueryValidators.ITweetListQueryValidator</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubITweetListQueryValidator.#ctor">
            <summary>Initializes a new instance of type StubITweetListQueryValidator</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubITweetListQueryValidator.IsDescriptionParameterValidString">
            <summary>Sets the stub of ITweetListQueryValidator.IsDescriptionParameterValid(String description)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubITweetListQueryValidator.IsListIdentifierValidIListIdentifier">
            <summary>Sets the stub of ITweetListQueryValidator.IsListIdentifierValid(IListIdentifier parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubITweetListQueryValidator.IsListUpdateParametersValidIListUpdateParameters">
            <summary>Sets the stub of ITweetListQueryValidator.IsListUpdateParametersValid(IListUpdateParameters parameters)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubITweetListQueryValidator.IsNameParameterValidString">
            <summary>Sets the stub of ITweetListQueryValidator.IsNameParameterValid(String name)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubITweetListQueryValidator.IsOwnerIdValidInt64">
            <summary>Sets the stub of ITweetListQueryValidator.IsOwnerIdValid(Int64 ownerId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubITweetListQueryValidator.IsOwnerScreenNameValidString">
            <summary>Sets the stub of ITweetListQueryValidator.IsOwnerScreenNameValid(String ownerScreeName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubITweetListQueryValidator.tc::Tweetinvi#Core#Interfaces#QueryValidators#ITweetListQueryValidator#IsDescriptionParameterValid(System.String)">
            <summary>Sets the stub of ITweetListQueryValidator.IsDescriptionParameterValid(String description)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubITweetListQueryValidator.tc::Tweetinvi#Core#Interfaces#QueryValidators#ITweetListQueryValidator#IsListIdentifierValid(Tweetinvi.Core.Interfaces.Parameters.IListIdentifier)">
            <summary>Sets the stub of ITweetListQueryValidator.IsListIdentifierValid(IListIdentifier parameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubITweetListQueryValidator.tc::Tweetinvi#Core#Interfaces#QueryValidators#ITweetListQueryValidator#IsListUpdateParametersValid(Tweetinvi.Core.Interfaces.Parameters.IListUpdateParameters)">
            <summary>Sets the stub of ITweetListQueryValidator.IsListUpdateParametersValid(IListUpdateParameters parameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubITweetListQueryValidator.tc::Tweetinvi#Core#Interfaces#QueryValidators#ITweetListQueryValidator#IsNameParameterValid(System.String)">
            <summary>Sets the stub of ITweetListQueryValidator.IsNameParameterValid(String name)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubITweetListQueryValidator.tc::Tweetinvi#Core#Interfaces#QueryValidators#ITweetListQueryValidator#IsOwnerIdValid(System.Int64)">
            <summary>Sets the stub of ITweetListQueryValidator.IsOwnerIdValid(Int64 ownerId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubITweetListQueryValidator.tc::Tweetinvi#Core#Interfaces#QueryValidators#ITweetListQueryValidator#IsOwnerScreenNameValid(System.String)">
            <summary>Sets the stub of ITweetListQueryValidator.IsOwnerScreenNameValid(String ownerScreeName)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubIUserQueryValidator">
            <summary>Stub type of Tweetinvi.Core.Interfaces.QueryValidators.IUserQueryValidator</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubIUserQueryValidator.#ctor">
            <summary>Initializes a new instance of type StubIUserQueryValidator</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubIUserQueryValidator.CanUserBeIdentifiedIUserIdentifier">
            <summary>Sets the stub of IUserQueryValidator.CanUserBeIdentified(IUserIdentifier userIdentifier)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubIUserQueryValidator.IsScreenNameValidString">
            <summary>Sets the stub of IUserQueryValidator.IsScreenNameValid(String screenName)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubIUserQueryValidator.IsUserIdValidInt64">
            <summary>Sets the stub of IUserQueryValidator.IsUserIdValid(Int64 userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubIUserQueryValidator.tc::Tweetinvi#Core#Interfaces#QueryValidators#IUserQueryValidator#CanUserBeIdentified(Tweetinvi.Core.Interfaces.Models.IUserIdentifier)">
            <summary>Sets the stub of IUserQueryValidator.CanUserBeIdentified(IUserIdentifier userIdentifier)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubIUserQueryValidator.tc::Tweetinvi#Core#Interfaces#QueryValidators#IUserQueryValidator#IsScreenNameValid(System.String)">
            <summary>Sets the stub of IUserQueryValidator.IsScreenNameValid(String screenName)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.QueryValidators.Fakes.StubIUserQueryValidator.tc::Tweetinvi#Core#Interfaces#QueryValidators#IUserQueryValidator#IsUserIdValid(System.Int64)">
            <summary>Sets the stub of IUserQueryValidator.IsUserIdValid(Int64 userId)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Streaminvi.IFilteredStream</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.#ctor">
            <summary>Initializes a new instance of type StubIFilteredStream</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.AddFollowIUserActionOfITweet">
            <summary>Sets the stub of IFilteredStream.AddFollow(IUser user, Action`1&lt;ITweet&gt; userPublishedTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.AddFollowNullableOfInt64ActionOfITweet">
            <summary>Sets the stub of IFilteredStream.AddFollow(Nullable`1&lt;Int64&gt; userId, Action`1&lt;ITweet&gt; userPublishedTweet)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.AddLocationICoordinatesICoordinatesActionOfITweet">
            <summary>Sets the stub of IFilteredStream.AddLocation(ICoordinates coordinate1, ICoordinates coordinate2, Action`1&lt;ITweet&gt; locationDetected)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.AddLocationILocationActionOfITweet">
            <summary>Sets the stub of IFilteredStream.AddLocation(ILocation location, Action`1&lt;ITweet&gt; locationDetected)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.AddTrackStringActionOfITweet">
            <summary>Sets the stub of ITrackableStream`1.AddTrack(String track, Action`1&lt;!0&gt; trackReceived)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.ClearFollows">
            <summary>Sets the stub of IFilteredStream.ClearFollows()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.ClearLocations">
            <summary>Sets the stub of IFilteredStream.ClearLocations()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.ClearTracks">
            <summary>Sets the stub of ITrackableStream`1.ClearTracks()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.ContainsFollowIUser">
            <summary>Sets the stub of IFilteredStream.ContainsFollow(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.ContainsFollowNullableOfInt64">
            <summary>Sets the stub of IFilteredStream.ContainsFollow(Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.ContainsLocationICoordinatesICoordinates">
            <summary>Sets the stub of IFilteredStream.ContainsLocation(ICoordinates coordinate1, ICoordinates coordinate2)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.ContainsLocationILocation">
            <summary>Sets the stub of IFilteredStream.ContainsLocation(ILocation location)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.ContainsTrackString">
            <summary>Sets the stub of ITrackableStream`1.ContainsTrack(String track)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.FilterTweetsToBeInLanguage">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(Language language)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.FilterTweetsToBeInString">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(String language)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.FollowingUserIdsGet">
            <summary>Sets the stub of IFilteredStream.get_FollowingUserIds()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.LocationsGet">
            <summary>Sets the stub of IFilteredStream.get_Locations()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.MaxTracksGet">
            <summary>Sets the stub of ITrackableStream`1.get_MaxTracks()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.PauseStream">
            <summary>Sets the stub of ITwitterStream.PauseStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.RemoveFollowIUser">
            <summary>Sets the stub of IFilteredStream.RemoveFollow(IUser user)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.RemoveFollowNullableOfInt64">
            <summary>Sets the stub of IFilteredStream.RemoveFollow(Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.RemoveLocationICoordinatesICoordinates">
            <summary>Sets the stub of IFilteredStream.RemoveLocation(ICoordinates coordinate1, ICoordinates coordinate2)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.RemoveLocationILocation">
            <summary>Sets the stub of IFilteredStream.RemoveLocation(ILocation location)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.RemoveTrackString">
            <summary>Sets the stub of ITrackableStream`1.RemoveTrack(String track)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.ResumeStream">
            <summary>Sets the stub of ITwitterStream.ResumeStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.StartStreamMatchingAllConditions">
            <summary>Sets the stub of IFilteredStream.StartStreamMatchingAllConditions()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.StartStreamMatchingAllConditionsAsync">
            <summary>Sets the stub of IFilteredStream.StartStreamMatchingAllConditionsAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.StartStreamMatchingAnyCondition">
            <summary>Sets the stub of IFilteredStream.StartStreamMatchingAnyCondition()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.StartStreamMatchingAnyConditionAsync">
            <summary>Sets the stub of IFilteredStream.StartStreamMatchingAnyConditionAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.StopStream">
            <summary>Sets the stub of ITwitterStream.StopStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.StreamStateGet">
            <summary>Sets the stub of ITwitterStream.get_StreamState()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.TracksCountGet">
            <summary>Sets the stub of ITrackableStream`1.get_TracksCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.TracksGet">
            <summary>Sets the stub of ITrackableStream`1.get_Tracks()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#AddFollow(Tweetinvi.Core.Interfaces.IUser,System.Action{Tweetinvi.Core.Interfaces.ITweet})">
            <summary>Sets the stub of IFilteredStream.AddFollow(IUser user, Action`1&lt;ITweet&gt; userPublishedTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#AddFollow(System.Nullable{System.Int64},System.Action{Tweetinvi.Core.Interfaces.ITweet})">
            <summary>Sets the stub of IFilteredStream.AddFollow(Nullable`1&lt;Int64&gt; userId, Action`1&lt;ITweet&gt; userPublishedTweet)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#AddLocation(Tweetinvi.Core.Interfaces.Models.ILocation,System.Action{Tweetinvi.Core.Interfaces.ITweet})">
            <summary>Sets the stub of IFilteredStream.AddLocation(ILocation location, Action`1&lt;ITweet&gt; locationDetected)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#AddLocation(Tweetinvi.Core.Interfaces.Models.ICoordinates,Tweetinvi.Core.Interfaces.Models.ICoordinates,System.Action{Tweetinvi.Core.Interfaces.ITweet})">
            <summary>Sets the stub of IFilteredStream.AddLocation(ICoordinates coordinate1, ICoordinates coordinate2, Action`1&lt;ITweet&gt; locationDetected)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#ClearFollows">
            <summary>Sets the stub of IFilteredStream.ClearFollows()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#ClearLocations">
            <summary>Sets the stub of IFilteredStream.ClearLocations()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#ContainsFollow(System.Nullable{System.Int64})">
            <summary>Sets the stub of IFilteredStream.ContainsFollow(Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#ContainsFollow(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IFilteredStream.ContainsFollow(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#ContainsLocation(Tweetinvi.Core.Interfaces.Models.ILocation)">
            <summary>Sets the stub of IFilteredStream.ContainsLocation(ILocation location)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#ContainsLocation(Tweetinvi.Core.Interfaces.Models.ICoordinates,Tweetinvi.Core.Interfaces.Models.ICoordinates)">
            <summary>Sets the stub of IFilteredStream.ContainsLocation(ICoordinates coordinate1, ICoordinates coordinate2)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#RemoveFollow(System.Nullable{System.Int64})">
            <summary>Sets the stub of IFilteredStream.RemoveFollow(Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#RemoveFollow(Tweetinvi.Core.Interfaces.IUser)">
            <summary>Sets the stub of IFilteredStream.RemoveFollow(IUser user)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#RemoveLocation(Tweetinvi.Core.Interfaces.Models.ILocation)">
            <summary>Sets the stub of IFilteredStream.RemoveLocation(ILocation location)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#RemoveLocation(Tweetinvi.Core.Interfaces.Models.ICoordinates,Tweetinvi.Core.Interfaces.Models.ICoordinates)">
            <summary>Sets the stub of IFilteredStream.RemoveLocation(ICoordinates coordinate1, ICoordinates coordinate2)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#StartStreamMatchingAllConditions">
            <summary>Sets the stub of IFilteredStream.StartStreamMatchingAllConditions()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#StartStreamMatchingAllConditionsAsync">
            <summary>Sets the stub of IFilteredStream.StartStreamMatchingAllConditionsAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#StartStreamMatchingAnyCondition">
            <summary>Sets the stub of IFilteredStream.StartStreamMatchingAnyCondition()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#StartStreamMatchingAnyConditionAsync">
            <summary>Sets the stub of IFilteredStream.StartStreamMatchingAnyConditionAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{Tweetinvi#Core#Interfaces#ITweet}#AddTrack(System.String,System.Action{Tweetinvi.Core.Interfaces.ITweet})">
            <summary>Sets the stub of ITrackableStream`1.AddTrack(String track, Action`1&lt;!0&gt; trackReceived)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{Tweetinvi#Core#Interfaces#ITweet}#ClearTracks">
            <summary>Sets the stub of ITrackableStream`1.ClearTracks()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{Tweetinvi#Core#Interfaces#ITweet}#ContainsTrack(System.String)">
            <summary>Sets the stub of ITrackableStream`1.ContainsTrack(String track)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{Tweetinvi#Core#Interfaces#ITweet}#RemoveTrack(System.String)">
            <summary>Sets the stub of ITrackableStream`1.RemoveTrack(String track)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#FilterTweetsToBeIn(Tweetinvi.Core.Enum.Language)">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(Language language)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#FilterTweetsToBeIn(System.String)">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(String language)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#PauseStream">
            <summary>Sets the stub of ITwitterStream.PauseStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#ResumeStream">
            <summary>Sets the stub of ITwitterStream.ResumeStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#StopStream">
            <summary>Sets the stub of ITwitterStream.StopStream()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#FollowingUserIds">
            <summary>Sets the stub of IFilteredStream.get_FollowingUserIds()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IFilteredStream#Locations">
            <summary>Sets the stub of IFilteredStream.get_Locations()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{Tweetinvi#Core#Interfaces#ITweet}#MaxTracks">
            <summary>Sets the stub of ITrackableStream`1.get_MaxTracks()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#StreamState">
            <summary>Sets the stub of ITwitterStream.get_StreamState()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{Tweetinvi#Core#Interfaces#ITweet}#Tracks">
            <summary>Sets the stub of ITrackableStream`1.get_Tracks()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIFilteredStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{Tweetinvi#Core#Interfaces#ITweet}#TracksCount">
            <summary>Sets the stub of ITrackableStream`1.get_TracksCount()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Streaminvi.ISampleStream</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.#ctor">
            <summary>Initializes a new instance of type StubISampleStream</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.FilterTweetsToBeInLanguage">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(Language language)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.FilterTweetsToBeInString">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(String language)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.PauseStream">
            <summary>Sets the stub of ITwitterStream.PauseStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.ResumeStream">
            <summary>Sets the stub of ITwitterStream.ResumeStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.StartStream">
            <summary>Sets the stub of ISampleStream.StartStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.StartStreamAsync">
            <summary>Sets the stub of ISampleStream.StartStreamAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.StopStream">
            <summary>Sets the stub of ITwitterStream.StopStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.StreamStateGet">
            <summary>Sets the stub of ITwitterStream.get_StreamState()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ISampleStream#StartStream">
            <summary>Sets the stub of ISampleStream.StartStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ISampleStream#StartStreamAsync">
            <summary>Sets the stub of ISampleStream.StartStreamAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#FilterTweetsToBeIn(Tweetinvi.Core.Enum.Language)">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(Language language)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#FilterTweetsToBeIn(System.String)">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(String language)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#PauseStream">
            <summary>Sets the stub of ITwitterStream.PauseStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#ResumeStream">
            <summary>Sets the stub of ITwitterStream.ResumeStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#StopStream">
            <summary>Sets the stub of ITwitterStream.StopStream()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubISampleStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#StreamState">
            <summary>Sets the stub of ITwitterStream.get_StreamState()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStream`1">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Streaminvi.IStream`1</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStream`1.#ctor">
            <summary>Initializes a new instance of type StubIStream</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStream`1.PauseStream">
            <summary>Sets the stub of IStream`1.PauseStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStream`1.ResumeStream">
            <summary>Sets the stub of IStream`1.ResumeStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStream`1.StopStream">
            <summary>Sets the stub of IStream`1.StopStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStream`1.StreamStateGet">
            <summary>Sets the stub of IStream`1.get_StreamState()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStream`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#IStream{T}#PauseStream">
            <summary>Sets the stub of IStream`1.PauseStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStream`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#IStream{T}#ResumeStream">
            <summary>Sets the stub of IStream`1.ResumeStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStream`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#IStream{T}#StopStream">
            <summary>Sets the stub of IStream`1.StopStream()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStream`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#IStream{T}#StreamState">
            <summary>Sets the stub of IStream`1.get_StreamState()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Streaminvi.IStreamResultGenerator</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.#ctor">
            <summary>Initializes a new instance of type StubIStreamResultGenerator</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.PauseStream">
            <summary>Sets the stub of IStreamResultGenerator.PauseStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.ResumeStream">
            <summary>Sets the stub of IStreamResultGenerator.ResumeStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.StartStreamAsyncActionOfStringFuncOfHttpWebRequest">
            <summary>Sets the stub of IStreamResultGenerator.StartStreamAsync(Action`1&lt;String&gt; processObject, Func`1&lt;HttpWebRequest&gt; generateWebRequest)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.StartStreamAsyncFuncOfStringBooleanFuncOfHttpWebRequest">
            <summary>Sets the stub of IStreamResultGenerator.StartStreamAsync(Func`2&lt;String,Boolean&gt; processTweet, Func`1&lt;HttpWebRequest&gt; generateWebRequest)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.StopStream">
            <summary>Sets the stub of IStreamResultGenerator.StopStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.StopStreamExceptionIDisconnectMessage">
            <summary>Sets the stub of IStreamResultGenerator.StopStream(Exception exception, IDisconnectMessage disconnectMessage)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.StreamStateGet">
            <summary>Sets the stub of IStreamResultGenerator.get_StreamState()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.tc::Tweetinvi#Core#Interfaces#Streaminvi#IStreamResultGenerator#PauseStream">
            <summary>Sets the stub of IStreamResultGenerator.PauseStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.tc::Tweetinvi#Core#Interfaces#Streaminvi#IStreamResultGenerator#ResumeStream">
            <summary>Sets the stub of IStreamResultGenerator.ResumeStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.tc::Tweetinvi#Core#Interfaces#Streaminvi#IStreamResultGenerator#StartStreamAsync(System.Action{System.String},System.Func{System.Net.HttpWebRequest})">
            <summary>Sets the stub of IStreamResultGenerator.StartStreamAsync(Action`1&lt;String&gt; processObject, Func`1&lt;HttpWebRequest&gt; generateWebRequest)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.tc::Tweetinvi#Core#Interfaces#Streaminvi#IStreamResultGenerator#StartStreamAsync(System.Func{System.String,System.Boolean},System.Func{System.Net.HttpWebRequest})">
            <summary>Sets the stub of IStreamResultGenerator.StartStreamAsync(Func`2&lt;String,Boolean&gt; processTweet, Func`1&lt;HttpWebRequest&gt; generateWebRequest)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.tc::Tweetinvi#Core#Interfaces#Streaminvi#IStreamResultGenerator#StopStream">
            <summary>Sets the stub of IStreamResultGenerator.StopStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.tc::Tweetinvi#Core#Interfaces#Streaminvi#IStreamResultGenerator#StopStream(System.Exception,Tweetinvi.Core.Interfaces.DTO.IDisconnectMessage)">
            <summary>Sets the stub of IStreamResultGenerator.StopStream(Exception exception, IDisconnectMessage disconnectMessage)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamResultGenerator.tc::Tweetinvi#Core#Interfaces#Streaminvi#IStreamResultGenerator#StreamState">
            <summary>Sets the stub of IStreamResultGenerator.get_StreamState()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Streaminvi.IStreamTrackManager`1</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.#ctor">
            <summary>Initializes a new instance of type StubIStreamTrackManager</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.AddTrackStringActionOfT0">
            <summary>Sets the stub of ITrackManager`1.AddTrack(String track, Action`1&lt;!0&gt; trackReceived)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.ClearTracks">
            <summary>Sets the stub of ITrackManager`1.ClearTracks()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.ContainsTrackString">
            <summary>Sets the stub of ITrackManager`1.ContainsTrack(String track)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.GetMatchingCharactersString">
            <summary>Sets the stub of ITrackStringAnalyzer.GetMatchingCharacters(String input)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.GetMatchingTracksAndActionsString">
            <summary>Sets the stub of IStreamTrackManager`1.GetMatchingTracksAndActions(String inputs)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.GetMatchingTracksString">
            <summary>Sets the stub of ITrackStringAnalyzer.GetMatchingTracks(String input)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.MatchesAllString">
            <summary>Sets the stub of ITrackStringAnalyzer.MatchesAll(String input)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.MatchesString">
            <summary>Sets the stub of ITrackStringAnalyzer.Matches(String input)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.MaxTracksGet">
            <summary>Sets the stub of ITrackManager`1.get_MaxTracks()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.RemoveTrackString">
            <summary>Sets the stub of ITrackManager`1.RemoveTrack(String track)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.TracksCountGet">
            <summary>Sets the stub of ITrackManager`1.get_TracksCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.TracksGet">
            <summary>Sets the stub of ITrackManager`1.get_Tracks()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#IStreamTrackManager{T}#GetMatchingTracksAndActions(System.String)">
            <summary>Sets the stub of IStreamTrackManager`1.GetMatchingTracksAndActions(String inputs)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackManager{T}#AddTrack(System.String,System.Action{`0})">
            <summary>Sets the stub of ITrackManager`1.AddTrack(String track, Action`1&lt;!0&gt; trackReceived)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackManager{T}#ClearTracks">
            <summary>Sets the stub of ITrackManager`1.ClearTracks()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackManager{T}#ContainsTrack(System.String)">
            <summary>Sets the stub of ITrackManager`1.ContainsTrack(String track)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackManager{T}#RemoveTrack(System.String)">
            <summary>Sets the stub of ITrackManager`1.RemoveTrack(String track)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackStringAnalyzer#GetMatchingCharacters(System.String)">
            <summary>Sets the stub of ITrackStringAnalyzer.GetMatchingCharacters(String input)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackStringAnalyzer#GetMatchingTracks(System.String)">
            <summary>Sets the stub of ITrackStringAnalyzer.GetMatchingTracks(String input)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackStringAnalyzer#Matches(System.String)">
            <summary>Sets the stub of ITrackStringAnalyzer.Matches(String input)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackStringAnalyzer#MatchesAll(System.String)">
            <summary>Sets the stub of ITrackStringAnalyzer.MatchesAll(String input)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackManager{T}#MaxTracks">
            <summary>Sets the stub of ITrackManager`1.get_MaxTracks()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackManager{T}#Tracks">
            <summary>Sets the stub of ITrackManager`1.get_Tracks()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIStreamTrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackManager{T}#TracksCount">
            <summary>Sets the stub of ITrackManager`1.get_TracksCount()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Streaminvi.ITrackManager`1</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.#ctor">
            <summary>Initializes a new instance of type StubITrackManager</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.AddTrackStringActionOfT0">
            <summary>Sets the stub of ITrackManager`1.AddTrack(String track, Action`1&lt;!0&gt; trackReceived)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.ClearTracks">
            <summary>Sets the stub of ITrackManager`1.ClearTracks()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.ContainsTrackString">
            <summary>Sets the stub of ITrackManager`1.ContainsTrack(String track)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.MaxTracksGet">
            <summary>Sets the stub of ITrackManager`1.get_MaxTracks()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.RemoveTrackString">
            <summary>Sets the stub of ITrackManager`1.RemoveTrack(String track)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.TracksCountGet">
            <summary>Sets the stub of ITrackManager`1.get_TracksCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.TracksGet">
            <summary>Sets the stub of ITrackManager`1.get_Tracks()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackManager{T}#AddTrack(System.String,System.Action{`0})">
            <summary>Sets the stub of ITrackManager`1.AddTrack(String track, Action`1&lt;!0&gt; trackReceived)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackManager{T}#ClearTracks">
            <summary>Sets the stub of ITrackManager`1.ClearTracks()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackManager{T}#ContainsTrack(System.String)">
            <summary>Sets the stub of ITrackManager`1.ContainsTrack(String track)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackManager{T}#RemoveTrack(System.String)">
            <summary>Sets the stub of ITrackManager`1.RemoveTrack(String track)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackManager{T}#MaxTracks">
            <summary>Sets the stub of ITrackManager`1.get_MaxTracks()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackManager{T}#Tracks">
            <summary>Sets the stub of ITrackManager`1.get_Tracks()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackManager`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackManager{T}#TracksCount">
            <summary>Sets the stub of ITrackManager`1.get_TracksCount()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackStringAnalyzer">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Streaminvi.ITrackStringAnalyzer</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackStringAnalyzer.#ctor">
            <summary>Initializes a new instance of type StubITrackStringAnalyzer</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackStringAnalyzer.GetMatchingCharactersString">
            <summary>Sets the stub of ITrackStringAnalyzer.GetMatchingCharacters(String input)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackStringAnalyzer.GetMatchingTracksString">
            <summary>Sets the stub of ITrackStringAnalyzer.GetMatchingTracks(String input)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackStringAnalyzer.MatchesAllString">
            <summary>Sets the stub of ITrackStringAnalyzer.MatchesAll(String input)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackStringAnalyzer.MatchesString">
            <summary>Sets the stub of ITrackStringAnalyzer.Matches(String input)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackStringAnalyzer.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackStringAnalyzer#GetMatchingCharacters(System.String)">
            <summary>Sets the stub of ITrackStringAnalyzer.GetMatchingCharacters(String input)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackStringAnalyzer.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackStringAnalyzer#GetMatchingTracks(System.String)">
            <summary>Sets the stub of ITrackStringAnalyzer.GetMatchingTracks(String input)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackStringAnalyzer.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackStringAnalyzer#Matches(System.String)">
            <summary>Sets the stub of ITrackStringAnalyzer.Matches(String input)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackStringAnalyzer.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackStringAnalyzer#MatchesAll(System.String)">
            <summary>Sets the stub of ITrackStringAnalyzer.MatchesAll(String input)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Streaminvi.ITrackableStream`1</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.#ctor">
            <summary>Initializes a new instance of type StubITrackableStream</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.AddTrackStringActionOfT0">
            <summary>Sets the stub of ITrackableStream`1.AddTrack(String track, Action`1&lt;!0&gt; trackReceived)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.ClearTracks">
            <summary>Sets the stub of ITrackableStream`1.ClearTracks()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.ContainsTrackString">
            <summary>Sets the stub of ITrackableStream`1.ContainsTrack(String track)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.MaxTracksGet">
            <summary>Sets the stub of ITrackableStream`1.get_MaxTracks()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.RemoveTrackString">
            <summary>Sets the stub of ITrackableStream`1.RemoveTrack(String track)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.TracksCountGet">
            <summary>Sets the stub of ITrackableStream`1.get_TracksCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.TracksGet">
            <summary>Sets the stub of ITrackableStream`1.get_Tracks()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{T}#AddTrack(System.String,System.Action{`0})">
            <summary>Sets the stub of ITrackableStream`1.AddTrack(String track, Action`1&lt;!0&gt; trackReceived)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{T}#ClearTracks">
            <summary>Sets the stub of ITrackableStream`1.ClearTracks()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{T}#ContainsTrack(System.String)">
            <summary>Sets the stub of ITrackableStream`1.ContainsTrack(String track)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{T}#RemoveTrack(System.String)">
            <summary>Sets the stub of ITrackableStream`1.RemoveTrack(String track)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{T}#MaxTracks">
            <summary>Sets the stub of ITrackableStream`1.get_MaxTracks()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{T}#Tracks">
            <summary>Sets the stub of ITrackableStream`1.get_Tracks()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackableStream`1.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{T}#TracksCount">
            <summary>Sets the stub of ITrackableStream`1.get_TracksCount()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Streaminvi.ITrackedStream</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.#ctor">
            <summary>Initializes a new instance of type StubITrackedStream</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.AddTrackStringActionOfITweet">
            <summary>Sets the stub of ITrackableStream`1.AddTrack(String track, Action`1&lt;!0&gt; trackReceived)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.ClearTracks">
            <summary>Sets the stub of ITrackableStream`1.ClearTracks()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.ContainsTrackString">
            <summary>Sets the stub of ITrackableStream`1.ContainsTrack(String track)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.FilterTweetsToBeInLanguage">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(Language language)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.FilterTweetsToBeInString">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(String language)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.MaxTracksGet">
            <summary>Sets the stub of ITrackableStream`1.get_MaxTracks()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.PauseStream">
            <summary>Sets the stub of ITwitterStream.PauseStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.RemoveTrackString">
            <summary>Sets the stub of ITrackableStream`1.RemoveTrack(String track)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.ResumeStream">
            <summary>Sets the stub of ITwitterStream.ResumeStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.StartStreamAsyncString">
            <summary>Sets the stub of ITrackedStream.StartStreamAsync(String url)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.StartStreamString">
            <summary>Sets the stub of ITrackedStream.StartStream(String url)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.StopStream">
            <summary>Sets the stub of ITwitterStream.StopStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.StreamStateGet">
            <summary>Sets the stub of ITwitterStream.get_StreamState()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.TracksCountGet">
            <summary>Sets the stub of ITrackableStream`1.get_TracksCount()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.TracksGet">
            <summary>Sets the stub of ITrackableStream`1.get_Tracks()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{Tweetinvi#Core#Interfaces#ITweet}#AddTrack(System.String,System.Action{Tweetinvi.Core.Interfaces.ITweet})">
            <summary>Sets the stub of ITrackableStream`1.AddTrack(String track, Action`1&lt;!0&gt; trackReceived)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{Tweetinvi#Core#Interfaces#ITweet}#ClearTracks">
            <summary>Sets the stub of ITrackableStream`1.ClearTracks()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{Tweetinvi#Core#Interfaces#ITweet}#ContainsTrack(System.String)">
            <summary>Sets the stub of ITrackableStream`1.ContainsTrack(String track)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{Tweetinvi#Core#Interfaces#ITweet}#RemoveTrack(System.String)">
            <summary>Sets the stub of ITrackableStream`1.RemoveTrack(String track)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackedStream#StartStream(System.String)">
            <summary>Sets the stub of ITrackedStream.StartStream(String url)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackedStream#StartStreamAsync(System.String)">
            <summary>Sets the stub of ITrackedStream.StartStreamAsync(String url)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#FilterTweetsToBeIn(System.String)">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(String language)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#FilterTweetsToBeIn(Tweetinvi.Core.Enum.Language)">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(Language language)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#PauseStream">
            <summary>Sets the stub of ITwitterStream.PauseStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#ResumeStream">
            <summary>Sets the stub of ITwitterStream.ResumeStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#StopStream">
            <summary>Sets the stub of ITwitterStream.StopStream()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{Tweetinvi#Core#Interfaces#ITweet}#MaxTracks">
            <summary>Sets the stub of ITrackableStream`1.get_MaxTracks()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#StreamState">
            <summary>Sets the stub of ITwitterStream.get_StreamState()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{Tweetinvi#Core#Interfaces#ITweet}#Tracks">
            <summary>Sets the stub of ITrackableStream`1.get_Tracks()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITrackedStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITrackableStream{Tweetinvi#Core#Interfaces#ITweet}#TracksCount">
            <summary>Sets the stub of ITrackableStream`1.get_TracksCount()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Streaminvi.ITweetStream</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.#ctor">
            <summary>Initializes a new instance of type StubITweetStream</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.FilterTweetsToBeInLanguage">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(Language language)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.FilterTweetsToBeInString">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(String language)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.PauseStream">
            <summary>Sets the stub of ITwitterStream.PauseStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.ResumeStream">
            <summary>Sets the stub of ITwitterStream.ResumeStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.StartStreamString">
            <summary>Sets the stub of ITweetStream.StartStream(String url)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.StopStream">
            <summary>Sets the stub of ITwitterStream.StopStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.StreamStateGet">
            <summary>Sets the stub of ITwitterStream.get_StreamState()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITweetStream#StartStream(System.String)">
            <summary>Sets the stub of ITweetStream.StartStream(String url)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#FilterTweetsToBeIn(Tweetinvi.Core.Enum.Language)">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(Language language)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#FilterTweetsToBeIn(System.String)">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(String language)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#PauseStream">
            <summary>Sets the stub of ITwitterStream.PauseStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#ResumeStream">
            <summary>Sets the stub of ITwitterStream.ResumeStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#StopStream">
            <summary>Sets the stub of ITwitterStream.StopStream()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITweetStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#StreamState">
            <summary>Sets the stub of ITwitterStream.get_StreamState()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITwitterStream">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Streaminvi.ITwitterStream</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITwitterStream.#ctor">
            <summary>Initializes a new instance of type StubITwitterStream</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITwitterStream.FilterTweetsToBeInLanguage">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(Language language)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITwitterStream.FilterTweetsToBeInString">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(String language)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITwitterStream.PauseStream">
            <summary>Sets the stub of ITwitterStream.PauseStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITwitterStream.ResumeStream">
            <summary>Sets the stub of ITwitterStream.ResumeStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITwitterStream.StopStream">
            <summary>Sets the stub of ITwitterStream.StopStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITwitterStream.StreamStateGet">
            <summary>Sets the stub of ITwitterStream.get_StreamState()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITwitterStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#FilterTweetsToBeIn(Tweetinvi.Core.Enum.Language)">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(Language language)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITwitterStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#FilterTweetsToBeIn(System.String)">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(String language)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITwitterStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#PauseStream">
            <summary>Sets the stub of ITwitterStream.PauseStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITwitterStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#ResumeStream">
            <summary>Sets the stub of ITwitterStream.ResumeStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITwitterStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#StopStream">
            <summary>Sets the stub of ITwitterStream.StopStream()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubITwitterStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#StreamState">
            <summary>Sets the stub of ITwitterStream.get_StreamState()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream">
            <summary>Stub type of Tweetinvi.Core.Interfaces.Streaminvi.IUserStream</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.#ctor">
            <summary>Initializes a new instance of type StubIUserStream</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.FilterTweetsToBeInLanguage">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(Language language)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.FilterTweetsToBeInString">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(String language)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.PauseStream">
            <summary>Sets the stub of ITwitterStream.PauseStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.ResumeStream">
            <summary>Sets the stub of ITwitterStream.ResumeStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.StartStream">
            <summary>Sets the stub of IUserStream.StartStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.StartStreamAsync">
            <summary>Sets the stub of IUserStream.StartStreamAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.StopStream">
            <summary>Sets the stub of ITwitterStream.StopStream()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.StreamStateGet">
            <summary>Sets the stub of ITwitterStream.get_StreamState()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#FilterTweetsToBeIn(Tweetinvi.Core.Enum.Language)">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(Language language)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#FilterTweetsToBeIn(System.String)">
            <summary>Sets the stub of ITwitterStream.FilterTweetsToBeIn(String language)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#PauseStream">
            <summary>Sets the stub of ITwitterStream.PauseStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#ResumeStream">
            <summary>Sets the stub of ITwitterStream.ResumeStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#StopStream">
            <summary>Sets the stub of ITwitterStream.StopStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IUserStream#StartStream">
            <summary>Sets the stub of IUserStream.StartStream()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#IUserStream#StartStreamAsync">
            <summary>Sets the stub of IUserStream.StartStreamAsync()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.Streaminvi.Fakes.StubIUserStream.tc::Tweetinvi#Core#Interfaces#Streaminvi#ITwitterStream#StreamState">
            <summary>Sets the stub of ITwitterStream.get_StreamState()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIConsumerCredentials">
            <summary>Stub type of Tweetinvi.Core.Interfaces.oAuth.IConsumerCredentials</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIConsumerCredentials.#ctor">
            <summary>Initializes a new instance of type StubIConsumerCredentials</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIConsumerCredentials.AttachBackingFieldToConsumerKey">
            <summary>Attaches delegates to emulate StubIConsumerCredentials.ConsumerKey as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIConsumerCredentials.AttachBackingFieldToConsumerSecret">
            <summary>Attaches delegates to emulate StubIConsumerCredentials.ConsumerSecret as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIConsumerCredentials.ConsumerKeyGet">
            <summary>Sets the stub of IConsumerCredentials.get_ConsumerKey()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIConsumerCredentials.ConsumerKeySetString">
            <summary>Sets the stub of IConsumerCredentials.set_ConsumerKey(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIConsumerCredentials.ConsumerSecretGet">
            <summary>Sets the stub of IConsumerCredentials.get_ConsumerSecret()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIConsumerCredentials.ConsumerSecretSetString">
            <summary>Sets the stub of IConsumerCredentials.set_ConsumerSecret(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIConsumerCredentials.tc::Tweetinvi#Core#Interfaces#oAuth#IConsumerCredentials#ConsumerKey">
            <summary>Sets the stub of IConsumerCredentials.get_ConsumerKey()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIConsumerCredentials.tc::Tweetinvi#Core#Interfaces#oAuth#IConsumerCredentials#ConsumerSecret">
            <summary>Sets the stub of IConsumerCredentials.get_ConsumerSecret()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement">
            <summary>Stub type of Tweetinvi.Core.Interfaces.oAuth.IMultipartElement</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.#ctor">
            <summary>Initializes a new instance of type StubIMultipartElement</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.AdditionalParametersGet">
            <summary>Sets the stub of IMultipartElement.get_AdditionalParameters()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.AdditionalParametersSetDictionaryOfStringString">
            <summary>Sets the stub of IMultipartElement.set_AdditionalParameters(Dictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.AttachBackingFieldToAdditionalParameters">
            <summary>Attaches delegates to emulate StubIMultipartElement.AdditionalParameters as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.AttachBackingFieldToBoundary">
            <summary>Attaches delegates to emulate StubIMultipartElement.Boundary as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.AttachBackingFieldToContentDispositionType">
            <summary>Attaches delegates to emulate StubIMultipartElement.ContentDispositionType as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.AttachBackingFieldToContentId">
            <summary>Attaches delegates to emulate StubIMultipartElement.ContentId as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.AttachBackingFieldToContentType">
            <summary>Attaches delegates to emulate StubIMultipartElement.ContentType as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.AttachBackingFieldToData">
            <summary>Attaches delegates to emulate StubIMultipartElement.Data as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIMultipartElement.Name as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.BoundaryGet">
            <summary>Sets the stub of IMultipartElement.get_Boundary()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.BoundarySetString">
            <summary>Sets the stub of IMultipartElement.set_Boundary(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.ContentDispositionTypeGet">
            <summary>Sets the stub of IMultipartElement.get_ContentDispositionType()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.ContentDispositionTypeSetString">
            <summary>Sets the stub of IMultipartElement.set_ContentDispositionType(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.ContentIdGet">
            <summary>Sets the stub of IMultipartElement.get_ContentId()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.ContentIdSetString">
            <summary>Sets the stub of IMultipartElement.set_ContentId(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.ContentTypeGet">
            <summary>Sets the stub of IMultipartElement.get_ContentType()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.ContentTypeSetString">
            <summary>Sets the stub of IMultipartElement.set_ContentType(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.DataGet">
            <summary>Sets the stub of IMultipartElement.get_Data()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.DataSetString">
            <summary>Sets the stub of IMultipartElement.set_Data(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.NameGet">
            <summary>Sets the stub of IMultipartElement.get_Name()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.NameSetString">
            <summary>Sets the stub of IMultipartElement.set_Name(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartElement#AdditionalParameters">
            <summary>Sets the stub of IMultipartElement.get_AdditionalParameters()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartElement#Boundary">
            <summary>Sets the stub of IMultipartElement.get_Boundary()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartElement#ContentDispositionType">
            <summary>Sets the stub of IMultipartElement.get_ContentDispositionType()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartElement#ContentId">
            <summary>Sets the stub of IMultipartElement.get_ContentId()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartElement#ContentType">
            <summary>Sets the stub of IMultipartElement.get_ContentType()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartElement#Data">
            <summary>Sets the stub of IMultipartElement.get_Data()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartElement.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartElement#Name">
            <summary>Sets the stub of IMultipartElement.get_Name()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration">
            <summary>Stub type of Tweetinvi.Core.Interfaces.oAuth.IMultipartRequestConfiguration</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIMultipartRequestConfiguration</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.AttachBackingFieldToBoundary">
            <summary>Attaches delegates to emulate StubIMultipartRequestConfiguration.Boundary as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.AttachBackingFieldToEncodingAlgorithm">
            <summary>Attaches delegates to emulate StubIMultipartRequestConfiguration.EncodingAlgorithm as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.AttachBackingFieldToEndBoundary">
            <summary>Attaches delegates to emulate StubIMultipartRequestConfiguration.EndBoundary as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.AttachBackingFieldToStartBoundary">
            <summary>Attaches delegates to emulate StubIMultipartRequestConfiguration.StartBoundary as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.BoundaryGet">
            <summary>Sets the stub of IMultipartRequestConfiguration.get_Boundary()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.BoundarySetString">
            <summary>Sets the stub of IMultipartRequestConfiguration.set_Boundary(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.EncodingAlgorithmGet">
            <summary>Sets the stub of IMultipartRequestConfiguration.get_EncodingAlgorithm()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.EncodingAlgorithmSetEncoding">
            <summary>Sets the stub of IMultipartRequestConfiguration.set_EncodingAlgorithm(Encoding value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.EndBoundaryGet">
            <summary>Sets the stub of IMultipartRequestConfiguration.get_EndBoundary()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.EndBoundarySetString">
            <summary>Sets the stub of IMultipartRequestConfiguration.set_EndBoundary(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.StartBoundaryGet">
            <summary>Sets the stub of IMultipartRequestConfiguration.get_StartBoundary()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.StartBoundarySetString">
            <summary>Sets the stub of IMultipartRequestConfiguration.set_StartBoundary(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartRequestConfiguration#Boundary">
            <summary>Sets the stub of IMultipartRequestConfiguration.get_Boundary()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartRequestConfiguration#EncodingAlgorithm">
            <summary>Sets the stub of IMultipartRequestConfiguration.get_EncodingAlgorithm()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartRequestConfiguration#EndBoundary">
            <summary>Sets the stub of IMultipartRequestConfiguration.get_EndBoundary()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartRequestConfiguration.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartRequestConfiguration#StartBoundary">
            <summary>Sets the stub of IMultipartRequestConfiguration.get_StartBoundary()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartWebRequest">
            <summary>Stub type of Tweetinvi.Core.Interfaces.oAuth.IMultipartWebRequest</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartWebRequest.#ctor">
            <summary>Initializes a new instance of type StubIMultipartWebRequest</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartWebRequest.ContentGet">
            <summary>Sets the stub of IMultipartWebRequest.get_Content()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartWebRequest.GetResult">
            <summary>Sets the stub of IMultipartWebRequest.GetResult()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartWebRequest.GetResultAsync">
            <summary>Sets the stub of IMultipartWebRequest.GetResultAsync()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartWebRequest.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartWebRequest#GetResult">
            <summary>Sets the stub of IMultipartWebRequest.GetResult()</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartWebRequest.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartWebRequest#GetResultAsync">
            <summary>Sets the stub of IMultipartWebRequest.GetResultAsync()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartWebRequest.WebRequestGet">
            <summary>Sets the stub of IMultipartWebRequest.get_WebRequest()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartWebRequest.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartWebRequest#Content">
            <summary>Sets the stub of IMultipartWebRequest.get_Content()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIMultipartWebRequest.tc::Tweetinvi#Core#Interfaces#oAuth#IMultipartWebRequest#WebRequest">
            <summary>Sets the stub of IMultipartWebRequest.get_WebRequest()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials">
            <summary>Stub type of Tweetinvi.Core.Interfaces.oAuth.IOAuthCredentials</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.#ctor">
            <summary>Initializes a new instance of type StubIOAuthCredentials</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.AccessTokenGet">
            <summary>Sets the stub of IOAuthCredentials.get_AccessToken()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.AccessTokenSecretGet">
            <summary>Sets the stub of IOAuthCredentials.get_AccessTokenSecret()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.AccessTokenSecretSetString">
            <summary>Sets the stub of IOAuthCredentials.set_AccessTokenSecret(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.AccessTokenSetString">
            <summary>Sets the stub of IOAuthCredentials.set_AccessToken(String value)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.AttachBackingFieldToAccessToken">
            <summary>Attaches delegates to emulate StubIOAuthCredentials.AccessToken as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.AttachBackingFieldToAccessTokenSecret">
            <summary>Attaches delegates to emulate StubIOAuthCredentials.AccessTokenSecret as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.AttachBackingFieldToConsumerKey">
            <summary>Attaches delegates to emulate StubIOAuthCredentials.ConsumerKey as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.AttachBackingFieldToConsumerSecret">
            <summary>Attaches delegates to emulate StubIOAuthCredentials.ConsumerSecret as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.ConsumerKeyGet">
            <summary>Sets the stub of IConsumerCredentials.get_ConsumerKey()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.ConsumerKeySetString">
            <summary>Sets the stub of IConsumerCredentials.set_ConsumerKey(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.ConsumerSecretGet">
            <summary>Sets the stub of IConsumerCredentials.get_ConsumerSecret()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.ConsumerSecretSetString">
            <summary>Sets the stub of IConsumerCredentials.set_ConsumerSecret(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.tc::Tweetinvi#Core#Interfaces#oAuth#IOAuthCredentials#AccessToken">
            <summary>Sets the stub of IOAuthCredentials.get_AccessToken()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.tc::Tweetinvi#Core#Interfaces#oAuth#IOAuthCredentials#AccessTokenSecret">
            <summary>Sets the stub of IOAuthCredentials.get_AccessTokenSecret()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.tc::Tweetinvi#Core#Interfaces#oAuth#IConsumerCredentials#ConsumerKey">
            <summary>Sets the stub of IConsumerCredentials.get_ConsumerKey()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthCredentials.tc::Tweetinvi#Core#Interfaces#oAuth#IConsumerCredentials#ConsumerSecret">
            <summary>Sets the stub of IConsumerCredentials.get_ConsumerSecret()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter">
            <summary>Stub type of Tweetinvi.Core.Interfaces.oAuth.IOAuthQueryParameter</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.#ctor">
            <summary>Initializes a new instance of type StubIOAuthQueryParameter</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.AttachBackingFieldToIsPartOfOAuthSecretKey">
            <summary>Attaches delegates to emulate StubIOAuthQueryParameter.IsPartOfOAuthSecretKey as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.AttachBackingFieldToKey">
            <summary>Attaches delegates to emulate StubIOAuthQueryParameter.Key as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.AttachBackingFieldToRequiredForHeader">
            <summary>Attaches delegates to emulate StubIOAuthQueryParameter.RequiredForHeader as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.AttachBackingFieldToRequiredForSignature">
            <summary>Attaches delegates to emulate StubIOAuthQueryParameter.RequiredForSignature as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.AttachBackingFieldToValue">
            <summary>Attaches delegates to emulate StubIOAuthQueryParameter.Value as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.IsPartOfOAuthSecretKeyGet">
            <summary>Sets the stub of IOAuthQueryParameter.get_IsPartOfOAuthSecretKey()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.IsPartOfOAuthSecretKeySetBoolean">
            <summary>Sets the stub of IOAuthQueryParameter.set_IsPartOfOAuthSecretKey(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.KeyGet">
            <summary>Sets the stub of IOAuthQueryParameter.get_Key()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.KeySetString">
            <summary>Sets the stub of IOAuthQueryParameter.set_Key(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.RequiredForHeaderGet">
            <summary>Sets the stub of IOAuthQueryParameter.get_RequiredForHeader()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.RequiredForHeaderSetBoolean">
            <summary>Sets the stub of IOAuthQueryParameter.set_RequiredForHeader(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.RequiredForSignatureGet">
            <summary>Sets the stub of IOAuthQueryParameter.get_RequiredForSignature()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.RequiredForSignatureSetBoolean">
            <summary>Sets the stub of IOAuthQueryParameter.set_RequiredForSignature(Boolean value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.ValueGet">
            <summary>Sets the stub of IOAuthQueryParameter.get_Value()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.ValueSetString">
            <summary>Sets the stub of IOAuthQueryParameter.set_Value(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.tc::Tweetinvi#Core#Interfaces#oAuth#IOAuthQueryParameter#IsPartOfOAuthSecretKey">
            <summary>Sets the stub of IOAuthQueryParameter.get_IsPartOfOAuthSecretKey()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.tc::Tweetinvi#Core#Interfaces#oAuth#IOAuthQueryParameter#Key">
            <summary>Sets the stub of IOAuthQueryParameter.get_Key()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.tc::Tweetinvi#Core#Interfaces#oAuth#IOAuthQueryParameter#RequiredForHeader">
            <summary>Sets the stub of IOAuthQueryParameter.get_RequiredForHeader()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.tc::Tweetinvi#Core#Interfaces#oAuth#IOAuthQueryParameter#RequiredForSignature">
            <summary>Sets the stub of IOAuthQueryParameter.get_RequiredForSignature()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIOAuthQueryParameter.tc::Tweetinvi#Core#Interfaces#oAuth#IOAuthQueryParameter#Value">
            <summary>Sets the stub of IOAuthQueryParameter.get_Value()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequestGenerator">
            <summary>Stub type of Tweetinvi.Core.Interfaces.oAuth.ITwitterRequestGenerator</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequestGenerator.#ctor">
            <summary>Initializes a new instance of type StubITwitterRequestGenerator</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequestGenerator.GenerateMultipartWebRequestStringHttpMethodIEnumerableOfIMedia">
            <summary>Sets the stub of ITwitterRequestGenerator.GenerateMultipartWebRequest(String url, HttpMethod httpMethod, IEnumerable`1&lt;IMedia&gt; medias)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequestGenerator.GetQueryWebRequestStringHttpMethodIEnumerableOfIOAuthQueryParameter">
            <summary>Sets the stub of ITwitterRequestGenerator.GetQueryWebRequest(String url, HttpMethod httpMethod, IEnumerable`1&lt;IOAuthQueryParameter&gt; headers)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequestGenerator.GetQueryWebRequestWithTemporaryCredentialsStringHttpMethodITemporaryCredentialsIEnumerableOfIOAuthQueryParameter">
            <summary>Sets the stub of ITwitterRequestGenerator.GetQueryWebRequestWithTemporaryCredentials(String url, HttpMethod httpMethod, ITemporaryCredentials temporaryCredentials, IEnumerable`1&lt;IOAuthQueryParameter&gt; parameters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequestGenerator.tc::Tweetinvi#Core#Interfaces#oAuth#ITwitterRequestGenerator#GenerateMultipartWebRequest(System.String,Tweetinvi.Core.Enum.HttpMethod,System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.IMedia})">
            <summary>Sets the stub of ITwitterRequestGenerator.GenerateMultipartWebRequest(String url, HttpMethod httpMethod, IEnumerable`1&lt;IMedia&gt; medias)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequestGenerator.tc::Tweetinvi#Core#Interfaces#oAuth#ITwitterRequestGenerator#GetQueryWebRequest(System.String,Tweetinvi.Core.Enum.HttpMethod,System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.oAuth.IOAuthQueryParameter})">
            <summary>Sets the stub of ITwitterRequestGenerator.GetQueryWebRequest(String url, HttpMethod httpMethod, IEnumerable`1&lt;IOAuthQueryParameter&gt; headers)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequestGenerator.tc::Tweetinvi#Core#Interfaces#oAuth#ITwitterRequestGenerator#GetQueryWebRequestWithTemporaryCredentials(System.String,Tweetinvi.Core.Enum.HttpMethod,Tweetinvi.Core.Interfaces.Credentials.ITemporaryCredentials,System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.oAuth.IOAuthQueryParameter})">
            <summary>Sets the stub of ITwitterRequestGenerator.GetQueryWebRequestWithTemporaryCredentials(String url, HttpMethod httpMethod, ITemporaryCredentials temporaryCredentials, IEnumerable`1&lt;IOAuthQueryParameter&gt; parameters)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequester">
            <summary>Stub type of Tweetinvi.Core.Interfaces.oAuth.ITwitterRequester</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequester.#ctor">
            <summary>Initializes a new instance of type StubITwitterRequester</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequester.ExecuteMultipartQueryStringHttpMethodIEnumerableOfIMedia">
            <summary>Sets the stub of ITwitterRequester.ExecuteMultipartQuery(String url, HttpMethod httpMethod, IEnumerable`1&lt;IMedia&gt; medias)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequester.ExecuteQueryStringHttpMethodIEnumerableOfIOAuthQueryParameter">
            <summary>Sets the stub of ITwitterRequester.ExecuteQuery(String url, HttpMethod httpMethod, IEnumerable`1&lt;IOAuthQueryParameter&gt; headers)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequester.ExecuteQueryWithTemporaryCredentialsStringHttpMethodITemporaryCredentialsIEnumerableOfIOAuthQueryParameter">
            <summary>Sets the stub of ITwitterRequester.ExecuteQueryWithTemporaryCredentials(String url, HttpMethod httpMethod, ITemporaryCredentials temporaryCredentials, IEnumerable`1&lt;IOAuthQueryParameter&gt; headers)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequester.tc::Tweetinvi#Core#Interfaces#oAuth#ITwitterRequester#ExecuteMultipartQuery(System.String,Tweetinvi.Core.Enum.HttpMethod,System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.DTO.IMedia})">
            <summary>Sets the stub of ITwitterRequester.ExecuteMultipartQuery(String url, HttpMethod httpMethod, IEnumerable`1&lt;IMedia&gt; medias)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequester.tc::Tweetinvi#Core#Interfaces#oAuth#ITwitterRequester#ExecuteQuery(System.String,Tweetinvi.Core.Enum.HttpMethod,System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.oAuth.IOAuthQueryParameter})">
            <summary>Sets the stub of ITwitterRequester.ExecuteQuery(String url, HttpMethod httpMethod, IEnumerable`1&lt;IOAuthQueryParameter&gt; headers)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubITwitterRequester.tc::Tweetinvi#Core#Interfaces#oAuth#ITwitterRequester#ExecuteQueryWithTemporaryCredentials(System.String,Tweetinvi.Core.Enum.HttpMethod,Tweetinvi.Core.Interfaces.Credentials.ITemporaryCredentials,System.Collections.Generic.IEnumerable{Tweetinvi.Core.Interfaces.oAuth.IOAuthQueryParameter})">
            <summary>Sets the stub of ITwitterRequester.ExecuteQueryWithTemporaryCredentials(String url, HttpMethod httpMethod, ITemporaryCredentials temporaryCredentials, IEnumerable`1&lt;IOAuthQueryParameter&gt; headers)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIWebRequestExecutor">
            <summary>Stub type of Tweetinvi.Core.Interfaces.oAuth.IWebRequestExecutor</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIWebRequestExecutor.#ctor">
            <summary>Initializes a new instance of type StubIWebRequestExecutor</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIWebRequestExecutor.ExecuteMultipartRequestIMultipartWebRequest">
            <summary>Sets the stub of IWebRequestExecutor.ExecuteMultipartRequest(IMultipartWebRequest multipartWebRequest)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIWebRequestExecutor.ExecuteWebRequestHttpWebRequest">
            <summary>Sets the stub of IWebRequestExecutor.ExecuteWebRequest(HttpWebRequest webRequest)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIWebRequestExecutor.tc::Tweetinvi#Core#Interfaces#oAuth#IWebRequestExecutor#ExecuteMultipartRequest(Tweetinvi.Core.Interfaces.oAuth.IMultipartWebRequest)">
            <summary>Sets the stub of IWebRequestExecutor.ExecuteMultipartRequest(IMultipartWebRequest multipartWebRequest)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Interfaces.oAuth.Fakes.StubIWebRequestExecutor.tc::Tweetinvi#Core#Interfaces#oAuth#IWebRequestExecutor#ExecuteWebRequest(System.Net.HttpWebRequest)">
            <summary>Sets the stub of IWebRequestExecutor.ExecuteWebRequest(HttpWebRequest webRequest)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Wrappers.Fakes.StubIJObjectStaticWrapper">
            <summary>Stub type of Tweetinvi.Core.Wrappers.IJObjectStaticWrapper</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIJObjectStaticWrapper.#ctor">
            <summary>Initializes a new instance of type StubIJObjectStaticWrapper</summary>
        </member>
        <member name="F:Tweetinvi.Core.Wrappers.Fakes.StubIJObjectStaticWrapper.GetJobjectFromJsonString">
            <summary>Sets the stub of IJObjectStaticWrapper.GetJobjectFromJson(String json)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Wrappers.Fakes.StubIJObjectStaticWrapper.GetNodeRootNameJToken">
            <summary>Sets the stub of IJObjectStaticWrapper.GetNodeRootName(JToken jToken)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIJObjectStaticWrapper.ToObjectOf1JObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.Linq.JObject,``0})">
            <summary>Sets stubs of ToObject(JObject jObject)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIJObjectStaticWrapper.ToObjectOf1JToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.Linq.JToken,``0})">
            <summary>Sets stubs of ToObject(JToken jToken)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIJObjectStaticWrapper.tc::Tweetinvi#Core#Wrappers#IJObjectStaticWrapper#GetJobjectFromJson(System.String)">
            <summary>Sets the stub of IJObjectStaticWrapper.GetJobjectFromJson(String json)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIJObjectStaticWrapper.tc::Tweetinvi#Core#Wrappers#IJObjectStaticWrapper#GetNodeRootName(Newtonsoft.Json.Linq.JToken)">
            <summary>Sets the stub of IJObjectStaticWrapper.GetNodeRootName(JToken jToken)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIJObjectStaticWrapper.tc::Tweetinvi#Core#Wrappers#IJObjectStaticWrapper#ToObject``1(Newtonsoft.Json.Linq.JObject)">
            <summary>Sets the stub of IJObjectStaticWrapper.ToObject(JObject jObject)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIJObjectStaticWrapper.tc::Tweetinvi#Core#Wrappers#IJObjectStaticWrapper#ToObject``1(Newtonsoft.Json.Linq.JToken)">
            <summary>Sets the stub of IJObjectStaticWrapper.ToObject(JToken jToken)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Wrappers.Fakes.StubIJsonConvertWrapper">
            <summary>Stub type of Tweetinvi.Core.Wrappers.IJsonConvertWrapper</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIJsonConvertWrapper.#ctor">
            <summary>Initializes a new instance of type StubIJsonConvertWrapper</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIJsonConvertWrapper.DeserializeObjectOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets stubs of DeserializeObject(String json)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIJsonConvertWrapper.DeserializeObjectOf1StringJsonConverterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Newtonsoft.Json.JsonConverter[],``0})">
            <summary>Sets stubs of DeserializeObject(String json, JsonConverter[] converters)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIJsonConvertWrapper.tc::Tweetinvi#Core#Wrappers#IJsonConvertWrapper#DeserializeObject``1(System.String)">
            <summary>Sets the stub of IJsonConvertWrapper.DeserializeObject(String json)</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIJsonConvertWrapper.tc::Tweetinvi#Core#Wrappers#IJsonConvertWrapper#DeserializeObject``1(System.String,Newtonsoft.Json.JsonConverter[])">
            <summary>Sets the stub of IJsonConvertWrapper.DeserializeObject(String json, JsonConverter[] converters)</summary>
        </member>
        <member name="T:Tweetinvi.Core.Wrappers.Fakes.StubIParameterOverrideWrapper">
            <summary>Stub type of Tweetinvi.Core.Wrappers.IParameterOverrideWrapper</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIParameterOverrideWrapper.#ctor">
            <summary>Initializes a new instance of type StubIParameterOverrideWrapper</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIParameterOverrideWrapper.AttachBackingFieldToParameterName">
            <summary>Attaches delegates to emulate StubIParameterOverrideWrapper.ParameterName as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIParameterOverrideWrapper.AttachBackingFieldToParameterValue">
            <summary>Attaches delegates to emulate StubIParameterOverrideWrapper.ParameterValue as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Core.Wrappers.Fakes.StubIParameterOverrideWrapper.ParameterNameGet">
            <summary>Sets the stub of IParameterOverrideWrapper.get_ParameterName()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Wrappers.Fakes.StubIParameterOverrideWrapper.ParameterNameSetString">
            <summary>Sets the stub of IParameterOverrideWrapper.set_ParameterName(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Wrappers.Fakes.StubIParameterOverrideWrapper.ParameterValueGet">
            <summary>Sets the stub of IParameterOverrideWrapper.get_ParameterValue()</summary>
        </member>
        <member name="F:Tweetinvi.Core.Wrappers.Fakes.StubIParameterOverrideWrapper.ParameterValueSetObject">
            <summary>Sets the stub of IParameterOverrideWrapper.set_ParameterValue(Object value)</summary>
        </member>
        <member name="F:Tweetinvi.Core.Wrappers.Fakes.StubIParameterOverrideWrapper.ResolverOverrideGet">
            <summary>Sets the stub of IResolverOverrideWrapper.get_ResolverOverride()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Wrappers.Fakes.StubIParameterOverrideWrapper.tc::Tweetinvi#Core#Wrappers#IParameterOverrideWrapper#ParameterName">
            <summary>Sets the stub of IParameterOverrideWrapper.get_ParameterName()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Wrappers.Fakes.StubIParameterOverrideWrapper.tc::Tweetinvi#Core#Wrappers#IParameterOverrideWrapper#ParameterValue">
            <summary>Sets the stub of IParameterOverrideWrapper.get_ParameterValue()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Wrappers.Fakes.StubIParameterOverrideWrapper.tc::Tweetinvi#Core#Wrappers#IResolverOverrideWrapper#ResolverOverride">
            <summary>Sets the stub of IResolverOverrideWrapper.get_ResolverOverride()</summary>
        </member>
        <member name="T:Tweetinvi.Core.Wrappers.Fakes.StubIResolverOverrideWrapper">
            <summary>Stub type of Tweetinvi.Core.Wrappers.IResolverOverrideWrapper</summary>
        </member>
        <member name="M:Tweetinvi.Core.Wrappers.Fakes.StubIResolverOverrideWrapper.#ctor">
            <summary>Initializes a new instance of type StubIResolverOverrideWrapper</summary>
        </member>
        <member name="F:Tweetinvi.Core.Wrappers.Fakes.StubIResolverOverrideWrapper.ResolverOverrideGet">
            <summary>Sets the stub of IResolverOverrideWrapper.get_ResolverOverride()</summary>
        </member>
        <member name="P:Tweetinvi.Core.Wrappers.Fakes.StubIResolverOverrideWrapper.tc::Tweetinvi#Core#Wrappers#IResolverOverrideWrapper#ResolverOverride">
            <summary>Sets the stub of IResolverOverrideWrapper.get_ResolverOverride()</summary>
        </member>
        <member name="T:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException">
            <summary>Shim type of Tweetinvi.Logic.Exceptions.TwitterException</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.#ctor(Tweetinvi.Logic.Exceptions.TwitterException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.Bind(Tweetinvi.Core.Exceptions.ITwitterException)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.ConstructorIWebExceptionInfoExtractorWebExceptionString">
            <summary>Sets the shim of TwitterException.TwitterException(IWebExceptionInfoExtractor webExceptionInfoExtractor, WebException webException, String url)</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.ConstructorStringString">
            <summary>Sets the shim of TwitterException.TwitterException(String url, String message)</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.CreationDateGet">
            <summary>Sets the shim of TwitterException.get_CreationDate()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.CreationDateSetDateTime">
            <summary>Sets the shim of TwitterException.set_CreationDate(DateTime value)</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.StatusCodeGet">
            <summary>Sets the shim of TwitterException.get_StatusCode()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.StatusCodeSetInt32">
            <summary>Sets the shim of TwitterException.set_StatusCode(Int32 value)</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.ToString">
            <summary>Sets the shim of TwitterException.ToString()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.TwitterDescriptionGet">
            <summary>Sets the shim of TwitterException.get_TwitterDescription()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.TwitterDescriptionSetString">
            <summary>Sets the shim of TwitterException.set_TwitterDescription(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.TwitterExceptionInfosGet">
            <summary>Sets the shim of TwitterException.get_TwitterExceptionInfos()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.TwitterExceptionInfosSetIEnumerableOfITwitterExceptionInfo">
            <summary>Sets the shim of TwitterException.set_TwitterExceptionInfos(IEnumerable`1&lt;ITwitterExceptionInfo&gt; value)</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.URLGet">
            <summary>Sets the shim of TwitterException.get_URL()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.URLSetString">
            <summary>Sets the shim of TwitterException.set_URL(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.WebExceptionGet">
            <summary>Sets the shim of TwitterException.get_WebException()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.WebExceptionSetWebException">
            <summary>Sets the shim of TwitterException.set_WebException(WebException value)</summary>
        </member>
        <member name="T:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.AllInstances.CreationDateGet">
            <summary>Sets the shim of TwitterException.get_CreationDate()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.AllInstances.CreationDateSetDateTime">
            <summary>Sets the shim of TwitterException.set_CreationDate(DateTime value)</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.AllInstances.StatusCodeGet">
            <summary>Sets the shim of TwitterException.get_StatusCode()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.AllInstances.StatusCodeSetInt32">
            <summary>Sets the shim of TwitterException.set_StatusCode(Int32 value)</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.AllInstances.ToString01">
            <summary>Sets the shim of TwitterException.ToString()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.AllInstances.TwitterDescriptionGet">
            <summary>Sets the shim of TwitterException.get_TwitterDescription()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.AllInstances.TwitterDescriptionSetString">
            <summary>Sets the shim of TwitterException.set_TwitterDescription(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.AllInstances.TwitterExceptionInfosGet">
            <summary>Sets the shim of TwitterException.get_TwitterExceptionInfos()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.AllInstances.TwitterExceptionInfosSetIEnumerableOfITwitterExceptionInfo">
            <summary>Sets the shim of TwitterException.set_TwitterExceptionInfos(IEnumerable`1&lt;ITwitterExceptionInfo&gt; value)</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.AllInstances.URLGet">
            <summary>Sets the shim of TwitterException.get_URL()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.AllInstances.URLSetString">
            <summary>Sets the shim of TwitterException.set_URL(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.AllInstances.WebExceptionGet">
            <summary>Sets the shim of TwitterException.get_WebException()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.ShimTwitterException.AllInstances.WebExceptionSetWebException">
            <summary>Sets the shim of TwitterException.set_WebException(WebException value)</summary>
        </member>
        <member name="T:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException">
            <summary>Stub type of Tweetinvi.Logic.Exceptions.TwitterException</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.#ctor(Tweetinvi.Core.Exceptions.IWebExceptionInfoExtractor,System.Net.WebException,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.AttachBackingFieldToCreationDate">
            <summary>Attaches delegates to emulate StubTwitterException.CreationDate as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubTwitterException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubTwitterException.Source as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.AttachBackingFieldToStatusCode">
            <summary>Attaches delegates to emulate StubTwitterException.StatusCode as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.AttachBackingFieldToTwitterDescription">
            <summary>Attaches delegates to emulate StubTwitterException.TwitterDescription as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.AttachBackingFieldToTwitterExceptionInfos">
            <summary>Attaches delegates to emulate StubTwitterException.TwitterExceptionInfos as a property with a backing field.</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.AttachBackingFieldToURL">
            <summary>Attaches delegates to emulate StubTwitterException.URL as a property with a backing field.</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.CreationDateGet">
            <summary>Sets the stub of TwitterException.get_CreationDate()</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.CreationDateSetDateTime">
            <summary>Sets the stub of TwitterException.set_CreationDate(DateTime value)</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of WebException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of WebException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.InitializeStub">
            <summary>Initializes a new instance of type StubTwitterException</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.StatusCodeGet">
            <summary>Sets the stub of TwitterException.get_StatusCode()</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.StatusCodeSetInt32">
            <summary>Sets the stub of TwitterException.set_StatusCode(Int32 value)</summary>
        </member>
        <member name="M:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.ToString">
            <summary>Sets the stub of TwitterException.ToString()</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.ToString01">
            <summary>Sets the stub of TwitterException.ToString()</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.TwitterDescriptionGet">
            <summary>Sets the stub of TwitterException.get_TwitterDescription()</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.TwitterDescriptionSetString">
            <summary>Sets the stub of TwitterException.set_TwitterDescription(String value)</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.TwitterExceptionInfosGet">
            <summary>Sets the stub of TwitterException.get_TwitterExceptionInfos()</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.TwitterExceptionInfosSetIEnumerableOfITwitterExceptionInfo">
            <summary>Sets the stub of TwitterException.set_TwitterExceptionInfos(IEnumerable`1&lt;ITwitterExceptionInfo&gt; value)</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.URLGet">
            <summary>Sets the stub of TwitterException.get_URL()</summary>
        </member>
        <member name="F:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.URLSetString">
            <summary>Sets the stub of TwitterException.set_URL(String value)</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.CreationDate">
            <summary>Sets the stub of TwitterException.get_CreationDate()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.StatusCode">
            <summary>Sets the stub of TwitterException.get_StatusCode()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.TwitterDescription">
            <summary>Sets the stub of TwitterException.get_TwitterDescription()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.TwitterExceptionInfos">
            <summary>Sets the stub of TwitterException.get_TwitterExceptionInfos()</summary>
        </member>
        <member name="P:Tweetinvi.Logic.Exceptions.Fakes.StubTwitterException.URL">
            <summary>Sets the stub of TwitterException.get_URL()</summary>
        </member>
    </members>
</doc>
